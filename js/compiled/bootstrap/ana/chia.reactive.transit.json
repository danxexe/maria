["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Central point where reactivity is coordinated","~:file","chia/reactive.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:shadow/protocol-prefixes",["~#set",["chia$reactive$IInvalidate$","chia$reactive$ITransitionPattern$","chia$reactive$ITransitionSimple$"]],"~:use-macros",["^ ","~$log-observation*","~$chia.reactive"],"~:excludes",["^A",[]],"~:macros",["^ ","~$silently",["^ ","~:arglists",["~#list",[["~$&","~$body"]]],"^5",187,"^6",1,"^4","chia/reactive.cljc","~:name","~$chia.reactive/silently","~:ns","^D","~:macro",true],"~$observe-pattern!",["^ ","^H",["^I",[["~$source","~$f","~$&","~$args"]]],"^3","Logs observation of `source`, which should implement `ITransitionPattern`.\n   `f` will be called with result of previous call to `observe-pattern!` for `source`","^5",207,"^6",1,"^4","chia/reactive.cljc","^K","~$chia.reactive/observe-pattern!","^M","^D","^N",true],"~$with-dependency-tracking!",["^ ","^H",["^I",[[["^ ","~:as","~$options","~:keys",["~$schedule","~$reader"],"~:or",["^ ","^W",["^I",["~$quote","~$.call"]]]],"~$&","^J"]]],"^3","Evaluates `body`, creating dependencies for `reader` with arbitrary data sources.","^5",43,"^6",1,"^4","chia/reactive.cljc","^K","~$chia.reactive/with-dependency-tracking!","^M","^D","^N",true],"~$observe-simple!",["^ ","^H",["^I",[["^P"]]],"^3","Logs simple observation of `source`, which should implement `ITransitionSimple`","^5",202,"^6",1,"^4","chia/reactive.cljc","^K","~$chia.reactive/observe-simple!","^M","^D","^N",true]],"^K","^D","~:imports",null,"~:requires",["^ ","~$chia.util.macros","^15","~$m","^15","~$applied-science.js-interop","^16","~$j","^16","^=","^=","~$goog","^17"],"~:seen",["^A",["~:require","~:require-macros"]],"~:shadow/js-access-global",["^A",["Error"]],"~:uses",null,"~:defs",["^ ","~$invalidate-readers!",["^ ","~:protocol-inline",null,"^2",["^ ","^4","chia/reactive.cljc","^5",75,"^6",7,"^7",75,"^8",26,"^H",["^I",["^Z",["^I",[["^P"]]]]],"^3","Invalidates all readers of `source`"],"^K","~$chia.reactive/invalidate-readers!","^4","chia/reactive.cljc","^8",26,"~:method-params",["^I",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^6",1,"~:variadic?",false,"^5",75,"^7",75,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^Z",["^I",[["^P"]]]]],"^3","Invalidates all readers of `source`"],"~$ITransitionSimple",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",96,"^6",14,"^7",96,"^8",31,"~:protocol-symbol",true,"~:jsdoc",["^I",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","~$on-transition",[["^P","~$observed?"]]]]],"^1H",true,"^K","~$chia.reactive/ITransitionSimple","^4","chia/reactive.cljc","^8",31,"^6",1,"^5",96,"^1J",["^ ","^1K",["^ ","^1L",[["^P","^1M"]]]],"~:info",null,"^7",96,"~:tag","~$any","~:impls",["^A",["~$cells.cell/Cell"]],"^1I",["^I",["@interface"]]],"~$remove-dependent!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",149,"^6",8,"^7",149,"^8",25,"~:private",true,"^H",["^I",["^Z",["^I",[["^P","^X"]]]]]],"^1U",true,"^K","~$chia.reactive/remove-dependent!","^4","chia/reactive.cljc","^8",25,"^1A",["^I",[["^P","^X"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",149,"~:ret-tag","~$boolean","^7",149,"^1E",2,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X"]]]]]],"~$dependencies",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",124,"^6",20,"^7",124,"^8",32,"^1U",true],"^1U",true,"^K","~$chia.reactive/dependencies","^4","chia/reactive.cljc","^8",32,"^6",1,"^5",124,"^7",124,"^1P","~$cljs.core/Volatile"],"~$dispose-reader!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",180,"^6",7,"^7",180,"^8",22,"^H",["^I",["^Z",["^I",[["^X"]]]]],"^3","Removes reader from reactive graph."],"^K","~$chia.reactive/dispose-reader!","^4","chia/reactive.cljc","^8",22,"^1A",["^I",[["^X"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",180,"^7",180,"^1E",1,"^1F",true,"^H",["^I",["^Z",["^I",[["^X"]]]]],"^3","Removes reader from reactive graph."],"~$*silent*",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",13,"^6",16,"^7",13,"^8",24,"~:dynamic",true],"^K","~$chia.reactive/*silent*","^4","chia/reactive.cljc","^8",24,"^6",1,"^23",true,"^5",13,"^7",13,"^1P","^1X","^3","Flag to temporarily suspend reactivity"],"~$remove-dependency",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",137,"^6",8,"^7",137,"^8",25,"^1U",true,"^H",["^I",["^Z",["^I",[["^1Y","^X","^P"]]]]]],"^1U",true,"^K","~$chia.reactive/remove-dependency","^4","chia/reactive.cljc","^8",25,"^1A",["^I",[["^1Y","^X","^P"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",137,"^1W",["^A",["~$clj","^1Q","~$clj-nil"]],"^7",137,"^1E",3,"^1F",true,"^H",["^I",["^Z",["^I",[["^1Y","^X","^P"]]]]]],"~$on-transition-pattern",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",109,"^6",4,"^7",109,"^8",25,"~:protocol","~$chia.reactive/ITransitionPattern","^3","Called when a reader has evaluated, and `source` is in prev- or next-patterns.\n\n    `next-patterns` is the result of successive applications of `observe-pattern!` during a read.\n    `prev-patterns` is for comparison with the last read.","^H",["^I",["^Z",["^I",[["^P","^X","~$prev-patterns","~$next-patterns"]]]]]],"^2:","^2;","^K","~$chia.reactive/on-transition-pattern","^4","chia/reactive.cljc","^8",25,"^1A",["^I",[["^P","^X","^2<","^2="]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",107,"^1W","^1Q","^7",109,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2<","^2="]]]]],"^3","Called when a reader has evaluated, and `source` is in prev- or next-patterns.\n\n    `next-patterns` is the result of successive applications of `observe-pattern!` during a read.\n    `prev-patterns` is for comparison with the last read."],"~$*reader*",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",9,"^6",16,"^7",9,"^8",24,"^23",true],"^K","~$chia.reactive/*reader*","^4","chia/reactive.cljc","^8",24,"^6",1,"^23",true,"^5",9,"^7",9,"^1P","^28","^3","The reader being evaluated"],"~$transition-simple!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",160,"^6",7,"^7",160,"^8",25,"^H",["^I",["^Z",["^I",[["^P","^X","~$prev","~$next"]]]]]],"^K","~$chia.reactive/transition-simple!","^4","chia/reactive.cljc","^8",25,"^1A",["^I",[["^P","^X","^2B","^2C"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",160,"^1W",["^A",["^1Q","^28"]],"^7",160,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2B","^2C"]]]]]],"~$dependents",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",121,"^6",20,"^7",121,"^8",30,"^1U",true],"^1U",true,"^K","~$chia.reactive/dependents","^4","chia/reactive.cljc","^8",30,"^6",1,"^5",121,"^7",121,"^1P","^1["],"~$add-dependent",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",126,"^6",8,"^7",126,"^8",21,"^1U",true,"^H",["^I",["^Z",["^I",[["^2E","^P","^X","~$edge-data"]]]]]],"^1U",true,"^K","~$chia.reactive/add-dependent","^4","chia/reactive.cljc","^8",21,"^1A",["^I",[["^2E","^P","^X","^2H"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",126,"^1W",["^A",["^27","^1Q"]],"^7",126,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^2E","^P","^X","^2H"]]]]]],"~$transition-patterns!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",166,"^6",7,"^7",166,"^8",27,"^H",["^I",["^Z",["^I",[["^P","^X","^2B","^2C"]]]]]],"^K","~$chia.reactive/transition-patterns!","^4","chia/reactive.cljc","^8",27,"^1A",["^I",[["^P","^X","^2B","^2C"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",166,"^1W","^1Q","^7",166,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2B","^2C"]]]]]],"~$transition!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",172,"^6",7,"^7",172,"^8",18,"^H",["^I",["^Z",["^I",[["^P","^X","^2<","^2="]]]]],"^3","Updates watch for a source<>reader combo. Handles effectful updating of `source`."],"^K","~$chia.reactive/transition!","^4","chia/reactive.cljc","^8",18,"^1A",["^I",[["^P","^X","^2<","^2="]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",172,"^1W",["^A",["^1Q","^28"]],"^7",172,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2<","^2="]]]]],"^3","Updates watch for a source<>reader combo. Handles effectful updating of `source`."],"~$remove-dependent",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",129,"^6",8,"^7",129,"^8",24,"^1U",true,"^H",["^I",["^Z",["^I",[["^2E","^P","^X"]]]]]],"^1U",true,"^K","~$chia.reactive/remove-dependent","^4","chia/reactive.cljc","^8",24,"^1A",["^I",[["^2E","^P","^X"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",129,"^1W",["^A",["^27","^1Q","^28"]],"^7",129,"^1E",3,"^1F",true,"^H",["^I",["^Z",["^I",[["^2E","^P","^X"]]]]]],"~$invalidate!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",65,"^6",7,"^7",65,"^8",18,"^H",["^I",["^Z",["^I",[["^X"],["^X","~$info"]]]]],"^3","Invalidates `reader` (triggers re-evaluation)","~:top-fn",["^ ","^1D",false,"~:fixed-arity",2,"^1E",2,"^1A",["^I",[["^X"],["^X","^2Q"]]],"^H",["^I",[["^X"],["^X","^2Q"]]],"^1C",["^I",[null,null]]]],"^K","~$chia.reactive/invalidate!","^4","chia/reactive.cljc","^8",18,"^2R",["^ ","^1D",false,"^2S",2,"^1E",2,"^1A",["^I",[["^X"],["^X","^2Q"]]],"^H",["^I",[["^X"],["^X","^2Q"]]],"^1C",["^I",[null,null]]],"^1A",["^I",[["^X"],["^X","^2Q"]]],"^1B",null,"^2S",2,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^1K",[["^ ","^2S",1,"^1D",false,"^1P","^1Q"],["^ ","^2S",2,"^1D",false,"^1P",["^A",["^1Q","^28"]]]],"^5",65,"^7",65,"^1E",2,"^1F",true,"^H",["^I",[["^X"],["^X","^2Q"]]],"^3","Invalidates `reader` (triggers re-evaluation)"],"~$handle-next-deps!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",33,"^6",7,"^7",33,"^8",24,"^H",["^I",["^Z",["^I",[["^X","~$next-deps"]]]]]],"^K","~$chia.reactive/handle-next-deps!","^4","chia/reactive.cljc","^8",24,"^1A",["^I",[["^X","^2V"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",33,"^1W","^28","^7",33,"^1E",2,"^1F",true,"^H",["^I",["^Z",["^I",[["^X","^2V"]]]]]],"~$add-dependent!",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",142,"^6",8,"^7",142,"^8",22,"^1U",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2H"]]]]]],"^1U",true,"^K","~$chia.reactive/add-dependent!","^4","chia/reactive.cljc","^8",22,"^1A",["^I",[["^P","^X","^2H"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",142,"^1W","^1X","^7",142,"^1E",3,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^X","^2H"]]]]]],"~$IInvalidate",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",59,"^6",14,"^7",59,"^8",25,"^1H",true,"^1I",["^I",["@interface"]],"^1J",["^ ","^1K",["^ ","~$-invalidate!",[["^X"]]]]],"^1H",true,"^K","~$chia.reactive/IInvalidate","^4","chia/reactive.cljc","^8",25,"^6",1,"^5",59,"^1J",["^ ","^1K",["^ ","^2[",[["^X"]]]],"^1O",null,"^7",59,"^1P","^1Q","^1R",["^A",["~$chia.view/FunctionalView","~$x65940"]],"^1I",["^I",["@interface"]]],"^1L",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",97,"^6",4,"^7",97,"^8",17,"^2:","^1N","^3","Called when `source` is added or removed from the reactive graph.","^H",["^I",["^Z",["^I",[["^P","^1M"]]]]]],"^2:","^1N","^K","~$chia.reactive/on-transition","^4","chia/reactive.cljc","^8",17,"^1A",["^I",[["^P","^1M"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",96,"^1W","^1Q","^7",97,"^1E",2,"^1F",true,"^H",["^I",["^Z",["^I",[["^P","^1M"]]]]],"^3","Called when `source` is added or removed from the reactive graph."],"~$add-dependency",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",134,"^6",8,"^7",134,"^8",22,"^1U",true,"^H",["^I",["^Z",["^I",[["^1Y","^X","^P","^2H"]]]]]],"^1U",true,"^K","~$chia.reactive/add-dependency","^4","chia/reactive.cljc","^8",22,"^1A",["^I",[["^1Y","^X","^P","^2H"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",134,"^1W",["^A",["^27","^1Q"]],"^7",134,"^1E",4,"^1F",true,"^H",["^I",["^Z",["^I",[["^1Y","^X","^P","^2H"]]]]]],"^2[",["^ ","^1?",null,"^2",["^ ","^4","chia/reactive.cljc","^5",60,"^6",4,"^7",60,"^8",16,"^2:","^30","^3","We 'invalidate' a reader whenever one of its dependencies has changed.\n     Implementors should ensure that a call to `invalidate` will cause the\n     reader to re-evaluate.","^H",["^I",["^Z",["^I",[["^X"]]]]]],"^2:","^30","^K","~$chia.reactive/-invalidate!","^4","chia/reactive.cljc","^8",16,"^1A",["^I",[["^X"]]],"^1B",null,"^1C",["^I",[null,null]],"^6",1,"^1D",false,"^5",59,"^1W","^1Q","^7",60,"^1E",1,"^1F",true,"^H",["^I",["^Z",["^I",[["^X"]]]]],"^3","We 'invalidate' a reader whenever one of its dependencies has changed.\n     Implementors should ensure that a call to `invalidate` will cause the\n     reader to re-evaluate."],"~$*reader-dependency-log*",["^ ","^2",["^ ","^4","chia/reactive.cljc","^5",17,"^6",16,"^7",17,"^8",39,"^23",true],"^K","~$chia.reactive/*reader-dependency-log*","^4","chia/reactive.cljc","^8",39,"^6",1,"^23",true,"^5",17,"^7",17,"^1P","^28","^3","Keeps track of what data sources a reader accesses during compute"],"~$ITransitionPattern",["^ ","^2",["^ ","^1H",true,"^4","chia/reactive.cljc","^8",32,"^6",14,"^5",107,"^1J",["^ ","^1K",["^ ","^29",[["^P","^X","^2<","^2="]]]],"^7",107,"^3","Protocol which enables a reactive data source to support pattern-based dependencies.","^1I",["^I",["@interface"]]],"^1H",true,"^K","^2;","^4","chia/reactive.cljc","^8",32,"^6",1,"^5",107,"^1J",["^ ","^1K",["^ ","^29",[["^P","^X","^2<","^2="]]]],"^1O",null,"^7",107,"^1P","^1Q","^1R",["^A",["~$x61957"]],"^3","Protocol which enables a reactive data source to support pattern-based dependencies.","^1I",["^I",["@interface"]]]],"^1:",["^ ","^D","^D","~$r","^D","^=","^=","^15","^15","~$m","^15","^16","^16","~$j","^16"],"~:cljs.analyzer/constants",["^ ","^18",["^A",["~:chia.reactive/simple"]],"~:order",["^3<"]],"~:flags",["^ ","^19",["^A",[]],"^1:",["^A",[]]],"~:js-deps",["^ "],"~:deps",["^17","^=","^15","^16"]]