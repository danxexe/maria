["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","lark/commands/exec.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",23],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$lark.commands.exec","~:imports",null,"~:requires",["^ ","~$lark.commands.registry","^F","~$registry","^F","~$clojure.set","^H","~$set","^H","^<","^<","~$goog","^J"],"~:seen",["^A",["~:require"]],"~:shadow/js-access-global",["^A",["clearTimeout","Error","setTimeout"]],"~:uses",null,"~:defs",["^ ","~$before-exec",["^ ","~:protocol-inline",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",51,"^5",7,"^6",51,"^7",18,"~:arglists",["~#list",["~$quote",["^S",[["~$key","~$f"]]]]],"~:doc","Registers a function `f` which will be called before any command is executed."],"^B","~$lark.commands.exec/before-exec","^3","lark/commands/exec.cljs","^7",18,"~:method-params",["^S",[["^U","~$f"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^5",1,"~:variadic?",false,"^4",51,"~:ret-tag","~$any","^6",51,"~:max-fixed-arity",2,"~:fn-var",true,"^R",["^S",["^T",["^S",[["^U","~$f"]]]]],"^V","Registers a function `f` which will be called before any command is executed."],"~$handler",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",131,"^5",7,"^6",131,"^7",14,"^R",["^S",["^T",["^S",[["~$binding","~$binding-vec"]]]]],"^V","Main handler function which is called whenever a bound keybinding is triggered.\n      Finds context-relevant commands and executes them until one returns true."],"^B","~$lark.commands.exec/handler","^3","lark/commands/exec.cljs","^7",14,"^X",["^S",[["^15","^16"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",131,"^10","~$boolean","^6",131,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^15","^16"]]]]],"^V","Main handler function which is called whenever a bound keybinding is triggered.\n      Finds context-relevant commands and executes them until one returns true."],"~$-before-exec",["^ ","^B","~$lark.commands.exec/-before-exec","^3","lark/commands/exec.cljs","^4",50,"^5",1,"^6",50,"^7",22,"^2",["^ ","^3","lark/commands/exec.cljs","^4",50,"^5",10,"^6",50,"^7",22],"~:tag","~$cljs.core/Volatile"],"~$which-key-time",["^ ","^B","~$lark.commands.exec/which-key-time","^3","lark/commands/exec.cljs","^4",8,"^5",1,"^6",8,"^7",20,"^2",["^ ","^3","lark/commands/exec.cljs","^4",8,"^5",6,"^6",8,"^7",20],"^1;","~$number"],"~$contextual-commands",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",122,"^5",7,"^6",122,"^7",26,"^R",["^S",["^T",["^S",[["~$context"]]]]]],"^B","~$lark.commands.exec/contextual-commands","^3","lark/commands/exec.cljs","^7",26,"^X",["^S",[["^1A"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",122,"^10","~$clj","^6",122,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^1A"]]]]]],"~$clear-which-key",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",15,"^5",7,"^6",15,"^7",22,"^R",["^S",["^T",["^S",[[["^ ","~:keys",["~$timeout"],"~:as","~$current-state"]]]]]],"^V","Fn which toggles which-key off, clearing timeout if it exists."],"^B","~$lark.commands.exec/clear-which-key","^3","lark/commands/exec.cljs","^7",22,"^X",["^S",[["~$p__66816"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",15,"^10",["^A",["^1C","~$clj-nil"]],"^6",15,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[[["^ ","^1E",["^1F"],"^1G","^1H"]]]]]],"^V","Fn which toggles which-key off, clearing timeout if it exists."],"~$set-context!",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",45,"^5",7,"^6",45,"^7",19,"^R",["^S",["^T",["^S",[["~$ctx"]]]]],"^V","Mutates command-context by merging provided context map."],"^B","~$lark.commands.exec/set-context!","^3","lark/commands/exec.cljs","^7",19,"^X",["^S",[["^1M"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",45,"^10","^11","^6",45,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^1M"]]]]],"^V","Mutates command-context by merging provided context map."],"~$last-selections",["^ ","^B","~$lark.commands.exec/last-selections","^3","lark/commands/exec.cljs","^4",7,"^5",1,"^6",7,"^7",25,"^2",["^ ","^3","lark/commands/exec.cljs","^4",7,"^5",10,"^6",7,"^7",25],"^1;","^1<"],"~$exec-command-name",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",103,"^5",7,"^6",103,"^7",24,"^R",["^S",["^T",["^S",[["~$name"],["^1R","^1A"]]]]],"^V","Execute a command by name.","~:top-fn",["^ ","^[",false,"~:fixed-arity",2,"^12",2,"^X",["^S",[["^1R"],["^1R","^1A"]]],"^R",["^S",[["^1R"],["^1R","^1A"]]],"^Z",["^S",[null,null]]]],"^B","~$lark.commands.exec/exec-command-name","^3","lark/commands/exec.cljs","^7",24,"^1S",["^ ","^[",false,"^1T",2,"^12",2,"^X",["^S",[["^1R"],["^1R","^1A"]]],"^R",["^S",[["^1R"],["^1R","^1A"]]],"^Z",["^S",[null,null]]],"^X",["^S",[["^1R"],["^1R","^1A"]]],"^Y",null,"^1T",2,"^Z",["^S",[null,null]],"^5",1,"^[",false,"~:methods",[["^ ","^1T",1,"^[",false,"^1;","^11"],["^ ","^1T",2,"^[",false,"^1;",["^A",["^18","^11","^1K"]]]],"^4",103,"^6",103,"^12",2,"^13",true,"^R",["^S",[["^1R"],["^1R","^1A"]]],"^V","Execute a command by name."],"~$get-command",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",84,"^5",7,"^6",84,"^7",18,"^R",["^S",["^T",["^S",[["^1A","^1R"]]]]],"^V","Returns command associated with name, if it exists.\n      Add contextual data, :exec? and :intercept?."],"^B","~$lark.commands.exec/get-command","^3","lark/commands/exec.cljs","^7",18,"^X",["^S",[["^1A","^1R"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",84,"^10",["^A",["^1C","^11"]],"^6",84,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^1A","^1R"]]]]],"^V","Returns command associated with name, if it exists.\n      Add contextual data, :exec? and :intercept?."],"~$_",["^ ","^B","~$lark.commands.exec/_","^3","lark/commands/exec.cljs","^4",22,"^5",1,"^6",22,"^7",11,"^2",["^ ","^3","lark/commands/exec.cljs","^4",22,"^5",10,"^6",22,"^7",11],"^1;","^1K"],"~$contextual?",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",90,"^5",7,"^6",90,"^7",18,"^R",["^S",["^T",["^S",[["~$command"]]]]],"^V","Returns true if the command will have an effect (either by executing or\n      preventingDefault). Expects a command which has already had `apply-context` applied."],"^B","~$lark.commands.exec/contextual?","^3","lark/commands/exec.cljs","^7",18,"^X",["^S",[["^1["]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",90,"^10","^11","^6",90,"^12",1,"^13",true,"^R",["^S",["^T",["^S",[["^1["]]]]],"^V","Returns true if the command will have an effect (either by executing or\n      preventingDefault). Expects a command which has already had `apply-context` applied."],"~$add-context-augmenter!",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",57,"^5",7,"^6",57,"^7",29,"^R",["^S",["^T",["^S",[["^U","~$f"]]]]],"^V","Registers a reducing function which will be applied to the context before it is returned from `get-context`."],"^B","~$lark.commands.exec/add-context-augmenter!","^3","lark/commands/exec.cljs","^7",29,"^X",["^S",[["^U","~$f"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",57,"^10","^11","^6",57,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^U","~$f"]]]]],"^V","Registers a reducing function which will be applied to the context before it is returned from `get-context`."],"~$apply-context",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",73,"^5",7,"^6",73,"^7",20,"^R",["^S",["^T",["^S",[["^1A",["^ ","^1E",["~$exec-pred","~$intercept-pred"],"^1G","~$command-entry"]]]]]],"^V","Add contextual data to command. Adds keys `:exec?`, whether the command will be evaluated\n      given the current context, and `:intercept?`, whether the command should preventDefault\n      even if it is not executed and returns true."],"^B","~$lark.commands.exec/apply-context","^3","lark/commands/exec.cljs","^7",20,"^X",["^S",[["^1A","~$p__66901"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",73,"^10",["^A",["^1C","^11"]],"^6",73,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^1A",["^ ","^1E",["^24","^25"],"^1G","^26"]]]]]],"^V","Add contextual data to command. Adds keys `:exec?`, whether the command will be evaluated\n      given the current context, and `:intercept?`, whether the command should preventDefault\n      even if it is not executed and returns true."],"~$-context-augmenters",["^ ","^B","~$lark.commands.exec/-context-augmenters","^3","lark/commands/exec.cljs","^4",56,"^5",1,"^6",56,"^7",29,"^2",["^ ","^3","lark/commands/exec.cljs","^4",56,"^5",10,"^6",56,"^7",29],"^1;","^1<"],"~$get-context",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",62,"^5",7,"^6",62,"^7",18,"^R",["^S",["^T",["^S",[[],["~$event-attrs"]]]]],"^V","Returns the current command context, as determined by previous calls to `set-context!`,\n      after context augmenting fns have been applied.","^1S",["^ ","^[",false,"^1T",1,"^12",1,"^X",["^S",[[],["^2<"]]],"^R",["^S",[[],["^2<"]]],"^Z",["^S",[null,null]]]],"^B","~$lark.commands.exec/get-context","^3","lark/commands/exec.cljs","^7",18,"^1S",["^ ","^[",false,"^1T",1,"^12",1,"^X",["^S",[[],["^2<"]]],"^R",["^S",[[],["^2<"]]],"^Z",["^S",[null,null]]],"^X",["^S",[[],["^2<"]]],"^Y",null,"^1T",1,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^1V",[["^ ","^1T",0,"^[",false,"^1;","^11"],["^ ","^1T",1,"^[",false,"^1;","^11"]],"^4",62,"^6",62,"^12",1,"^13",true,"^R",["^S",[[],["^2<"]]],"^V","Returns the current command context, as determined by previous calls to `set-context!`,\n      after context augmenting fns have been applied."],"~$debug?",["^ ","^B","~$lark.commands.exec/debug?","^3","lark/commands/exec.cljs","^4",5,"^5",1,"^6",5,"^7",12,"^2",["^ ","^3","lark/commands/exec.cljs","^4",5,"^5",6,"^6",5,"^7",12],"^1;","^18"],"~$exec-command",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",96,"^5",7,"^6",96,"^7",19,"^R",["^S",["^T",["^S",[["^1A",["^ ","^1E",["^1[","~$exec?","~$intercept?","^1R"]]]]]]],"^V","Execute a command (returned by `get-command`)"],"^B","~$lark.commands.exec/exec-command","^3","lark/commands/exec.cljs","^7",19,"^X",["^S",[["^1A","~$p__66930"]]],"^Y",null,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^4",96,"^10",["^A",["^18","^11","^1K"]],"^6",96,"^12",2,"^13",true,"^R",["^S",["^T",["^S",[["^1A",["^ ","^1E",["^1[","^2A","^2B","^1R"]]]]]]],"^V","Execute a command (returned by `get-command`)"],"~$keyset-commands",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",109,"^5",7,"^6",109,"^7",22,"^R",["^S",["^T",["^S",[[],["~$modifiers-down","~$current-context"]]]]],"^V","Returns commands which are at least partial matches of the currently pressed keys.","^1S",["^ ","^[",false,"^1T",2,"^12",2,"^X",["^S",[[],["^2F","^2G"]]],"^R",["^S",[[],["^2F","^2G"]]],"^Z",["^S",[null,null]]]],"^B","~$lark.commands.exec/keyset-commands","^3","lark/commands/exec.cljs","^7",22,"^1S",["^ ","^[",false,"^1T",2,"^12",2,"^X",["^S",[[],["^2F","^2G"]]],"^R",["^S",[[],["^2F","^2G"]]],"^Z",["^S",[null,null]]],"^X",["^S",[[],["^2F","^2G"]]],"^Y",null,"^1T",2,"^Z",["^S",[null,null]],"^5",1,"^[",false,"^1V",[["^ ","^1T",0,"^[",false,"^1;","^11"],["^ ","^1T",2,"^[",false,"^1;","~$cljs.core/LazySeq"]],"^4",109,"^6",109,"^12",2,"^13",true,"^R",["^S",[[],["^2F","^2G"]]],"^V","Returns commands which are at least partial matches of the currently pressed keys."],"^1A",["^ ","^B","~$lark.commands.exec/context","^3","lark/commands/exec.cljs","^4",6,"^5",1,"^6",6,"^7",17,"^2",["^ ","^3","lark/commands/exec.cljs","^4",6,"^5",10,"^6",6,"^7",17],"^1;","^1<"],"~$WHICH_KEY_STATE",["^ ","^B","~$lark.commands.exec/WHICH_KEY_STATE","^3","lark/commands/exec.cljs","^4",10,"^5",1,"^6",10,"^7",25,"^2",["^ ","^3","lark/commands/exec.cljs","^4",10,"^5",10,"^6",10,"^7",25],"^1;","~$cljs.core/Atom"],"~$reverse-compare",["^ ","^Q",null,"^2",["^ ","^3","lark/commands/exec.cljs","^4",127,"^5",6,"^6",127,"^7",21],"^B","~$lark.commands.exec/reverse-compare","^3","lark/commands/exec.cljs","^7",21,"^X",["^S",[["~$a","~$b"]]],"^Y",null,"^Z",["^S",[]],"^5",1,"^[",false,"^4",127,"^10","^1?","^6",127,"^12",2,"^13",true,"^R",null,"^V","Comparator function with inverse order to regular `compare`"]],"~:require-macros",["^ ","^<","^<"],"~:cljs.analyzer/constants",["^ ","^K",["^A",["~:exec-pred","~:intercept-pred","~:last-exec-keys","~:exec","~:binding-vec","^B","~:command","~:modifiers-down","~:internal","~:which-key/active?","~:binding","~:block-view","~:priority","~:intercept?","~:exec?","~:timeout","~:lark.commands/Pass"]],"~:order",["^2X","^2Z","^34","^2Y","^30","^2R","^2S","^33","^32","^2W","^B","^35","^2U","^2[","^2V","^31","^2T"]],"~:flags",["^ ","^L",["^A",[]]],"~:js-deps",["^ "],"~:deps",["^J","^<","^F","^H"]]