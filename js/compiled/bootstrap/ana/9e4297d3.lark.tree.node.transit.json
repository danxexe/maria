["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","lark/tree/node.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$contains-identical-keyword?","~$lark.tree.util"],"~:excludes",["~#set",[]],"~:name","~$lark.tree.node","~:imports",null,"~:requires",["^ ","~$lark.tree.reader","^H","~$rd","^H","~$fast-zip.core","^J","~$z","^J","^<","^<","~$goog","^K"],"~:seen",["^C",["~:require","~:require-macros"]],"~:uses",null,"~:defs",["^ ","~$whitespace?",["^ ","~:protocol-inline",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",14,"^5",7,"^6",14,"^7",18,"~:arglists",["~#list",["~$quote",["^T",[["~$node"]]]]]],"^D","~$lark.tree.node/whitespace?","^3","lark/tree/node.cljc","^7",18,"~:method-params",["^T",[["^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^T",[null,null]],"^5",1,"~:variadic?",false,"^4",14,"~:ret-tag","~$boolean","^6",14,"~:max-fixed-arity",1,"~:fn-var",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$sexp?",["^ ","^2",["^ ","^3","lark/tree/node.cljc","^4",22,"^5",6,"^6",22,"^7",11],"^D","~$lark.tree.node/sexp?","^3","lark/tree/node.cljc","^7",11,"^5",1,"^4",22,"^6",22,"~:tag","~$function","~:doc","Returns false if node does not have corresponding s-expression (eg. comments and whitespace)"],"~$edges",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",50,"^5",7,"^6",50,"^7",12,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^D","~$lark.tree.node/edges","^3","lark/tree/node.cljc","^7",12,"^X",["^T",[["^V"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",50,"^10",["^C",["~$any","~$clj-nil"]],"^6",50,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$has-edges?",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",44,"^5",7,"^6",44,"^7",17,"^S",["^T",["^U",["^T",[["^V"]]]]],"^18","Returns true if node has 'edges' that mark boundaries. See unwrap/edges for details."],"^D","~$lark.tree.node/has-edges?","^3","lark/tree/node.cljc","^7",17,"^X",["^T",[["^V"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",44,"^10",["^C",["^11","^1<"]],"^6",44,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^18","Returns true if node has 'edges' that mark boundaries. See unwrap/edges for details."],"~$may-contain-children?",["^ ","^D","~$lark.tree.node/may-contain-children?","^3","lark/tree/node.cljc","^4",42,"^5",1,"^6",42,"^7",27,"^2",["^ ","^3","lark/tree/node.cljc","^4",42,"^5",6,"^6",42,"^7",27],"^16","^17"],"~$ast-zip",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",54,"^5",7,"^6",54,"^7",14,"^S",["^T",["^U",["^T",[["~$ast"]]]]],"^18","Given AST, returns zipper"],"^D","~$lark.tree.node/ast-zip","^3","lark/tree/node.cljc","^7",14,"^X",["^T",[["^1B"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",54,"^10","~$fast-zip.core/ZipperLocation","^6",54,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^1B"]]]]],"^18","Given AST, returns zipper"],"~$terminal-node?",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",27,"^5",7,"^6",27,"^7",21,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^D","~$lark.tree.node/terminal-node?","^3","lark/tree/node.cljc","^7",21,"^X",["^T",[["^V"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",27,"^10","^11","^6",27,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$newline?",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",18,"^5",7,"^6",18,"^7",15,"^S",["^T",["^U",["^T",[["^V"]]]]]],"^D","~$lark.tree.node/newline?","^3","lark/tree/node.cljc","^7",15,"^X",["^T",[["^V"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",18,"^10","^11","^6",18,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^V"]]]]]],"~$comment?",["^ ","^R",null,"^2",["^ ","^3","lark/tree/node.cljc","^4",8,"^5",7,"^6",8,"^7",15,"^S",["^T",["^U",["^T",[["^V"]]]]],"^18","Returns true if node is a comment - either `;` or `#_` but not `(comment ...)`"],"^D","~$lark.tree.node/comment?","^3","lark/tree/node.cljc","^7",15,"^X",["^T",[["^V"]]],"^Y",null,"^Z",["^T",[null,null]],"^5",1,"^[",false,"^4",8,"^10","^11","^6",8,"^12",1,"^13",true,"^S",["^T",["^U",["^T",[["^V"]]]]],"^18","Returns true if node is a comment - either `;` or `#_` but not `(comment ...)`"]],"^N",["^ ","^A","^A","^<","^<"],"~:cljs.analyzer/constants",["^ ","^L",["^C",["~:comment-block","~:children","~:space","~:number","~:symbol","~:comma","~:uneval","~:string","~:vector","~:token","~:list","~:keyword","~:comment","~:newline","~:map","~:unmatched-delimiter"]],"~:order",["^1X","^1R","^1Y","^1V","^1T","^1Z","^1N","^1P","^1W","^1U","^1S","^1O","^1Q","^1L","^1[","^1M"]],"~:flags",["^ ","^M",["^C",[]],"^N",["^C",[]]],"~:js-deps",["^ "],"~:deps",["^K","^<","^H","^J"]]