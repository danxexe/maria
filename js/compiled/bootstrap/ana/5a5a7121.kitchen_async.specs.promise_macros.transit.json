["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","kitchen_async/specs/promise_macros.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",39],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$kitchen-async.specs.promise-macros","~:imports",null,"~:requires",["^ ","^=","^>","~$s","^>","~$kitchen-async.utils","^F","~$utils","^F","^<","^<","~$goog","^H","^>","^>"],"~:seen",["^A",["~:require"]],"~:uses",null,"~:defs",["^ ","~$maybe-qualified?",["^ ","~:protocol-inline",null,"^2",["^ ","^3","kitchen_async/specs/promise_macros.cljc","^4",12,"^5",8,"^6",12,"^7",24,"~:private",true,"~:arglists",["~#list",["~$quote",["^Q",[["~$sym","~$x"]]]]]],"^O",true,"^B","~$kitchen-async.specs.promise-macros/maybe-qualified?","^3","kitchen_async/specs/promise_macros.cljc","^7",24,"~:method-params",["^Q",[["^S","~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^5",1,"~:variadic?",false,"^4",12,"~:ret-tag","~$boolean","^6",12,"~:max-fixed-arity",2,"~:fn-var",true,"^P",["^Q",["^R",["^Q",[["^S","~$x"]]]]]],"~$catch?",["^ ","^N",null,"^2",["^ ","^3","kitchen_async/specs/promise_macros.cljc","^4",18,"^5",7,"^6",18,"^7",13,"^P",["^Q",["^R",["^Q",[["~$x"]]]]]],"^B","~$kitchen-async.specs.promise-macros/catch?","^3","kitchen_async/specs/promise_macros.cljc","^7",13,"^U",["^Q",[["~$x"]]],"^V",null,"^W",["^Q",[null,null]],"^5",1,"^X",false,"^4",18,"^Y","^Z","^6",18,"^[",1,"^10",true,"^P",["^Q",["^R",["^Q",[["~$x"]]]]]],"~$finally?",["^ ","^N",null,"^2",["^ ","^3","kitchen_async/specs/promise_macros.cljc","^4",21,"^5",7,"^6",21,"^7",15,"^P",["^Q",["^R",["^Q",[["~$x"]]]]]],"^B","~$kitchen-async.specs.promise-macros/finally?","^3","kitchen_async/specs/promise_macros.cljc","^7",15,"^U",["^Q",[["~$x"]]],"^V",null,"^W",["^Q",[null,null]],"^5",1,"^X",false,"^4",21,"^Y","^Z","^6",21,"^[",1,"^10",true,"^P",["^Q",["^R",["^Q",[["~$x"]]]]]]],"~:require-macros",["^ ","^<","^<","^=","^>","~$s","^>","^>","^>"],"~:cljs.analyzer/constants",["^ ","^I",["^A",["~:args","~$cljs.spec.alpha/*","~$x","~$kitchen-async.promise/try","~:arity-2","~:finally","^12","~$p1__54381#","~:error-name","~:kitchen-async.specs.promise-macros/try-args","~$cljs.core/simple-symbol?","~:error-type","~$cljs.core/vector?","~$cljs.core/=","~:compound-expr","~$cljs.core/count","~$cljs.spec.alpha/and","~$cljs.spec.alpha/cat","~:catch-body","~$finally","~:default","~:catch-clauses","~$cljs.spec.alpha/or","~:params","~$cljs.spec.alpha/fspec","~:finally-body","~$cljs.spec.alpha/tuple","~:op","~$kitchen-async.promise/promise","~$%","~:arity-0","~$cljs.spec.alpha/spec","~$fn*","~:catch","~:kitchen-async.specs.promise-macros/catch-clause","~$cljs.core/fn","~:simple-expr","~:kitchen-async.specs.promise-macros/error-name","~:finally-clause","~$cljs.core/not","~$cljs.core/complement","~:kitchen-async.specs.promise-macros/try-body","~:type-name","~:kitchen-async.specs.promise-macros/error-type","~:kitchen-async.specs.promise-macros/finally-clause","~$cljs.core/symbol?","~$catch","~:body","~$cljs.core/seq?","~$cljs.core/or","~:try-body","~$cljs.core/any?","~:arity-1","^14","~$cljs.spec.alpha/?"]],"~:order",["^1Q","^1M","^17","^1F","^1L","^1K","^1R","^1E","^1A","^1T","^1<","^1B","^1D","^2<","^1O","^1?","^1:","^27","^18","^2;","^1W","~$%","^26","^1H","^23","^22","^25","^1I","^1Y","^21","^1X","^20","^28","^1C","^1P","~$x","^1[","^29","^12","^14","^1V","^1U","^1@","^1=","^1G","^24","^1;","^1N","^1>","^2:","^1J","^1S","^1Z","^2=","^19"]],"~:flags",["^ ","^J",["^A",[]]],"~:js-deps",["^ "],"~:deps",["^H","^<","^>","^F"]]