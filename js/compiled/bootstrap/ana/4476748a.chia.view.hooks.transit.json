["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","React hooks in ClojureScript","~:file","chia/view/hooks.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",20],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:shadow/js-access-properties",["^B",["useLayoutEffect","useRef","useCallback","useImperativeHandle","useMemo","use-debug-value","useReducer","useEffect","useState","useContext"]],"~:name","~$chia.view.hooks","~:js-aliases",["^ ","react","~$module$node_modules$react$index"],"~:imports",null,"~:requires",["^ ","~$chia.view.hiccup","^K","~$impl","~$chia.view.impl","~$props","~$chia.view.props","~$render-loop","~$chia.view.render-loop","~$react","^H","~$r","~$chia.reactive","^=","^=","^H","^H","~$goog","^T","^O","^O","~$registry","~$chia.view.registry","^M","^M","~$hiccup","^K","^S","^S","~$j","~$applied-science.js-interop","^X","^X","^V","^V","^Q","^Q"],"~:seen",["^B",["~:require"]],"~:shadow/js-access-global",["^B",["clearInterval","undefined","Error","setInterval"]],"~:uses",null,"~:defs",["^ ","~$-use-memo",["^ ","^D","~$chia.view.hooks/-use-memo","^4","chia/view/hooks.cljs","^5",31,"^6",1,"^7",31,"^8",15,"^2",["^ ","^4","chia/view/hooks.cljs","^5",31,"^6",6,"^7",31,"^8",15],"~:tag","~$js"],"~$use-ref",["^ ","^D","~$chia.view.hooks/use-ref","^4","chia/view/hooks.cljs","^5",41,"^6",1,"^7",41,"^8",13,"^2",["^ ","^4","chia/view/hooks.cljs","^5",41,"^6",6,"^7",41,"^8",13],"^14","^15"],"~$use-atom",["^ ","~:protocol-inline",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",119,"^6",7,"^7",119,"^8",15,"~:arglists",["~#list",["~$quote",["^1;",[[],["~$initial-state"]]]]],"^3","Returns an atom with `initial-state`. Current view will re-render when value of atom changes.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",["^1;",[[],["^1="]]],"^1:",["^1;",[[],["^1="]]],"~:arglists-meta",["^1;",[null,null]]]],"^D","~$chia.view.hooks/use-atom","^4","chia/view/hooks.cljs","^8",15,"^1>",["^ ","^1?",false,"^1@",1,"^1A",1,"^1B",["^1;",[[],["^1="]]],"^1:",["^1;",[[],["^1="]]],"^1C",["^1;",[null,null]]],"^1B",["^1;",[[],["^1="]]],"~:protocol-impl",null,"^1@",1,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"~:methods",[["^ ","^1@",0,"^1?",false,"^14","~$any"],["^ ","^1@",1,"^1?",false,"^14",["^B",["~$object","^1G","^15"]]]],"^5",119,"^7",119,"^1A",1,"~:fn-var",true,"^1:",["^1;",[[],["^1="]]],"^3","Returns an atom with `initial-state`. Current view will re-render when value of atom changes."],"~$-use-context",["^ ","^D","~$chia.view.hooks/-use-context","^4","chia/view/hooks.cljs","^5",30,"^6",1,"^7",30,"^8",18,"^2",["^ ","^4","chia/view/hooks.cljs","^5",30,"^6",6,"^7",30,"^8",18],"^14","^15"],"~$use-reducer",["^ ","^D","~$chia.view.hooks/use-reducer","^4","chia/view/hooks.cljs","^5",39,"^6",1,"^7",39,"^8",17,"^2",["^ ","^4","chia/view/hooks.cljs","^5",39,"^6",6,"^7",39,"^8",17],"^14","^15"],"~$use-will-unmount",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",90,"^6",7,"^7",90,"^8",23,"^1:",["^1;",["^1<",["^1;",[["~$f"]]]]],"^3","Evaluates `f` when component unmounts."],"^D","~$chia.view.hooks/use-will-unmount","^4","chia/view/hooks.cljs","^8",23,"^1B",["^1;",[["~$f"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",90,"~:ret-tag","^1G","^7",90,"^1A",1,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["~$f"]]]]],"^3","Evaluates `f` when component unmounts."],"~$use-memo",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",95,"^6",7,"^7",95,"^8",15,"^1:",["^1;",["^1<",["^1;",[["~$f"],["~$f","~$key"],["~$f","~$equal?","^1R"]]]]],"^3","Evaluates `f` once, caches and returns result. Re-evaluates when `key` changes.\n\n   Guaranteed to only evaluate once per lifecycle.","^1>",["^ ","^1?",false,"^1@",3,"^1A",3,"^1B",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^1:",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^1C",["^1;",[null,null,null]]]],"^D","~$chia.view.hooks/use-memo","^4","chia/view/hooks.cljs","^8",15,"^1>",["^ ","^1?",false,"^1@",3,"^1A",3,"^1B",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^1:",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^1C",["^1;",[null,null,null]]],"^1B",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^1E",null,"^1@",3,"^1C",["^1;",[null,null,null]],"^6",1,"^1?",false,"^1F",[["^ ","^1@",1,"^1?",false,"^14","^1G"],["^ ","^1@",2,"^1?",false,"^14","^1G"],["^ ","^1@",3,"^1?",false,"^14","^1G"]],"^5",95,"^7",95,"^1A",3,"^1I",true,"^1:",["^1;",[["~$f"],["~$f","^1R"],["~$f","^1S","^1R"]]],"^3","Evaluates `f` once, caches and returns result. Re-evaluates when `key` changes.\n\n   Guaranteed to only evaluate once per lifecycle."],"~$use-forwarded-ref",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",165,"^6",7,"^7",165,"^8",24,"^1:",["^1;",["^1<",["^1;",[[]]]]],"^3","Returns a `ref` which will be forwarded to parent.\n  Requires `:view/forward-ref?` option on this view to be true."],"^D","~$chia.view.hooks/use-forwarded-ref","^4","chia/view/hooks.cljs","^8",24,"^1B",["^1;",[[]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",165,"^1P","^1G","^7",165,"^1A",0,"^1I",true,"^1:",["^1;",["^1<",["^1;",[[]]]]],"^3","Returns a `ref` which will be forwarded to parent.\n  Requires `:view/forward-ref?` option on this view to be true."],"~$use-schedule-update",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",127,"^6",7,"^7",127,"^8",26,"^1:",["^1;",["^1<",["^1;",[[]]]]],"^3","Returns a `forceUpdate`-like function for the current view (not synchronous)."],"^D","~$chia.view.hooks/use-schedule-update","^4","chia/view/hooks.cljs","^8",26,"^1B",["^1;",[[]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",127,"^1P","^1G","^7",127,"^1A",0,"^1I",true,"^1:",["^1;",["^1<",["^1;",[[]]]]],"^3","Returns a `forceUpdate`-like function for the current view (not synchronous)."],"~$use-imperative-handle",["^ ","^D","~$chia.view.hooks/use-imperative-handle","^4","chia/view/hooks.cljs","^5",42,"^6",1,"^7",42,"^8",27,"^2",["^ ","^4","chia/view/hooks.cljs","^5",42,"^6",6,"^7",42,"^8",27],"^14","^15"],"~$->HookAtom",["^ ","^19",null,"^2",["^ ","~:protocols",["^B",["~$cljs.core/IReset","~$cljs.core/ISwap","~$cljs.core/IDeref"]],"^4","chia/view/hooks.cljs","^8",18,"^6",10,"~:factory","~:positional","^5",108,"^7",108,"^1:",["^1;",["^1<",["^1;",[["~$state"]]]]],"~:skip-protocol-flag",["^B",["^21","^22","^23"]],"^3","Positional factory function for chia.view.hooks/HookAtom."],"^20",["^B",["^21","^22","^23"]],"^D","~$chia.view.hooks/->HookAtom","^4","chia/view/hooks.cljs","^8",18,"^1B",["^1;",[["^26"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^24","^25","^5",108,"^1P","~$chia.view.hooks/HookAtom","^7",108,"^1A",1,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["^26"]]]]],"^27",["^B",["^21","^22","^23"]],"^3","Positional factory function for chia.view.hooks/HookAtom."],"~$sentinel",["^ ","^2",["^ ","^4","chia/view/hooks.cljs","^5",12,"^6",20,"^7",12,"^8",28,"~:private",true],"^2;",true,"^D","~$chia.view.hooks/sentinel","^4","chia/view/hooks.cljs","^8",28,"^6",1,"^5",12,"^7",12,"^14","^1H"],"~$effect*",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",55,"^6",8,"^7",55,"^8",15,"^2;",true,"^1:",["^1;",["^1<",["^1;",[["~$native-use-effect"]]]]],"^3","~`f` is called on every render, or each time `key` is not= to the previous `key`.\n\n   If a function is returned from `f`, it will be called when the view unmounts."],"^2;",true,"^D","~$chia.view.hooks/effect*","^4","chia/view/hooks.cljs","^8",15,"^1B",["^1;",[["^2>"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",55,"^1P","~$function","^7",55,"^1A",1,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["^2>"]]]]],"^3","~`f` is called on every render, or each time `key` is not= to the previous `key`.\n\n   If a function is returned from `f`, it will be called when the view unmounts."],"~$use-interval",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",133,"^6",7,"^7",133,"^8",19,"^1:",["^1;",["^1<",["^1;",[[["^ ","~:keys",["~$interval","~$now?","^1R"]],"~$f"]]]]]],"^D","~$chia.view.hooks/use-interval","^4","chia/view/hooks.cljs","^8",19,"^1B",["^1;",[["~$p__49608","~$f"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",133,"^1P","^1G","^7",133,"^1A",2,"^1I",true,"^1:",["^1;",["^1<",["^1;",[[["^ ","^2B",["^2C","^2D","^1R"]],"~$f"]]]]]],"~$use-layout-effect",["^ ","^2",["^ ","^4","chia/view/hooks.cljs","^5",80,"^6",6,"^7",80,"^8",23],"^D","~$chia.view.hooks/use-layout-effect","^4","chia/view/hooks.cljs","^8",23,"^6",1,"^5",80,"^7",80,"^14","^2@","^3","Like `use-effect` but called synchronously, after DOM operations are complete."],"~$HookAtom",["^ ","~:num-fields",1,"^20",["^B",["^21","^22","^23"]],"^D","^29","^4","chia/view/hooks.cljs","^8",18,"~:type",true,"^6",10,"^5",108,"~:record",false,"^7",108,"^14","^2@","^27",["^B",["^21","^22","^23"]]],"~$-use-effect",["^ ","^D","~$chia.view.hooks/-use-effect","^4","chia/view/hooks.cljs","^5",29,"^6",1,"^7",29,"^8",17,"^2",["^ ","^4","chia/view/hooks.cljs","^5",29,"^6",6,"^7",29,"^8",17],"^14","^15"],"~$use-dom-ref",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",143,"^6",7,"^7",143,"^8",18,"^1:",["^1;",["^1<",["^1;",[["~$f"]]]]],"^3","Returns a ref to be passed as the `:key` to a react view.\n  When mounted, `f` is called once with the referenced DOM element."],"^D","~$chia.view.hooks/use-dom-ref","^4","chia/view/hooks.cljs","^8",18,"^1B",["^1;",[["~$f"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",143,"^1P","^1G","^7",143,"^1A",1,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["~$f"]]]]],"^3","Returns a ref to be passed as the `:key` to a react view.\n  When mounted, `f` is called once with the referenced DOM element."],"~$use-effect",["^ ","^2",["^ ","^4","chia/view/hooks.cljs","^5",73,"^6",6,"^7",73,"^8",16],"^D","~$chia.view.hooks/use-effect","^4","chia/view/hooks.cljs","^8",16,"^6",1,"^5",73,"^7",73,"^14","^2@","^3","~`f` is called on every render, or each time `key` is not= to the previous `key`.\n\n   If a function is returned from `f`, it will be called when the view unmounts."],"~$-use-layout-effect",["^ ","^D","~$chia.view.hooks/-use-layout-effect","^4","chia/view/hooks.cljs","^5",32,"^6",1,"^7",32,"^8",24,"^2",["^ ","^4","chia/view/hooks.cljs","^5",32,"^6",6,"^7",32,"^8",24],"^14","^15"],"~$use-listener",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",154,"^6",7,"^7",154,"^8",19,"^1:",["^1;",["^1<",["^1;",[["~$target","~$event","~$f","~$capture-phase"]]]]]],"^D","~$chia.view.hooks/use-listener","^4","chia/view/hooks.cljs","^8",19,"^1B",["^1;",[["^2V","^2W","~$f","^2X"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",154,"^1P","^1G","^7",154,"^1A",4,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["^2V","^2W","~$f","^2X"]]]]]],"~$use-state",["^ ","^D","~$chia.view.hooks/use-state","^4","chia/view/hooks.cljs","^5",38,"^6",1,"^7",38,"^8",15,"^2",["^ ","^4","chia/view/hooks.cljs","^5",38,"^6",6,"^7",38,"^8",15],"^14","^15"],"~$use-callback",["^ ","^D","~$chia.view.hooks/use-callback","^4","chia/view/hooks.cljs","^5",40,"^6",1,"^7",40,"^8",18,"^2",["^ ","^4","chia/view/hooks.cljs","^5",40,"^6",6,"^7",40,"^8",18],"^14","^15"],"~$use-context",["^ ","^19",null,"^2",["^ ","^4","chia/view/hooks.cljs","^5",49,"^6",7,"^7",49,"^8",18,"^1:",["^1;",["^1<",["^1;",[["~$context-k"]]]]],"^3","Returns binding for context `context-k` (context can be a React context or a globally distinct keyword)"],"^D","~$chia.view.hooks/use-context","^4","chia/view/hooks.cljs","^8",18,"^1B",["^1;",[["^33"]]],"^1E",null,"^1C",["^1;",[null,null]],"^6",1,"^1?",false,"^5",49,"^1P","^1G","^7",49,"^1A",1,"^1I",true,"^1:",["^1;",["^1<",["^1;",[["^33"]]]]],"^3","Returns binding for context `context-k` (context can be a React context or a globally distinct keyword)"],"~$use-debug-value",["^ ","^D","~$chia.view.hooks/use-debug-value","^4","chia/view/hooks.cljs","^5",43,"^6",1,"^7",43,"^8",21,"^2",["^ ","^4","chia/view/hooks.cljs","^5",43,"^6",6,"^7",43,"^8",21],"^14","^15"]],"~:require-macros",["^ ","^=","^=","~$r","^S","^S","^S","~$j","^X","^X","^X"],"~:cljs.analyzer/constants",["^ ","^Y",["^B",["~:key","~:now?","^26","~:interval","~:mutable"]],"~:order",["^26","^3<","^3;","^3:","^39"]],"~:flags",["^ ","^Z",["^B",[]]],"~:js-deps",["^ ","^G",["^ ","~:as","^R"]],"~:deps",["^T","^=","^H","^M","^Q","^S","^X","^V","^K","^O"]]