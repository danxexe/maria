["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cells/cell.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",15],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:macros",["^ ","~$bound-fn",["^ ","~:arglists",["~#list",[["~$&","~$body"]]],"~:doc","Returns an anonymous function which will evaluate in the context of the current cell\n   (useful for handling async-state)","^4",38,"^5",1,"^3","cells/cell.clj","~:name","~$cells.cell/bound-fn","~:ns","~$cells.cell","~:macro",true],"~$cell",["^ ","^D",["^E",[["~$expr"],["~$key","^N"]]],"^G","Returns an anonymous cell. Only one cell will be returned per lexical instance of `cell`,\n  unless a unique `key` is provided. `self` is brought into scope, referring to the current cell.","^4",27,"^5",1,"^3","cells/cell.clj","^H","~$cells.cell/cell","^J","^K","^L",true],"~$defcell",["^ ","^D",["^E",[["~$the-name","~$&","^F"]]],"^G","Defines a named cell.","^4",7,"^5",1,"^3","cells/cell.clj","^H","~$cells.cell/defcell","^J","^K","^L",true]],"^H","^K","~:imports",null,"~:requires",["^ ","~$chia.util","^V","~$u","^V","~$r","~$chia.reactive","^<","^<","~$goog","^X","~$perf","~$chia.util.perf","~$cells.linked-graph","^[","^W","^W","~$g","^[","~$j","~$applied-science.js-interop","^10","^10","^Z","^Z"],"~:seen",["^A",["~:require","~:require-macros"]],"~:shadow/js-access-global",["^A",["undefined","Error"]],"~:uses",null,"~:defs",["^ ","~$complete?",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cells/cell.cljs","^4",88,"^5",7,"^6",88,"^7",16,"^D",["^E",["~$quote",["^E",[["^M"]]]]]],"^H","~$cells.cell/complete?","^3","cells/cell.cljs","^7",16,"~:method-params",["^E",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^E",[null,null]],"^5",1,"~:variadic?",false,"^4",88,"~:ret-tag","~$boolean","^6",88,"~:max-fixed-arity",1,"~:fn-var",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$cell*",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",343,"^5",7,"^6",343,"^7",12,"^D",["^E",["^19",["^E",[["~$f"],["~$f","~$memo-key"]]]]],"^G","Returns cell for function `f`. Optional `memo-key`, a string, will cause cell to\n   be memoized on the currently-evaluating cell or reactive reader.","~:top-fn",["^ ","^1>",false,"~:fixed-arity",2,"^1A",2,"^1;",["^E",[["~$f"],["~$f","^1D"]]],"^D",["^E",[["~$f"],["~$f","^1D"]]],"^1=",["^E",[null,null]]]],"^H","~$cells.cell/cell*","^3","cells/cell.cljs","^7",12,"^1E",["^ ","^1>",false,"^1F",2,"^1A",2,"^1;",["^E",[["~$f"],["~$f","^1D"]]],"^D",["^E",[["~$f"],["~$f","^1D"]]],"^1=",["^E",[null,null]]],"^1;",["^E",[["~$f"],["~$f","^1D"]]],"^1<",null,"^1F",2,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"~:methods",[["^ ","^1F",1,"^1>",false,"~:tag","~$any"],["^ ","^1F",2,"^1>",false,"^1I",["^A",["^1J","~$js","~$cells.cell/Cell"]]]],"^4",343,"^6",343,"^1A",2,"^1B",true,"^D",["^E",[["~$f"],["~$f","^1D"]]],"^G","Returns cell for function `f`. Optional `memo-key`, a string, will cause cell to\n   be memoized on the currently-evaluating cell or reactive reader."],"~$error?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",99,"^5",7,"^6",99,"^7",13,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/error?","^3","cells/cell.cljs","^7",13,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",99,"^1?","^1@","^6",99,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$make-cell",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",327,"^5",8,"^6",327,"^7",17,"~:private",true,"^D",["^E",["^19",["^E",[["~$f","~$owner"]]]]]],"^1P",true,"^H","~$cells.cell/make-cell","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["~$f","^1Q"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",327,"^1?","^1L","^6",327,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["~$f","^1Q"]]]]]],"~$->Cell",["^ ","^18",null,"^2",["^ ","~:protocols",["^A",["~$cljs.core/IWatchable","~$cljs.core/IEquiv","~$cells.linked-graph/ILinkedGraph","~$cljs.core/IReset","~$cljs.core/ISwap","~$cljs.core/IMeta","~$cells.cell/ICell","~$cljs.core/IDeref","~$cljs.core/IPrintWithWriter","~$chia.reactive/ITransitionSimple","~$cljs.core/IWithMeta"]],"^3","cells/cell.cljs","^7",14,"^5",10,"~:factory","~:positional","^4",248,"^6",248,"^D",["^E",["^19",["^E",[["~$state","~$meta"]]]]],"~:skip-protocol-flag",["^A",["^1U","^1V","^1X","^1Y","^1Z","^20","^21","^23"]],"^G","Positional factory function for cells.cell/Cell."],"^1T",["^A",["^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20","^21","^22","^23"]],"^H","~$cells.cell/->Cell","^3","cells/cell.cljs","^7",14,"^1;",["^E",[["^26","^27"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^24","^25","^4",248,"^1?","^1L","^6",248,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^26","^27"]]]]],"^28",["^A",["^1U","^1V","^1X","^1Y","^1Z","^20","^21","^23"]],"^G","Positional factory function for cells.cell/Cell."],"~$log-observation!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",42,"^5",8,"^6",42,"^7",24,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^1P",true,"^H","~$cells.cell/log-observation!","^3","cells/cell.cljs","^7",24,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",42,"^6",42,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^M",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",354,"^5",7,"^6",354,"^7",11,"^D",["^E",["^19",["^E",[["^O","~$value"]]]]]],"^H","^P","^3","cells/cell.cljs","^7",11,"^1;",["^E",[["^O","^2<"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",354,"^1?",["^A",["^1J","^1K","^1L"]],"^6",354,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^O","^2<"]]]]]],"~$dependencies",["^ ","^H","~$cells.cell/dependencies","^3","cells/cell.cljs","^4",365,"^5",1,"^6",365,"^7",18,"^2",["^ ","^3","cells/cell.cljs","^4",365,"^5",6,"^6",365,"^7",18],"^1I","~$function"],"~$*changed*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",175,"^5",26,"^6",175,"^7",35,"^1P",true,"~:dynamic",true],"^1P",true,"^H","~$cells.cell/*changed*","^3","cells/cell.cljs","^7",35,"^5",1,"^2A",true,"^4",175,"^6",175,"^1I","~$clj-nil"],"~$immediate-dependencies",["^ ","^H","~$cells.cell/immediate-dependencies","^3","cells/cell.cljs","^4",363,"^5",1,"^6",363,"^7",28,"^2",["^ ","^3","cells/cell.cljs","^4",363,"^5",6,"^6",363,"^7",28]],"~$message",["^ ","^H","~$cells.cell/message","^3","cells/cell.cljs","^4",102,"^5",1,"^6",102,"^7",13,"^2",["^ ","^3","cells/cell.cljs","^4",102,"^5",6,"^6",102,"^7",13],"^1I","^2?"],"~$view",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",233,"^5",7,"^6",233,"^7",11,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns view of `cell`"],"^H","~$cells.cell/view","^3","cells/cell.cljs","^7",11,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",233,"^1?","^1J","^6",233,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns view of `cell`"],"~$cell?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",29,"^5",7,"^6",29,"^7",12,"^D",["^E",["^19",["^E",[["~$x"]]]]],"^G","Returns true of `x` is a cell."],"^H","~$cells.cell/cell?","^3","cells/cell.cljs","^7",12,"^1;",["^E",[["~$x"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",29,"^1?","^1@","^6",29,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["~$x"]]]]],"^G","Returns true of `x` is a cell."],"~$loading!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",68,"^5",7,"^6",68,"^7",15,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/loading!","^3","cells/cell.cljs","^7",15,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",68,"^1?","^1J","^6",68,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$dispose!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",108,"^5",7,"^6",108,"^7",15,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Cleans up when a cell is deactivated."],"^H","~$cells.cell/dispose!","^3","cells/cell.cljs","^7",15,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",108,"^6",108,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Cleans up when a cell is deactivated."],"~$active?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",127,"^5",7,"^6",127,"^7",14,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/active?","^3","cells/cell.cljs","^7",14,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",127,"^1?","^1J","^6",127,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$eval-cell",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",167,"^5",8,"^6",167,"^7",17,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^1P",true,"^H","~$cells.cell/eval-cell","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",167,"^6",167,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$*read-log*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",38,"^5",26,"^6",38,"^7",36,"^2A",true,"^1P",true],"^1P",true,"^H","~$cells.cell/*read-log*","^3","cells/cell.cljs","^7",36,"^5",1,"^2A",true,"^4",38,"^6",38,"^1I","^2C"],"~$dependents",["^ ","^H","~$cells.cell/dependents","^3","cells/cell.cljs","^4",366,"^5",1,"^6",366,"^7",16,"^2",["^ ","^3","cells/cell.cljs","^4",366,"^5",6,"^6",366,"^7",16],"^1I","^2?"],"~$immediate-dependents",["^ ","^H","~$cells.cell/immediate-dependents","^3","cells/cell.cljs","^4",364,"^5",1,"^6",364,"^7",26,"^2",["^ ","^3","cells/cell.cljs","^4",364,"^5",6,"^6",364,"^7",26]],"~$eval-and-set!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",178,"^5",8,"^6",178,"^7",21,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^1P",true,"^H","~$cells.cell/eval-and-set!","^3","cells/cell.cljs","^7",21,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",178,"^6",178,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$set-conj",["^ ","^H","~$cells.cell/set-conj","^3","cells/cell.cljs","^4",246,"^5",1,"^6",246,"^7",14,"^2",["^ ","^3","cells/cell.cljs","^4",246,"^5",6,"^6",246,"^7",14],"^1I","^2?"],"~$notify-watches",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",189,"^5",7,"^6",189,"^7",21,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/notify-watches","^3","cells/cell.cljs","^7",21,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",189,"^6",189,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$necessary?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",130,"^5",7,"^6",130,"^7",17,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns true if there is a path from `cell` to any watched cell"],"^H","~$cells.cell/necessary?","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",130,"^1?","^1@","^6",130,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns true if there is a path from `cell` to any watched cell"],"~$error!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",71,"^5",7,"^6",71,"^7",13,"^D",["^E",["^19",["^E",[["^M","~$error"]]]]]],"^H","~$cells.cell/error!","^3","cells/cell.cljs","^7",13,"^1;",["^E",[["^M","^37"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",71,"^6",71,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^M","^37"]]]]]],"~$error-st?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",91,"^5",8,"^6",91,"^7",17,"^1P",true,"^D",["^E",["^19",["^E",[["~$st"]]]]]],"^1P",true,"^H","~$cells.cell/error-st?","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["^3:"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",91,"^1?","^1@","^6",91,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^3:"]]]]]],"~$loading?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",85,"^5",7,"^6",85,"^7",15,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/loading?","^3","cells/cell.cljs","^7",15,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",85,"^1?","^1@","^6",85,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$*evaluated*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",176,"^5",26,"^6",176,"^7",37,"^1P",true,"^2A",true],"^1P",true,"^H","~$cells.cell/*evaluated*","^3","cells/cell.cljs","^7",37,"^5",1,"^2A",true,"^4",176,"^6",176,"^1I","^2C"],"~$ICell",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","cells/cell.cljs","^7",19,"^5",14,"^4",26,"~:protocol-info",["^ ","^1H",["^ "]],"^6",26,"^G","Marker protocol to determine if a thing is a cell","~:jsdoc",["^E",["@interface"]]],"^3A",true,"^H","^1[","^3","cells/cell.cljs","^7",19,"^5",1,"^4",26,"^3B",["^ ","^1H",["^ "]],"~:info",null,"^6",26,"^1I","^1J","~:impls",["^A",["^1L"]],"^G","Marker protocol to determine if a thing is a cell","^3C",["^E",["@interface"]]],"~$*error-handler*",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",19,"^5",16,"^6",19,"^7",31,"^2A",true],"^H","~$cells.cell/*error-handler*","^3","cells/cell.cljs","^7",31,"^1;",["^E",[["^37"]]],"^1<",null,"^1=",["^E",[]],"^5",1,"^1>",false,"^2A",true,"^4",19,"^1?","~$ignore","^6",19,"^1A",1,"^1B",true,"^D",null,"^G","Errors are caught during evaluation of cells and their bound-fns.\n   By default, we re-throw the error with information about where it\n   originated. This behaviour can be overridden here."],"~$stabilize!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",195,"^5",8,"^6",195,"^7",18,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Recomputes transitive dependents of `cell`.\n   Returns set of changed cells."],"^1P",true,"^H","~$cells.cell/stabilize!","^3","cells/cell.cljs","^7",18,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",195,"^6",195,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Recomputes transitive dependents of `cell`.\n   Returns set of changed cells."],"~$maybe-activate",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",155,"^5",8,"^6",155,"^7",22,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","When a cell gains an observor, make sure it is active"],"^1P",true,"^H","~$cells.cell/maybe-activate","^3","cells/cell.cljs","^7",22,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",155,"^6",155,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","When a cell gains an observor, make sure it is active"],"~$set-async!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",60,"^5",8,"^6",60,"^7",18,"^1P",true,"^D",["^E",["^19",["^E",[["^M","~$v"]]]]]],"^1P",true,"^H","~$cells.cell/set-async!","^3","cells/cell.cljs","^7",18,"^1;",["^E",[["^M","~$v"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",60,"^6",60,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^M","~$v"]]]]]],"~$watched?",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",135,"^5",7,"^6",135,"^7",15,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns true if `cell` is watched directly"],"^H","~$cells.cell/watched?","^3","cells/cell.cljs","^7",15,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",135,"^1?","^1@","^6",135,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns true if `cell` is watched directly"],"~$*to-evaluate*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",174,"^5",26,"^6",174,"^7",39,"^1P",true,"^2A",true],"^1P",true,"^H","~$cells.cell/*to-evaluate*","^3","cells/cell.cljs","^7",39,"^5",1,"^2A",true,"^4",174,"^6",174,"^1I","^2C"],"~$view-fn",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",228,"^5",7,"^6",228,"^7",14,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns current view-fn for cell"],"^H","~$cells.cell/view-fn","^3","cells/cell.cljs","^7",14,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",228,"^1?",["^A",[null,"^1J"]],"^6",228,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns current view-fn for cell"],"~$*self*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",9,"^5",16,"^6",9,"^7",22,"^2A",true],"^H","~$cells.cell/*self*","^3","cells/cell.cljs","^7",22,"^5",1,"^2A",true,"^4",9,"^6",9,"^1I","^2C","^G","Tracks the currently-evaluating cell."],"~$Cell",["^ ","~:num-fields",2,"^1T",["^A",["^1U","^1V","^1W","^1X","^1Y","^1Z","^1[","^20","^21","^22","^23"]],"^H","^1L","^3","cells/cell.cljs","^7",14,"~:type",true,"^5",10,"^4",248,"~:record",false,"^6",248,"^1I","^2?","^28",["^A",["^1U","^1V","^1X","^1Y","^1Z","^20","^21","^23"]]],"~$status",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",79,"^5",7,"^6",79,"^7",13,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns :error, :loading, or nil"],"^H","~$cells.cell/status","^3","cells/cell.cljs","^7",13,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",79,"^1?",["^A",["^1J","~$cljs.core/Keyword"]],"^6",79,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","Returns :error, :loading, or nil"],"~$with-view",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",223,"^5",7,"^6",223,"^7",16,"^D",["^E",["^19",["^E",[["^M","^3S"]]]]],"^G","Attaches `view-fn` to the metadata of `cell`"],"^H","~$cells.cell/with-view","^3","cells/cell.cljs","^7",16,"^1;",["^E",[["^M","^3S"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",223,"^1?",["^A",["~$clj","~$cljs.core/MetaFn","^2C"]],"^6",223,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^M","^3S"]]]]],"^G","Attaches `view-fn` to the metadata of `cell`"],"~$mark-changed!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",211,"^5",8,"^6",211,"^7",21,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^1P",true,"^H","~$cells.cell/mark-changed!","^3","cells/cell.cljs","^7",21,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",211,"^6",211,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$get-async",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",54,"^5",8,"^6",54,"^7",17,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^1P",true,"^H","~$cells.cell/get-async","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",54,"^1?","^1J","^6",54,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$update-cell*",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",338,"^5",7,"^6",338,"^7",19,"^D",["^E",["^19",["^E",[["^M","~$f"]]]]]],"^H","~$cells.cell/update-cell*","^3","cells/cell.cljs","^7",19,"^1;",["^E",[["^M","~$f"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",338,"^1?","^1J","^6",338,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^M","~$f"]]]]]],"~$complete!",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",76,"^5",7,"^6",76,"^7",16,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/complete!","^3","cells/cell.cljs","^7",16,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",76,"^1?","^1J","^6",76,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$*default-view*",["^ ","^2",["^ ","^3","cells/cell.cljs","^4",13,"^5",16,"^6",13,"^7",30,"^2A",true],"^H","~$cells.cell/*default-view*","^3","cells/cell.cljs","^7",30,"^5",1,"^2A",true,"^4",13,"^6",13,"^G","Views are implemented as metadata on cells. A rendering environment\n   (such as a notebook) can override the default view for cells\n   without affecting views attached to particular cells."],"^37",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",95,"^5",7,"^6",95,"^7",12,"^D",["^E",["^19",["^E",[["^M"]]]]]],"^H","~$cells.cell/error","^3","cells/cell.cljs","^7",12,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",95,"^1?",["^A",[null,"^2C"]],"^6",95,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]]],"~$maybe-deactivate",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",140,"^5",8,"^6",140,"^7",24,"^1P",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","When a cell is unwatched and unnecessary, deactivate"],"^1P",true,"^H","~$cells.cell/maybe-deactivate","^3","cells/cell.cljs","^7",24,"^1;",["^E",[["^M"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",140,"^6",140,"^1A",1,"^1B",true,"^D",["^E",["^19",["^E",[["^M"]]]]],"^G","When a cell is unwatched and unnecessary, deactivate"],"~$on-dispose",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",116,"^5",7,"^6",116,"^7",17,"^D",["^E",["^19",["^E",[["^M","^O","~$f"]]]]],"^G","Registers function `f` at `key` to be called when cell is deactivated."],"^H","~$cells.cell/on-dispose","^3","cells/cell.cljs","^7",17,"^1;",["^E",[["^M","^O","~$f"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",116,"^1?",["^A",[null,"~$object"]],"^6",116,"^1A",3,"^1B",true,"^D",["^E",["^19",["^E",[["^M","^O","~$f"]]]]],"^G","Registers function `f` at `key` to be called when cell is deactivated."],"~$dissoc-empty",["^ ","^18",null,"^2",["^ ","^3","cells/cell.cljs","^4",242,"^5",7,"^6",242,"^7",19,"^D",["^E",["^19",["^E",[["~$coll","~$x"]]]]]],"^H","~$cells.cell/dissoc-empty","^3","cells/cell.cljs","^7",19,"^1;",["^E",[["^4G","~$x"]]],"^1<",null,"^1=",["^E",[null,null]],"^5",1,"^1>",false,"^4",242,"^1?",["^A",["^44","^2C"]],"^6",242,"^1A",2,"^1B",true,"^D",["^E",["^19",["^E",[["^4G","~$x"]]]]]]],"^13",["^ ","^V","^V","~$u","^V","~$r","^W","^<","^<","^K","^K","^Y","^Z","^W","^W","~$j","^10","^10","^10","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^11",["^A",["~:cell/view","~:chia.reactive/simple","~:chia.reactive/transition","^27","~:loading","^26","~:error","~:cell"]],"~:order",["^4O","^4K","^4M","^4N","^4J","^4L","^26","^27"]],"~:flags",["^ ","^12",["^A",[]],"^13",["^A",[]]],"~:js-deps",["^ "],"~:deps",["^X","^<","^[","^V","^W","^10","^Z"]]