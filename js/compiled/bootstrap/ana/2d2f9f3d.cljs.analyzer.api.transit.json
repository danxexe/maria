["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$cljs.env","^N","~$env","^N","~$cljs.analyzer","^P","~$ana","^P","^=","^=","~$goog","^R"],"~:seen",["^B",["~:require"]],"~:shadow/js-access-global",["^B",["Error"]],"~:uses",null,"~:defs",["^ ","^C",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",165,"^6",7,"^7",165,"^8",14,"~:arglists",["~#list",["~$quote",["^Z",[["~$sym"],["~$state","^10"]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",["^Z",[["^10"],["^11","^10"]]],"^Y",["^Z",[["^10"],["^11","^10"]]],"~:arglists-meta",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/find-ns","^4","cljs/analyzer/api.cljc","^8",14,"^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^10"],["^11","^10"]]],"^Y",["^Z",[["^10"],["^11","^10"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[["^10"],["^11","^10"]]],"~:protocol-impl",null,"^14",2,"^17",["^Z",[null,null]],"^6",1,"^13",false,"~:methods",[["^ ","^14",1,"^13",false,"~:tag","~$any"],["^ ","^14",2,"^13",false,"^1;",["^B",[null,"^1<"]]]],"^5",165,"^7",165,"^15",2,"~:fn-var",true,"^Y",["^Z",[["^10"],["^11","^10"]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^D",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",207,"^6",7,"^7",207,"^8",16,"^Y",["^Z",["^[",["^Z",[["~$ns"],["^11","^1>"]]]]],"^3","Removes the namespace named by the symbol.","^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/remove-ns","^4","cljs/analyzer/api.cljc","^8",16,"^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[["^1>"],["^11","^1>"]]],"^19",null,"^14",2,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",1,"^13",false,"^1;","^1<"],["^ ","^14",2,"^13",false,"^1;",["^B",[null,"^1<"]]]],"^5",207,"^7",207,"^15",2,"^1=",true,"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^3","Removes the namespace named by the symbol."],"^E",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",185,"^6",7,"^7",185,"^8",17,"^Y",["^Z",["^[",["^Z",[["^1>"],["^11","^1>"]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/ns-publics","^4","cljs/analyzer/api.cljc","^8",17,"^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[["^1>"],["^11","^1>"]]],"^19",null,"^14",2,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",1,"^13",false,"^1;","^1<"],["^ ","^14",2,"^13",false,"^1;",["^B",[null,"~$clj","^1<"]]]],"^5",185,"^7",185,"^15",2,"^1=",true,"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",55,"^6",7,"^7",55,"^8",18,"^Y",["^Z",["^[",["^Z",[[],["^11"]]]]],"^3","Return the compiler options from compiler state.","^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/get-options","^4","cljs/analyzer/api.cljc","^8",18,"^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[[],["^11"]]],"^19",null,"^14",1,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",0,"^13",false,"^1;","^1<"],["^ ","^14",1,"^13",false,"^1;",["^B",["^1<","~$clj-nil"]]]],"^5",55,"^7",55,"^15",1,"^1=",true,"^Y",["^Z",[[],["^11"]]],"^3","Return the compiler options from compiler state."],"~$warning-enabled?",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",43,"^6",7,"^7",43,"^8",23,"^Y",["^Z",["^[",["^Z",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^J","~$cljs.analyzer.api/warning-enabled?","^4","cljs/analyzer/api.cljc","^8",23,"^16",["^Z",[["^1F"]]],"^19",null,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^5",43,"~:ret-tag","^1<","^7",43,"^15",1,"^1=",true,"^Y",["^Z",["^[",["^Z",[["^1F"]]]]],"^3","Test if the given warning-type is enabled."],"^F",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",198,"^6",7,"^7",198,"^8",17,"^Y",["^Z",["^[",["^Z",[["^1>","^10"],["^11","^1>","^10"]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^12",["^ ","^13",false,"^14",3,"^15",3,"^16",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^Y",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/ns-resolve","^4","cljs/analyzer/api.cljc","^8",17,"^12",["^ ","^13",false,"^14",3,"^15",3,"^16",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^Y",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^19",null,"^14",3,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",2,"^13",false,"^1;","^1<"],["^ ","^14",3,"^13",false,"^1;",["^B",[null,"^1<"]]]],"^5",198,"^7",198,"^15",3,"^1=",true,"^Y",["^Z",[["^1>","^10"],["^11","^1>","^10"]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",20,"^6",7,"^7",20,"^8",18,"^Y",["^Z",["^[",["^Z",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"^J","~$cljs.analyzer.api/empty-state","^4","cljs/analyzer/api.cljc","^8",18,"^16",["^Z",[[]]],"^19",null,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^5",20,"^1H","^1<","^7",20,"^15",0,"^1=",true,"^Y",["^Z",["^[",["^Z",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"~$empty-env",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",31,"^6",7,"^7",31,"^8",16,"^Y",["^Z",["^[",["^Z",[[]]]]],"^3","Creates an empty analysis environment."],"^J","~$cljs.analyzer.api/empty-env","^4","cljs/analyzer/api.cljc","^8",16,"^16",["^Z",[[]]],"^19",null,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^5",31,"^1H","^1<","^7",31,"^15",0,"^1=",true,"^Y",["^Z",["^[",["^Z",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",48,"^6",7,"^7",48,"^8",30,"^Y",["^Z",["^[",["^Z",[["^1F","^O","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^J","~$cljs.analyzer.api/default-warning-handler","^4","cljs/analyzer/api.cljc","^8",30,"^16",["^Z",[["^1F","^O","^1O"]]],"^19",null,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^5",48,"^1H",["^B",[null,"^1D"]],"^7",48,"^15",3,"^1=",true,"^Y",["^Z",["^[",["^Z",[["^1F","^O","^1O"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^G",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",174,"^6",7,"^7",174,"^8",17,"^Y",["^Z",["^[",["^Z",[["^1>"],["^11","^1>"]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/ns-interns","^4","cljs/analyzer/api.cljc","^8",17,"^12",["^ ","^13",false,"^14",2,"^15",2,"^16",["^Z",[["^1>"],["^11","^1>"]]],"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[["^1>"],["^11","^1>"]]],"^19",null,"^14",2,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",1,"^13",false,"^1;","^1<"],["^ ","^14",2,"^13",false,"^1;",["^B",["^1<","^1D"]]]],"^5",174,"^7",174,"^15",2,"^1=",true,"^Y",["^Z",[["^1>"],["^11","^1>"]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^H",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",157,"^6",7,"^7",157,"^8",13,"^Y",["^Z",["^[",["^Z",[[],["^11"]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/all-ns","^4","cljs/analyzer/api.cljc","^8",13,"^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[[],["^11"]]],"^19",null,"^14",1,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",0,"^13",false,"^1;","^1<"],["^ ","^14",1,"^13",false,"^1;",["^B",["~$cljs.core/KeySeq","^1D"]]]],"^5",157,"^7",157,"^15",1,"^1=",true,"^Y",["^Z",[[],["^11"]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^I",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",145,"^6",7,"^7",145,"^8",14,"^Y",["^Z",["^[",["^Z",[["^O","^10"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^J","~$cljs.analyzer.api/resolve","^4","cljs/analyzer/api.cljc","^8",14,"^16",["^Z",[["^O","^10"]]],"^19",null,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^5",145,"^7",145,"^15",2,"^1=",true,"^Y",["^Z",["^[",["^Z",[["^O","^10"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^X",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",61,"^6",7,"^7",61,"^8",19,"^Y",["^Z",["^[",["^Z",[[],["^11"]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]]],"^J","~$cljs.analyzer.api/get-js-index","^4","cljs/analyzer/api.cljc","^8",19,"^12",["^ ","^13",false,"^14",1,"^15",1,"^16",["^Z",[[],["^11"]]],"^Y",["^Z",[[],["^11"]]],"^17",["^Z",[null,null]]],"^16",["^Z",[[],["^11"]]],"^19",null,"^14",1,"^17",["^Z",[null,null]],"^6",1,"^13",false,"^1:",[["^ ","^14",0,"^13",false,"^1;",["^B",["^1<","^1D"]]],["^ ","^14",1,"^13",false,"^1;",["^B",["^1<","^1D"]]]],"^5",61,"^7",61,"^15",1,"^1=",true,"^Y",["^Z",[[],["^11"]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^=","^="],"~:cljs.analyzer/constants",["^ ","^S",["^B",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^W","~:options"]],"~:order",["^21","^20","^1Y","^1[","^W","^1Z"]],"~:flags",["^ ","^T",["^B",[]]],"~:js-deps",["^ "],"~:deps",["^R","^=","^N","^P"]]