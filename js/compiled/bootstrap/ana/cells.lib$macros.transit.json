["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cells/lib$macros.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",14],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.core","~$cljs.core","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$cells.lib$macros","~:imports",null,"~:requires",["^ ","^<","^<","~$goog","^F"],"~:seen",["^A",[]],"~:uses",null,"~:defs",["^ ","~$timeout",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cells/lib$macros.cljc","^7",18,"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",["~#list",[["^Q",["~$n","~$body"]]]],"~:arglists",["^Q",[["~$n","~$&","^R"]]],"~:arglists-meta",["^Q",[null]]],"^5",11,"^4",3,"~:macro",true,"^6",3,"^S",["^Q",["~$quote",["^Q",[["~$n","~$&","^R"]]]]],"~:doc","Returns cell with body wrapped in timeout of n milliseconds."],"^B","~$cells.lib$macros/timeout","^3","cells/lib$macros.cljc","^7",18,"^L",["^ ","^M",true,"^N",1,"^O",1,"^P",["^Q",[["^Q",["~$n","^R"]]]],"^S",["^Q",[["~$n","~$&","^R"]]],"^T",["^Q",[null]]],"^P",["^Q",[["^Q",["~$n","^R"]]]],"~:protocol-impl",null,"^N",1,"^T",["^Q",[null]],"^5",1,"^M",true,"~:methods",[["^ ","^N",1,"^M",true,"~:tag",["^A",["~$seq","~$cljs.core/IList"]]]],"^4",3,"^U",true,"~:ret-tag","~$any","^6",3,"^O",1,"~:fn-var",false,"^S",["^Q",[["~$n","~$&","^R"]]],"^W","Returns cell with body wrapped in timeout of n milliseconds."]],"~:require-macros",["^ ","^<","^<"],"~:cljs.analyzer/constants",["^ ","^G",["^A",["~$cljs.core/fn","~$cells.lib/-timeout"]],"~:order",["^18","^17"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^F","^<"]]