{"version":3,"sources":["maria/editors/code.cljs"],"mappings":"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","names":["maria.editors.code/eldoc-view","sym","G__41923","maria.live.ns_utils.resolve_var_or_special.cljs$core$IFn$_invoke$arity$1","maria.views.bottom-bar/ShowVar","maria.editors.code/update-completions!","p__41941","p__41942","map__41943","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","map__41944","cljs.core.get.cljs$core$IFn$_invoke$arity$2","vec__41945","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","editor","loc","pos","hide?","temp__5720__auto__","node","G__41971","lark.editors.codemirror.sexp_near.cljs$core$IFn$_invoke$arity$2","fast-zip.core/node","temp__5718__auto__","completion-data","and__4120__auto__","cljs.core/not","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","lark.tree.range.bounds.cljs$core$IFn$_invoke$arity$2","maria.live.ns-utils/completion-data","maria.views.floating.float-ui/floating-view!","maria.views.dropdown/numbered-list","p__41994","vec__41995","alias","completion","full-name","G__41999","maria.views.bottom-bar/add-bottom-bar!","p__42002","vec__42003","maria.views.floating.float-ui/clear!","lark.editors.codemirror.replace_range_BANG_.cljs$core$IFn$_invoke$arity$3","iter__4523__auto__","s__42020","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__42026","cljs.core/chunk-buffer","i__42025","vec__42041","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__42019","cljs.core/chunk-rest","vec__42050","cljs.core/first","cljs.core/cons","cljs.core/rest","maria.live.ns_utils.ns_completions.cljs$core$IFn$_invoke$arity$1","or__4131__auto__","cljs.core/namespace","maria.util/rect->abs-pos","lark.editor/cursor-coords","maria.views.bottom-bar/retract-bottom-bar!","G__41939","G__41940","goog.functions/debounce","maria.editors.code/options","cm","repeat","e","p__42091","map__42092","maria.editors.code/reset-value!","default-value","value","state","lark.editors.codemirror/set-value-and-refresh!","cljs.core/deref","chia.view.class/view*","p__42170","map__42171","chia.view.props/to-element","v__41727__auto__","p1__42114#","cljs.core/fn?","args__41728__auto__","this__41729__auto__","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","props42131","G__42129","chia.view.class/Component","obj42229","obj42230","maria.editors.code/CodeView","p__42136","map__42137","auto-focus","on-update","read-only?","on-mount","cm-opts","props","error-ranges","before-change","on-selection-activity","keymap","this","dom-node","chia.view/dom-node","G__42146","G__42147","js/module$node_modules$codemirror$lib$codemirror","cljs.core/clj->js","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","G__42148","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","cljs.core/select-keys","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/add-watch","p__42149","p__42150","map__42151","map__42152","map__42153","map__42154","prev-loc","prev-pos","js/setTimeout","G__42159","lark.structure.edit.eldoc_symbol.cljs$core$IFn$_invoke$arity$2","G__42164","G__42165","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/assoc","p1__42109#","lark.editors.codemirror/set-preserve-cursor!","maria.util/handle-captured-events","p1__42113#","cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic","G__42166","lark.editors.codemirror/mark-ranges!","p__42215","map__42216","p__42226","map__42227","p__42167","map__42168","p1__42115#","G__42196","p__42238","map__42239","props42237","G__42235","obj42243","obj42244","maria.editors.code/viewer","source","G__42242","cljs.core/chunk-first"],"sourcesContent":["(ns maria.editors.code\n  (:require\n\n   [lark.editors.codemirror :as cm]\n   [\"codemirror\" :as CM]\n   [\"codemirror/addon/selection/mark-selection\"]\n   [\"codemirror/mode/clojure/clojure\"]\n\n   [chia.view :as v]\n\n   [maria.util :as util]\n   [maria.views.floating.float-ui :as hint]\n   [lark.editor :as Editor]\n   [lark.tree.core :as tree]\n   [maria.live.ns-utils :as ns-utils]\n   [maria.views.dropdown :as dropdown]\n   [maria.views.bottom-bar :as bottom-bar]\n   [lark.structure.edit :as edit]\n   [goog.functions :as gf]\n   [fast-zip.core :as z]\n   [lark.tree.range :as range]\n   [lark.editor :as editor]))\n\n(defn eldoc-view [sym]\n  (some->> sym\n           (ns-utils/resolve-var-or-special)\n           (bottom-bar/ShowVar)))\n\n(def update-completions!\n  (-> (fn [{:as editor\n            {:keys [loc pos]} :magic/cursor} & [hide?]]\n        (when-let [node (some-> (cm/sexp-near pos loc)\n                                (z/node))]\n          (if-let [completion-data (and (not hide?)\n                                        (not (.somethingSelected editor))\n                                        node\n                                        (= (range/bounds node :right)\n                                           (range/bounds pos :left))\n                                        (ns-utils/completion-data node))]\n            (hint/floating-view! {:component dropdown/numbered-list\n                                  :props {:on-selection (fn [[alias completion full-name]]\n                                                          (some->> (eldoc-view full-name)\n                                                                   (bottom-bar/add-bottom-bar! :eldoc/completion)))\n                                          :class \"shadow-4 bg-white\"\n                                          :on-select! (fn [[alias completion full-name]]\n                                                        (hint/clear!)\n                                                        (cm/replace-range! editor completion node))\n                                          :select-on-enter true\n                                          :items (for [[alias completion full-name] (ns-utils/ns-completions completion-data)]\n                                                   {:value [alias completion full-name]\n                                                    :label [:.flex.items-center.w-100.monospace.f7.ma2.ml0\n                                                            alias\n                                                            [:.flex-auto]\n                                                            [:.gray.pl3 (str (or (namespace full-name)\n                                                                                 full-name))]]})}\n                                  :float/pos (util/rect->abs-pos (Editor/cursor-coords editor)\n                                                                 [:right :bottom])\n                                  :float/offset [0 10]})\n            (do (hint/clear!)\n                (bottom-bar/retract-bottom-bar! :eldoc/completion)))))\n      (gf/debounce 75)))\n\n(def options\n  {:theme \"maria-light\"\n   :lineNumbers false\n   :lineWrapping true\n   :cursorScrollMargin 40\n   :mode \"clojure\"\n   :keyMap \"default\"\n   :styleSelectedText true\n   :magicBrackets true\n   :magicEdit true\n   :flattenSpans true\n   :configureMouse (fn [cm repeat e]\n                     #js {:moveOnDrag (if (.-shiftKey e)\n                                        false\n                                        true)})})\n\n(defn reset-value! [{:keys [default-value value view/state]}]\n  (cm/set-value-and-refresh! (:editor @state) (or value default-value)))\n\n(v/defclass CodeView\n            {#_#_:view/spec {:props {:event/mousedown :Function\n                                     :event/keydown   :Function\n                                     :on-ast          :Function\n                                     :keymap          :Map}}\n             :view/did-mount     (fn [{:keys [default-value\n                                              auto-focus\n                                              value\n                                              on-update\n                                              read-only?\n                                              on-mount\n                                              cm-opts\n                                              view/state\n                                              view/props\n                                              error-ranges\n                                              before-change\n                                              on-selection-activity\n                                              keymap]\n                                       :as   this}]\n                                   (let [dom-node (v/dom-node this)\n                                         editor (CM dom-node\n                                                    (clj->js (merge cm-opts\n                                                                    {:value (str (or value default-value))}\n                                                                    (cond-> options\n                                                                            keymap (assoc :extraKeys (clj->js keymap))\n                                                                            read-only? (-> (select-keys [:theme :mode :lineWrapping])\n                                                                                           (assoc\n                                                                                            :readOnly true\n                                                                                            :tabindex -1))))))]\n\n                                        (add-watch editor :maria\n                                                   (fn [editor\n                                                        {{prev-loc :loc prev-pos :pos} :magic/cursor}\n                                                        {{loc :loc pos :pos} :magic/cursor}]\n                                                     (js/setTimeout\n                                                      #(when (.hasFocus editor)\n                                                         (some->> (edit/eldoc-symbol loc pos)\n                                                                  (eldoc-view)\n                                                                  (bottom-bar/add-bottom-bar! :eldoc/cursor))\n                                                         (when-not (= pos prev-pos)\n                                                           (update-completions! editor (or (not= (:line pos) (:line prev-pos))\n                                                                                           (< (:column pos)\n                                                                                              (:column prev-pos))))))\n                                                      0)))\n\n                                        (.on editor \"blur\" #(bottom-bar/retract-bottom-bar! :eldoc/cursor))\n\n                                        (set! (.-view editor) this)\n                                        (swap! editor assoc :view this)\n                                        (set! (.-setValueAndRefresh editor) #(do (cm/set-preserve-cursor! editor %)\n                                                                                 (.refresh editor)))\n\n                                        (swap! state assoc :editor editor)\n\n                                        (when-not read-only?\n\n                                          ;; event handlers are passed in as props with keys like :event/mousedown\n                                          (util/handle-captured-events this)\n\n                                          (when on-mount (on-mount editor this))\n\n                                          (when on-update\n                                            (.on editor \"change\" #(do (prn :on-update (.getValue %1)) (on-update (.getValue %1)))))\n\n                                          (when before-change\n                                            (.on editor \"beforeChange\" before-change))\n\n                                          (when on-selection-activity\n                                            (.on editor \"cursorActivity\" on-selection-activity)))\n\n                                        (when auto-focus (.focus editor))\n\n                                        (cm/mark-ranges! editor error-ranges #js {\"className\" \"error-text\"})))\n             :get-editor         #(:editor @(:view/state %))\n             :set-value          (fn [{:keys [view/state value]}]\n                                   (when-let [editor (:editor @state)]\n                                     (cm/set-preserve-cursor! editor value)))\n             :reset-value        (fn [{:keys [default-value value view/state]}]\n                                   (.setValueAndRefresh (:editor @state) (or value default-value)))\n             :view/should-update (fn [{:keys [value] :as this}]\n                                   (let [editor (.getEditor this)]\n                                        (if (not= value (.getValue editor))\n                                          (.resetValue this)\n                                          nil))\n                                   false)}\n  [{:keys [view/state view/props] :as this}]\n  [:.cursor-text\n   (-> (select-keys props [:style :class])\n       (merge {:on-click #(when (= (.-target %) (.-currentTarget %))\n                            (let [editor (:editor @state)]\n                              (doto editor\n                                (.setCursor (.lineCount editor) 0)\n                                (.focus))))\n               :dangerouslySetInnerHTML {:__html \"\"}}))])\n\n(v/defclass viewer [{:keys [view/props]} source]\n  (CodeView (merge {:read-only? true\n                    :value source}\n                   props)))\n\n\n"]}