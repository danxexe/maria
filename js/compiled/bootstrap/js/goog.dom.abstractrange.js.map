{
"version":3,
"file":"goog.dom.abstractrange.js",
"lineCount":273,
"mappings":"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",
"sources":["goog/dom/abstractrange.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Interface definitions for working with ranges\n * in HTML documents.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\n\ngoog.provide('goog.dom.AbstractRange');\ngoog.provide('goog.dom.RangeIterator');\ngoog.provide('goog.dom.RangeType');\n\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.SavedCaretRange');\ngoog.require('goog.dom.TagIterator');\ngoog.require('goog.userAgent');\n\ngoog.forwardDeclare('goog.dom.TextRange');\n\n\n/**\n * Types of ranges.\n * @enum {string}\n */\ngoog.dom.RangeType = {\n  TEXT: 'text',\n  CONTROL: 'control',\n  MULTI: 'mutli'\n};\n\n\n\n/**\n * Creates a new selection with no properties.  Do not use this constructor -\n * use one of the goog.dom.Range.from* methods instead.\n * @constructor\n */\ngoog.dom.AbstractRange = function() {};\n\n\n/**\n * Gets the browser native selection object from the given window.\n * @param {Window} win The window to get the selection object from.\n * @return {Object} The browser native selection object, or null if it could\n *     not be retrieved.\n */\ngoog.dom.AbstractRange.getBrowserSelectionForWindow = function(win) {\n  if (win.getSelection) {\n    // W3C\n    return win.getSelection();\n  } else {\n    // IE\n    var doc = win.document;\n    var sel = doc.selection;\n    if (sel) {\n      // IE has a bug where it sometimes returns a selection from the wrong\n      // document. Catching these cases now helps us avoid problems later.\n      try {\n        var range = sel.createRange();\n        // Only TextRanges have a parentElement method.\n        if (range.parentElement) {\n          if (range.parentElement().document != doc) {\n            return null;\n          }\n        } else if (\n            !range.length ||\n            /** @type {ControlRange} */ (range).item(0).document != doc) {\n          // For ControlRanges, check that the range has items, and that\n          // the first item in the range is in the correct document.\n          return null;\n        }\n      } catch (e) {\n        // If the selection is in the wrong document, and the wrong document is\n        // in a different domain, IE will throw an exception.\n        return null;\n      }\n      // TODO(user|robbyw) Sometimes IE 6 returns a selection instance\n      // when there is no selection.  This object has a 'type' property equals\n      // to 'None' and a typeDetail property bound to undefined. Ideally this\n      // function should not return this instance.\n      return sel;\n    }\n    return null;\n  }\n};\n\n\n/**\n * Tests if the given Object is a controlRange.\n * @param {Object} range The range object to test.\n * @return {boolean} Whether the given Object is a controlRange.\n */\ngoog.dom.AbstractRange.isNativeControlRange = function(range) {\n  // For now, tests for presence of a control range function.\n  return !!range && !!range.addElement;\n};\n\n\n/**\n * @return {!goog.dom.AbstractRange} A clone of this range.\n */\ngoog.dom.AbstractRange.prototype.clone = goog.abstractMethod;\n\n\n/**\n * @return {goog.dom.RangeType} The type of range represented by this object.\n */\ngoog.dom.AbstractRange.prototype.getType = goog.abstractMethod;\n\n\n/**\n * @return {Range|TextRange} The native browser range object.\n */\ngoog.dom.AbstractRange.prototype.getBrowserRangeObject = goog.abstractMethod;\n\n\n/**\n * Sets the native browser range object, overwriting any state this range was\n * storing.\n * @param {Range|TextRange} nativeRange The native browser range object.\n * @return {boolean} Whether the given range was accepted.  If not, the caller\n *     will need to call goog.dom.Range.createFromBrowserRange to create a new\n *     range object.\n */\ngoog.dom.AbstractRange.prototype.setBrowserRangeObject = function(nativeRange) {\n  return false;\n};\n\n\n/**\n * @return {number} The number of text ranges in this range.\n */\ngoog.dom.AbstractRange.prototype.getTextRangeCount = goog.abstractMethod;\n\n\n/**\n * Get the i-th text range in this range.  The behavior is undefined if\n * i >= getTextRangeCount or i < 0.\n * @param {number} i The range number to retrieve.\n * @return {goog.dom.TextRange} The i-th text range.\n */\ngoog.dom.AbstractRange.prototype.getTextRange = goog.abstractMethod;\n\n\n/**\n * Gets an array of all text ranges this range is comprised of.  For non-multi\n * ranges, returns a single element array containing this.\n * @return {!Array<goog.dom.TextRange>} Array of text ranges.\n */\ngoog.dom.AbstractRange.prototype.getTextRanges = function() {\n  var output = [];\n  for (var i = 0, len = this.getTextRangeCount(); i < len; i++) {\n    output.push(this.getTextRange(i));\n  }\n  return output;\n};\n\n\n/**\n * @return {Node} The deepest node that contains the entire range.\n */\ngoog.dom.AbstractRange.prototype.getContainer = goog.abstractMethod;\n\n\n/**\n * Returns the deepest element in the tree that contains the entire range.\n * @return {Element} The deepest element that contains the entire range.\n */\ngoog.dom.AbstractRange.prototype.getContainerElement = function() {\n  var node = this.getContainer();\n  return /** @type {Element} */ (\n      node.nodeType == goog.dom.NodeType.ELEMENT ? node : node.parentNode);\n};\n\n\n/**\n * @return {Node} The element or text node the range starts in.  For text\n *     ranges, the range comprises all text between the start and end position.\n *     For other types of range, start and end give bounds of the range but\n *     do not imply all nodes in those bounds are selected.\n */\ngoog.dom.AbstractRange.prototype.getStartNode = goog.abstractMethod;\n\n\n/**\n * @return {number} The offset into the node the range starts in.  For text\n *     nodes, this is an offset into the node value.  For elements, this is\n *     an offset into the childNodes array.\n */\ngoog.dom.AbstractRange.prototype.getStartOffset = goog.abstractMethod;\n\n\n/**\n * @return {goog.math.Coordinate} The coordinate of the selection start node\n *     and offset.\n */\ngoog.dom.AbstractRange.prototype.getStartPosition = goog.abstractMethod;\n\n\n/**\n * @return {Node} The element or text node the range ends in.\n */\ngoog.dom.AbstractRange.prototype.getEndNode = goog.abstractMethod;\n\n\n/**\n * @return {number} The offset into the node the range ends in.  For text\n *     nodes, this is an offset into the node value.  For elements, this is\n *     an offset into the childNodes array.\n */\ngoog.dom.AbstractRange.prototype.getEndOffset = goog.abstractMethod;\n\n\n/**\n * @return {goog.math.Coordinate} The coordinate of the selection end\n *     node and offset.\n */\ngoog.dom.AbstractRange.prototype.getEndPosition = goog.abstractMethod;\n\n\n/**\n * @return {Node} The element or text node the range is anchored at.\n */\ngoog.dom.AbstractRange.prototype.getAnchorNode = function() {\n  return this.isReversed() ? this.getEndNode() : this.getStartNode();\n};\n\n\n/**\n * @return {number} The offset into the node the range is anchored at.  For\n *     text nodes, this is an offset into the node value.  For elements, this\n *     is an offset into the childNodes array.\n */\ngoog.dom.AbstractRange.prototype.getAnchorOffset = function() {\n  return this.isReversed() ? this.getEndOffset() : this.getStartOffset();\n};\n\n\n/**\n * @return {Node} The element or text node the range is focused at - i.e. where\n *     the cursor is.\n */\ngoog.dom.AbstractRange.prototype.getFocusNode = function() {\n  return this.isReversed() ? this.getStartNode() : this.getEndNode();\n};\n\n\n/**\n * @return {number} The offset into the node the range is focused at - i.e.\n *     where the cursor is.  For text nodes, this is an offset into the node\n *     value.  For elements, this is an offset into the childNodes array.\n */\ngoog.dom.AbstractRange.prototype.getFocusOffset = function() {\n  return this.isReversed() ? this.getStartOffset() : this.getEndOffset();\n};\n\n\n/**\n * @return {boolean} Whether the selection is reversed.\n */\ngoog.dom.AbstractRange.prototype.isReversed = function() {\n  return false;\n};\n\n\n/**\n * @return {!Document} The document this selection is a part of.\n */\ngoog.dom.AbstractRange.prototype.getDocument = function() {\n  // Using start node in IE was crashing the browser in some cases so use\n  // getContainer for that browser. It's also faster for IE, but still slower\n  // than start node for other browsers so we continue to use getStartNode when\n  // it is not problematic. See bug 1687309.\n  return goog.dom.getOwnerDocument(\n      goog.userAgent.IE ? this.getContainer() : this.getStartNode());\n};\n\n\n/**\n * @return {!Window} The window this selection is a part of.\n */\ngoog.dom.AbstractRange.prototype.getWindow = function() {\n  return goog.dom.getWindow(this.getDocument());\n};\n\n\n/**\n * Tests if this range contains the given range.\n * @param {goog.dom.AbstractRange} range The range to test.\n * @param {boolean=} opt_allowPartial If true, the range can be partially\n *     contained in the selection, otherwise the range must be entirely\n *     contained.\n * @return {boolean} Whether this range contains the given range.\n */\ngoog.dom.AbstractRange.prototype.containsRange = goog.abstractMethod;\n\n\n/**\n * Tests if this range contains the given node.\n * @param {Node} node The node to test for.\n * @param {boolean=} opt_allowPartial If not set or false, the node must be\n *     entirely contained in the selection for this function to return true.\n * @return {boolean} Whether this range contains the given node.\n */\ngoog.dom.AbstractRange.prototype.containsNode = goog.abstractMethod;\n\n\n\n/**\n * Tests whether this range is valid (i.e. whether its endpoints are still in\n * the document).  A range becomes invalid when, after this object was created,\n * either one or both of its endpoints are removed from the document.  Use of\n * an invalid range can lead to runtime errors, particularly in IE.\n * @return {boolean} Whether the range is valid.\n */\ngoog.dom.AbstractRange.prototype.isRangeInDocument = goog.abstractMethod;\n\n\n/**\n * @return {boolean} Whether the range is collapsed.\n */\ngoog.dom.AbstractRange.prototype.isCollapsed = goog.abstractMethod;\n\n\n/**\n * @return {string} The text content of the range.\n */\ngoog.dom.AbstractRange.prototype.getText = goog.abstractMethod;\n\n\n/**\n * Returns the HTML fragment this range selects.  This is slow on all browsers.\n * The HTML fragment may not be valid HTML, for instance if the user selects\n * from a to b inclusively in the following html:\n *\n * &lt;div&gt;a&lt;/div&gt;b\n *\n * This method will return\n *\n * a&lt;/div&gt;b\n *\n * If you need valid HTML, use {@link #getValidHtml} instead.\n *\n * @return {string} HTML fragment of the range, does not include context\n *     containing elements.\n */\ngoog.dom.AbstractRange.prototype.getHtmlFragment = goog.abstractMethod;\n\n\n/**\n * Returns valid HTML for this range.  This is fast on IE, and semi-fast on\n * other browsers.\n * @return {string} Valid HTML of the range, including context containing\n *     elements.\n */\ngoog.dom.AbstractRange.prototype.getValidHtml = goog.abstractMethod;\n\n\n/**\n * Returns pastable HTML for this range.  This guarantees that any child items\n * that must have specific ancestors will have them, for instance all TDs will\n * be contained in a TR in a TBODY in a TABLE and all LIs will be contained in\n * a UL or OL as appropriate.  This is semi-fast on all browsers.\n * @return {string} Pastable HTML of the range, including context containing\n *     elements.\n */\ngoog.dom.AbstractRange.prototype.getPastableHtml = goog.abstractMethod;\n\n\n/**\n * Returns a RangeIterator over the contents of the range.  Regardless of the\n * direction of the range, the iterator will move in document order.\n * @param {boolean=} opt_keys Unused for this iterator.\n * @return {!goog.dom.RangeIterator} An iterator over tags in the range.\n */\ngoog.dom.AbstractRange.prototype.__iterator__ = goog.abstractMethod;\n\n\n// RANGE ACTIONS\n\n\n/**\n * Sets this range as the selection in its window.\n */\ngoog.dom.AbstractRange.prototype.select = goog.abstractMethod;\n\n\n/**\n * Removes the contents of the range from the document.\n */\ngoog.dom.AbstractRange.prototype.removeContents = goog.abstractMethod;\n\n\n/**\n * Inserts a node before (or after) the range.  The range may be disrupted\n * beyond recovery because of the way this splits nodes.\n * @param {Node} node The node to insert.\n * @param {boolean} before True to insert before, false to insert after.\n * @return {Node} The node added to the document.  This may be different\n *     than the node parameter because on IE we have to clone it.\n */\ngoog.dom.AbstractRange.prototype.insertNode = goog.abstractMethod;\n\n\n/**\n * Replaces the range contents with (possibly a copy of) the given node.  The\n * range may be disrupted beyond recovery because of the way this splits nodes.\n * @param {Node} node The node to insert.\n * @return {Node} The node added to the document.  This may be different\n *     than the node parameter because on IE we have to clone it.\n */\ngoog.dom.AbstractRange.prototype.replaceContentsWithNode = function(node) {\n  if (!this.isCollapsed()) {\n    this.removeContents();\n  }\n\n  return this.insertNode(node, true);\n};\n\n\n/**\n * Surrounds this range with the two given nodes.  The range may be disrupted\n * beyond recovery because of the way this splits nodes.\n * @param {Element} startNode The node to insert at the start.\n * @param {Element} endNode The node to insert at the end.\n */\ngoog.dom.AbstractRange.prototype.surroundWithNodes = goog.abstractMethod;\n\n\n// SAVE/RESTORE\n\n\n/**\n * Saves the range so that if the start and end nodes are left alone, it can\n * be restored.\n * @return {!goog.dom.SavedRange} A range representation that can be restored\n *     as long as the endpoint nodes of the selection are not modified.\n */\ngoog.dom.AbstractRange.prototype.saveUsingDom = goog.abstractMethod;\n\n\n/**\n * Saves the range using HTML carets. As long as the carets remained in the\n * HTML, the range can be restored...even when the HTML is copied across\n * documents.\n * @return {goog.dom.SavedCaretRange?} A range representation that can be\n *     restored as long as carets are not removed. Returns null if carets\n *     could not be created.\n */\ngoog.dom.AbstractRange.prototype.saveUsingCarets = function() {\n  return (this.getStartNode() && this.getEndNode()) ?\n      new goog.dom.SavedCaretRange(this) :\n      null;\n};\n\n\n// RANGE MODIFICATION\n\n\n/**\n * Collapses the range to one of its boundary points.\n * @param {boolean} toAnchor Whether to collapse to the anchor of the range.\n */\ngoog.dom.AbstractRange.prototype.collapse = goog.abstractMethod;\n\n// RANGE ITERATION\n\n\n\n/**\n * Subclass of goog.dom.TagIterator that iterates over a DOM range.  It\n * adds functions to determine the portion of each text node that is selected.\n * @param {Node} node The node to start traversal at.  When null, creates an\n *     empty iterator.\n * @param {boolean=} opt_reverse Whether to traverse nodes in reverse.\n * @constructor\n * @extends {goog.dom.TagIterator}\n */\ngoog.dom.RangeIterator = function(node, opt_reverse) {\n  goog.dom.TagIterator.call(this, node, opt_reverse, true);\n};\ngoog.inherits(goog.dom.RangeIterator, goog.dom.TagIterator);\n\n\n/**\n * @return {number} The offset into the current node, or -1 if the current node\n *     is not a text node.\n */\ngoog.dom.RangeIterator.prototype.getStartTextOffset = goog.abstractMethod;\n\n\n/**\n * @return {number} The end offset into the current node, or -1 if the current\n *     node is not a text node.\n */\ngoog.dom.RangeIterator.prototype.getEndTextOffset = goog.abstractMethod;\n\n\n/**\n * @return {Node} node The iterator's start node.\n */\ngoog.dom.RangeIterator.prototype.getStartNode = goog.abstractMethod;\n\n\n/**\n * @return {Node} The iterator's end node.\n */\ngoog.dom.RangeIterator.prototype.getEndNode = goog.abstractMethod;\n\n\n/**\n * @return {boolean} Whether a call to next will fail.\n */\ngoog.dom.RangeIterator.prototype.isLast = goog.abstractMethod;\n"],
"names":["goog","provide","require","forwardDeclare","dom","RangeType","TEXT","CONTROL","MULTI","AbstractRange","goog.dom.AbstractRange","getBrowserSelectionForWindow","goog.dom.AbstractRange.getBrowserSelectionForWindow","win","getSelection","doc","document","sel","selection","range","createRange","parentElement","length","item","e","isNativeControlRange","goog.dom.AbstractRange.isNativeControlRange","addElement","prototype","clone","abstractMethod","getType","getBrowserRangeObject","setBrowserRangeObject","goog.dom.AbstractRange.prototype.setBrowserRangeObject","nativeRange","getTextRangeCount","getTextRange","getTextRanges","goog.dom.AbstractRange.prototype.getTextRanges","output","i","len","push","getContainer","getContainerElement","goog.dom.AbstractRange.prototype.getContainerElement","node","nodeType","NodeType","ELEMENT","parentNode","getStartNode","getStartOffset","getStartPosition","getEndNode","getEndOffset","getEndPosition","getAnchorNode","goog.dom.AbstractRange.prototype.getAnchorNode","isReversed","getAnchorOffset","goog.dom.AbstractRange.prototype.getAnchorOffset","getFocusNode","goog.dom.AbstractRange.prototype.getFocusNode","getFocusOffset","goog.dom.AbstractRange.prototype.getFocusOffset","goog.dom.AbstractRange.prototype.isReversed","getDocument","goog.dom.AbstractRange.prototype.getDocument","getOwnerDocument","userAgent","IE","getWindow","goog.dom.AbstractRange.prototype.getWindow","containsRange","containsNode","isRangeInDocument","isCollapsed","getText","getHtmlFragment","getValidHtml","getPastableHtml","__iterator__","select","removeContents","insertNode","replaceContentsWithNode","goog.dom.AbstractRange.prototype.replaceContentsWithNode","surroundWithNodes","saveUsingDom","saveUsingCarets","goog.dom.AbstractRange.prototype.saveUsingCarets","SavedCaretRange","collapse","RangeIterator","goog.dom.RangeIterator","opt_reverse","TagIterator","call","inherits","getStartTextOffset","getEndTextOffset","isLast"]
}
