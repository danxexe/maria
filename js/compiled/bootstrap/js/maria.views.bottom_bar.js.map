{"version":3,"sources":["maria/views/bottom_bar.cljs"],"mappings":";;;;;;AAMA,AAAA,AAAAA,AAAMM;AAAN,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAkFY;AAAlF,AAAAR,AAAAJ,AAAA,AAAuBM;AAAvB,AAAAF,AAAAJ,AAAA,AAA4BO;AAA5B,AAAAH,AAAAJ,AAAA,AAAyCQ;AAAzC,AAAAJ,AAAAJ,AAAA,AAA2DS;AAA3D,AAAAL,AAAAJ,AAAA,AAAoEU;AAApE,AAAAN,AAAAJ,AAAA,AAAyEW;AAAzE,AACE,AAAMC;AAAN,AAAA,AAAA,AAAA,AAAA,AAE4B,AAAAC,AAAIL;AAAJ,AAAA,AAAAK;AAAAA;;AAAsB,AAAK,AAACC,AAAUR;;AAFlE,AAAA,AAAA,AAGuB,AAAAO,AAAIN;AAAJ,AAAA,AAAAM;AAAAA;;AAAiB,AAACE,AAAkBT;;AAH3D,AAIG,AAAAU,AAAoB,AAAAH,AAAI,AAAA,AAAWH;AAAf,AAAA,AAAAG;AAAAA;;AAAqBJ;;;AAAzC,AAAA,AAAAO;AAAA,AAAA,AAAAA,AAAWP;AAAX,AACOA,AACA,AAACQ,AACD,AAACC,AAAKC,AACN,AAAA,AAACC,AACD,AAAA,AAAA,AAACC;;AALR;;AAJH,AAAA,AAU2B,AAAAR,AAAIF;AAAJ,AAAA,AAAAE;AAAAA;;AAAQ,AAAA,AAAMH;;;;AAVzC;;;AAYF,AAAA,AAAMY,AAAqBC;AAA3B,AACE,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAA8D,AAACE,AAAO,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAcG;AAAd,AACE,AAACC,AAAEF,AAAQR;AADrBE;;AAA9D,AAAA,AAAAD,AAAAA,AAACE,AAAAA,AAAAA;;AAGH,AAAA,AAAMQ,AAAiBX,AAAIY;AAA3B,AACE,AAAI,AAAA,AAAMA;AACR,AAACb,AAAoBC;;AACrB,AAAAa,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC;AAAA,AAAmE,AAAA,AAAAA,AAACC,AAAMf,AAAIY,AACX,AAACI,AAAiBC;;AADrF,AAAA,AAAAJ,AAAAA,AAACV,AAAAA,AAAAA;;;AAGL,AAAA,AAAAe,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAYO,AACTC;AADH,AAAA,AAAAP,AAAA,AAEE,AAAMS,AAAW,AAAAC,AAAA;AAAAC,AAAA;AAAA,AAAA,AAAAD,AAAAC,AAAAD,AAAAC,AAACC,AAAAA,AAAAA;;AAAlBJ,AACmB,AAACV,AAAMW;AAD1B,AAAArB,AAAAoB,AAAA,AAAA,AACOlB;AADP,AAAAF,AAAAoB,AAAA,AAAA,AACSK;AADT,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAMGA;;AARL,AAAA,AAAA,AAAAZ;AAAA,AAAA,AAAAC,AAAA;AAAA,AAAA,AAAAC,AAAAD,AAAAD;;AAAA,AAAAG,AAAAF;AAhB0B,AAgB1B,AAAA,AAAAG,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAC,AAAA;;AAAAA;AAAA;AAAAH","names":["p__66921","map__66924","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","maria.views.bottom-bar/ShowVar","name","display-name","display-namespace","arglists","meta","doc","the-var","or__4131__auto__","cljs.core/namespace","cljs.core/name","temp__5720__auto__","maria.live.ns-utils/elide-quote","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","cljs.core/str","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","cljs.core.into.cljs$core$IFn$_invoke$arity$2","maria.views.bottom-bar/retract-bottom-bar!","key","G__66955","p1__66953#","chia.db/transact!","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","p__66957","vec__66959","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","the-key","_","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","maria.views.bottom-bar/add-bottom-bar!","view","G__66963","p1__66962#","cljs.core/cons","maria.util.distinct_by.cljs$core$IFn$_invoke$arity$2","cljs.core/first","chia.view.class/view*","chia.view.props/to-element","props66967","G__66965","chia.view.class/Component","obj66982","obj66983","maria.views.bottom-bar/BottomBar","this","vec__66974","bottom-bar","G__66977","G__66978","chia.db/get","top-view"],"sourcesContent":["(ns maria.views.bottom-bar\n  (:require [chia.view :as v]\n            [chia.db :as d]\n            [maria.live.ns-utils :as ns-utils]\n            [maria.util :as util]))\n\n(defn ShowVar [{:keys [name display-name display-namespace arglists meta doc] :as the-var}]\n  (when the-var\n    [:.ph3.pv2.flex.items-center\n     [:.gray.flex-none.nowrap (or display-namespace (str (namespace name))) \"/\"]\n     [:span.nowrap.b.mr2 (or display-name (clojure.core/name name))] \" \"\n     (when-let [arglists (or (:arglists meta) arglists)]\n       (->> arglists\n            (ns-utils/elide-quote)\n            (mapv str)\n            (interpose \" \")\n            (into [:.mr2.truncate.blue.flex-none.nowrap])))\n     [:.gray.nowrap.truncate (or doc (:doc meta))]]))\n\n(defn retract-bottom-bar! [key]\n  (d/transact! [[:db/update-attr :ui/globals :bottom-bar-stack #(remove (fn [[the-key _]]\n                                                                          (= the-key key)) %)]]))\n\n(defn add-bottom-bar! [key view]\n  (if (nil? view)\n    (retract-bottom-bar! key)\n    (d/transact! [[:db/update-attr :ui/globals :bottom-bar-stack #(->> (cons [key view] %)\n                                                                       (util/distinct-by first))]])))\n\n(v/defclass BottomBar\n  [this]\n  (let [bottom-bar (d/get :ui/globals :bottom-bar-stack)\n        [_ top-view] (first bottom-bar)]\n    [:#bottom-bar.bt.monospace.flex-none.fixed.bottom-0.left-0.right-0.f7.z-999\n     {:style {:border-color     \"rgba(0,0,0,0.03)\"\n              :background-color \"#e9e9e9\"}}\n\n     top-view]))"]}