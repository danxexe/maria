{"version":3,"sources":["chia/db/core$macros.cljc"],"mappings":"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","names":["ret__4776__auto__","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","chia.db.core$macros/peek","&form","&env","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core/List","cljs.core/vec","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","seq70237","G__70238","cljs.core/first","cljs.core/next","G__70239","self__4717__auto__","body","G__70272","chia.db.core$macros/get-in*","js/Error","m","ks","cljs.core/vector?","iter__4523__auto__","s__70280","cljs.core/LazySeq","temp__5720__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","cljs.core/count","b__70282","cljs.core/chunk-buffer","i__70281","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__70279","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","k","not-found","s__70306","b__70308","i__70307","iter__70305","cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1","cljs.core/last","cljs.core/chunk-first"],"sourcesContent":["(ns chia.db.core\n  (:refer-clojure :exclude [peek]))\n\n(defmacro peek\n  \"Evaluates body without tracking read patterns.\"\n  [& body]\n  `(binding [~'chia.db.core/*access-log* nil]\n     (do ~@body)))\n\n(defmacro get-in*\n  \"Compiled version of get-in, small performance boost over the `get-in` function.\"\n  ([m ks]\n   (if-not (vector? ks)\n     `(clojure.core/get-in ~m ~ks)\n     `(-> ~m\n          ~@(for [k ks]\n              (list 'clojure.core/get k)))))\n  ([m ks not-found]\n   (if-not (vector? ks)\n     `(clojure.core/get-in ~m ~ks ~not-found)\n     `(-> ~m\n          ~@(for [k (drop-last ks)]\n              (list 'clojure.core/get k))\n          (clojure.core/get ~(last ks) ~not-found)))))\n\n#_(defmacro db-log [& body]\n    `(binding [~'chia.db.core/*db-log* (atom {})\n               ~'chia.db.core/*prevent-notify* true]\n       (let [value# (do ~@body)]\n         {:tx-report @~'chia.db.core/*db-log*\n          :value value#})))"]}