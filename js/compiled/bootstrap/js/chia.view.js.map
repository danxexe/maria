{"version":3,"sources":["chia/view.cljs"],"mappings":"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","names":["chia.view/-create-element","js/module$node_modules$react$index.createElement","chia.view/-create-portal","js/module$node_modules$react_dom$index.createPortal","chia.view/-create-context","js/module$node_modules$react$index.createContext","chia.view/-is-valid-element?","js/module$node_modules$react$index.isValidElement","chia.view/-forward-ref","js/module$node_modules$react$index.forwardRef","chia.view/to-element","chia.view.props/to-element","chia.view/dom-node","js/module$node_modules$react_dom$index.findDOMNode","chia.view/element?","x","and__4120__auto__","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","chia.view/provide","seq66064","G__66065","cljs.core/first","cljs.core/next","self__4717__auto__","binding-map","body","bindings","cljs.core/seq","out","G__66066","cljs.core/vec","cljs.core/cons","cljs.core/empty?","cljs.core/rest","vec__66068","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","context-k","context-v","chia.view.impl/lookup-context","obj66076","k66077","obj66078","applied-science.js-interop.impl/in?*","js/undefined","G__66073","G__66074","G__66075","chia.view/use-context","chia.view.hooks/use-context","chia.view/merge-props","chia.view.props/merge-props","chia.view/partial","chia.view.props/partial","chia.view/swap-silently!","seq66083","G__66084","ref","args","*silent*-orig-val__66086","chia.reactive/*silent*","*silent*-temp-val__66087","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core/swap!","G__66094","chia.view/render-to-dom","js/Error","p__66098","map__66100","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$3","react-element","dom-element","chia.view.render_to_dom.cljs$core$IFn$_invoke$arity$3","reload?","*reload*-orig-val__66104","*reload*-temp-val__66105","chia.view.registry/*reload*","G__66107","G__66108","chia.view.impl/-render","chia.view.impl/resolve-node","chia.view/unmount-from-dom","chia.view.impl/-unmount-component-at-node","chia.view/portal","element","dom-node","G__66110","G__66111","chia.view/on-unmount!","this","key","f","o__50635__auto__","o__50629__auto__","obj66115","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","chia.view/flush!","chia.view.render-loop/flush!","chia.view/force-update","chia.view.render-loop/force-update","G__66117","chia.view/adapt-js-component","js-component","chia.view.adapt_js_component.cljs$core$IFn$_invoke$arity$2","options","props","chia.view.hiccup/get-props","props?","chia.view.hiccup/props?","chia.view.hiccup/make-element","chia.view.props/adapt-props","this__4374__auto__","writer__4375__auto__","opt__4376__auto__","cljs.core/-write","chia.view/FunctionalView","chia.view/->FunctionalView","chia$name","update!","writer","opts","chia.view.render-loop/schedule-update!","chia.view/-use-chia","view-name","force-update","chia.view.hooks/use-schedule-update","chia$view","chia.view.hooks.use_memo.cljs$core$IFn$_invoke$arity$1","G__66127","cljs.core/not","obj66128","obj66129","chia.view.hooks/use-will-unmount","chia.view.render-loop/dequeue!","chia.reactive/dispose-reader!","seq__66132","chunk__66133","count__66134","i__66135","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","G__66141","obj66142","k66143","obj66146","cljs.core/vals","p__66150","map__66151","cljs.core.get.cljs$core$IFn$_invoke$arity$2","chia.view/-functional-render","should-update?","view-fn","ref?","children","obj66155","k66156","obj66157","reader__51578__auto__","result__51579__auto__","*reader*-orig-val__66160","chia.reactive/*reader*","*reader-dependency-log*-orig-val__66161","chia.reactive/*reader-dependency-log*","*reader*-temp-val__66162","*reader-dependency-log*-temp-val__66163","cljs.core/volatile!","value__51580__auto__","cljs.core/deref","G__66165","chia.reactive/handle-next-deps!","chia.view.hooks/use-layout-effect","G__66164","G__66154","js/Object.defineProperty","G__66153","chia.view.impl.memoize_view.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns chia.view\n  (:refer-clojure :exclude [partial])\n  (:require [\"react-dom\" :as react-dom]\n            [\"react\" :as react]\n\n            [chia.view.hooks :as hooks]\n            [chia.view.props :as props]\n            [chia.view.impl :as impl]\n            [chia.view.render-loop :as render-loop]\n            [chia.view.registry :as registry]\n            [chia.view.util :as vu]\n            [chia.view.class]\n\n            [chia.view.hiccup :as hiccup]\n            [chia.view.hiccup.impl :as hiccup-impl]\n\n            [chia.reactive :as r]\n            [chia.util :as u]\n\n            [applied-science.js-interop :as j])\n  (:require-macros chia.view))\n\n;;;;;;;;;;;;;;\n;;\n;; React\n\n(def -create-element react/createElement)\n(def -create-portal react-dom/createPortal)\n(def -create-context react/createContext)\n(def -is-valid-element? react/isValidElement)\n(def -forward-ref react/forwardRef)\n(def to-element props/to-element)\n(def dom-node react-dom/findDOMNode)\n\n(defn element? [x]\n  (and x (-is-valid-element? x)))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Context API\n\n(defn provide\n  \"Adds React contexts to the component tree.\n   `bindings` should be a map of {<keyword-or-Context>, <value-to-be-bound>}.\"\n  [binding-map & body]\n  (loop [bindings (seq binding-map)\n         out (to-element (vec (cons :<> body)))]\n    (if (empty? bindings)\n      out\n      (recur (rest bindings)\n             (let [[context-k context-v] (first bindings)]\n               (-> (impl/lookup-context context-k)\n                   (j/get :Provider)\n                   (-create-element #js {:value context-v} out)))))))\n\n(def use-context hooks/use-context)\n\n;;;;;;;;;;;;;;;;;;\n;;\n;; Props & Conversions\n\n(def merge-props props/merge-props)\n(def partial props/partial)\n\n(defn swap-silently! [ref & args]\n      (r/silently\n       (apply swap! ref args)))\n\n;;;;;;;;;;;;;;;;;;\n;;\n;; Core API\n\n(defn render-to-dom\n  \"Render view to element, which should be a DOM element or id of element on page.\"\n  ([react-element dom-element]\n   (render-to-dom react-element dom-element nil))\n  ([react-element dom-element {:keys [reload?]\n                               :or   {reload? true}}]\n   (binding [registry/*reload* reload?]\n     (impl/-render (to-element react-element)\n                   (impl/resolve-node dom-element)))))\n\n(def unmount-from-dom\n  \"Unmounts React view at given DOM node.\"\n  impl/-unmount-component-at-node)\n\n(defn portal\n  \"Mounts `element` at `dom-node` as React portal.\"\n  [element dom-node]\n  (-create-portal (to-element element) (impl/resolve-node dom-node)))\n\n;;;;;;;;;;;;;;;;;;\n;;\n;; Lifecycle\n\n(defn on-unmount!\n  \"Register an unmount callback for `component`. This is not a hook - can be used anywhere/anytime.\"\n  [^js this key f]\n  (j/update! this :chia$onUnmount assoc key f))\n\n;;;;;;;;;;;;;;;;;;\n;;\n;; Render loop\n\n(def flush!\n  \"Flush pending operations to DOM\"\n  render-loop/flush!)\n\n(def force-update\n  \"Force a component to update\"\n  render-loop/force-update)\n\n;;;;;;;;;;;;;;;;;;\n;;\n;; Vanilla React interop\n\n(defn adapt-js-component\n  \"Wraps a vanilla React component so that it can be used like any other view.\n\n  See props/adapt-props for options.\"\n  ([js-component]\n   (adapt-js-component nil js-component))\n  ([options js-component]\n   (fn [& args]\n     (let [props (hiccup/get-props args 0)\n           props? (hiccup/props? props)]\n       (hiccup/make-element js-component\n                            (props/adapt-props options (if props? props {}))\n                            args\n                            (if props? 1 0))))))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Internal - Chia reactivity + render loop\n\n(deftype FunctionalView [chia$name update!]\n  Object\n  (forceUpdate [this] (update!))\n  IPrintWithWriter\n  (-pr-writer [this writer opts]\n    (-write writer (str \"\ud83d\udc41<\" chia$name \">\")))\n  r/IInvalidate\n  (-invalidate! [this]\n    (render-loop/schedule-update! this)))\n\n(defn -use-chia [view-name ^boolean ref]\n  (let [force-update (hooks/use-schedule-update)\n        chia$view (hooks/use-memo (fn []\n                                    (cond-> (FunctionalView. view-name force-update)\n                                            (not (::no-ref ref)) (j/assoc! .-chia$forwardRef ref))))]\n    (hooks/use-will-unmount\n     (fn []\n       (render-loop/dequeue! chia$view)\n       (r/dispose-reader! chia$view)\n       (doseq [f (some-> (j/get chia$view :chia$onUnmount)\n                         (vals))]\n         (f))))\n    chia$view))\n\n(defn -functional-render [{:keys         [view/should-update?]\n                           view-name     :view/name\n                           view-fn       :view/fn\n                           ^boolean ref? :view/forward-ref?}]\n  (-> (fn [props ref]\n        (let [children (j/get props :children)]\n          (r/with-dependency-tracking! {:schedule hooks/use-layout-effect\n                                        ;; use-layout-effect is necessary to ensure that we don't\n                                        ;; miss\n                                        :reader   (-use-chia view-name (if ref? ref ::no-ref))}\n            (to-element (apply view-fn children)))))\n      (doto (js/Object.defineProperty \"name\" (j/obj :value view-name)))\n      (cond-> ref? (-forward-ref))\n      (impl/memoize-view should-update?)))"]}