{
"version":3,
"file":"module$node_modules$codemirror$addon$selection$mark_selection.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/codemirror/addon/selection/mark-selection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$codemirror$addon$selection$mark_selection\"] = function(global,process,require,module,exports,shadow$shims) {\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Because sometimes you need to mark the selected *text*.\n//\n// Adds an option 'styleSelectedText' which, when enabled, gives\n// selected text the CSS class given as option value, or\n// \"CodeMirror-selectedtext\" when the value is not a string.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"styleSelectedText\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.markedSelection = [];\n      cm.state.markedSelectionStyle = typeof val == \"string\" ? val : \"CodeMirror-selectedtext\";\n      reset(cm);\n      cm.on(\"cursorActivity\", onCursorActivity);\n      cm.on(\"change\", onChange);\n    } else if (!val && prev) {\n      cm.off(\"cursorActivity\", onCursorActivity);\n      cm.off(\"change\", onChange);\n      clear(cm);\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n    }\n  });\n\n  function onCursorActivity(cm) {\n    if (cm.state.markedSelection)\n      cm.operation(function() { update(cm); });\n  }\n\n  function onChange(cm) {\n    if (cm.state.markedSelection && cm.state.markedSelection.length)\n      cm.operation(function() { clear(cm); });\n  }\n\n  var CHUNK_SIZE = 8;\n  var Pos = CodeMirror.Pos;\n  var cmp = CodeMirror.cmpPos;\n\n  function coverRange(cm, from, to, addAt) {\n    if (cmp(from, to) == 0) return;\n    var array = cm.state.markedSelection;\n    var cls = cm.state.markedSelectionStyle;\n    for (var line = from.line;;) {\n      var start = line == from.line ? from : Pos(line, 0);\n      var endLine = line + CHUNK_SIZE, atEnd = endLine >= to.line;\n      var end = atEnd ? to : Pos(endLine, 0);\n      var mark = cm.markText(start, end, {className: cls});\n      if (addAt == null) array.push(mark);\n      else array.splice(addAt++, 0, mark);\n      if (atEnd) break;\n      line = endLine;\n    }\n  }\n\n  function clear(cm) {\n    var array = cm.state.markedSelection;\n    for (var i = 0; i < array.length; ++i) array[i].clear();\n    array.length = 0;\n  }\n\n  function reset(cm) {\n    clear(cm);\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++)\n      coverRange(cm, ranges[i].from(), ranges[i].to());\n  }\n\n  function update(cm) {\n    if (!cm.somethingSelected()) return clear(cm);\n    if (cm.listSelections().length > 1) return reset(cm);\n\n    var from = cm.getCursor(\"start\"), to = cm.getCursor(\"end\");\n\n    var array = cm.state.markedSelection;\n    if (!array.length) return coverRange(cm, from, to);\n\n    var coverStart = array[0].find(), coverEnd = array[array.length - 1].find();\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\n        cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0)\n      return reset(cm);\n\n    while (cmp(from, coverStart.from) > 0) {\n      array.shift().clear();\n      coverStart = array[0].find();\n    }\n    if (cmp(from, coverStart.from) < 0) {\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\n        array.shift().clear();\n        coverRange(cm, from, coverStart.to, 0);\n      } else {\n        coverRange(cm, from, coverStart.from, 0);\n      }\n    }\n\n    while (cmp(to, coverEnd.to) < 0) {\n      array.pop().clear();\n      coverEnd = array[array.length - 1].find();\n    }\n    if (cmp(to, coverEnd.to) > 0) {\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n        array.pop().clear();\n        coverRange(cm, coverEnd.from, to);\n      } else {\n        coverRange(cm, coverEnd.to, to);\n      }\n    }\n  }\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","mod","define","amd","CodeMirror","onCursorActivity","cm","state","markedSelection","operation","update","onChange","length","clear","coverRange","from","to","addAt","cmp","array","cls","markedSelectionStyle","line","start","Pos","endLine","CHUNK_SIZE","atEnd","end","mark","markText","className","push","splice","i","reset","ranges","listSelections","somethingSelected","getCursor","coverStart","find","coverEnd","shift","pop","defineOption","val","old","prev","Init","on","off","cmpPos"]
}
