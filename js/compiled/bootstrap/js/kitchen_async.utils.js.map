{"version":3,"sources":["kitchen_async/utils.cljc"],"mappings":";;;AAGA,AAAA,AAAMA,AAAaC;AAAnB,AACE,AAAAC,AAAI,AAAAC,AAAkB,AAAAE,AAAQ,AAACC,AAAUL;AAAnB,AAAA,AAAA,AAAAI,AAAA;AAAA;;AAAA,AAAAA,AAAwBE;;;AAA1C,AAAA,AAAAJ;AAAA,AAAA,AAAAA,AAAWC;AAAX,AACE,AAAMI,AAAQ,AAACC,AAAQC;AACjBC,AAAG,AAACC,AAAI,AAAA,AAAA,AAAAC,AAA4BC,AAC5BN;AAFd,AAGE,AAAAL,AAAqB,AAAAD,AAAI,AAAA,AAAA,AAACc,AAAOL,AAAoBP;AAAhC,AAAA,AAAAF;AAAAA;;AACI,AAAA,AAAA,AAACc,AAAOL,AAAcP;;;AAD/C,AAAA,AAAAD;AAAA,AAAA,AAAAA,AAAWY;AAAX,AAEE,AAACE,AAAO,AAACC,AAAKH,AAAW,AAACG,AAAKjB;;AAFjC;;;AAJJ;;;AAAJ,AAAA,AAAAC;AAAAA;;AAOID","names":["kitchen-async.utils/fixup-alias","sym","or__4131__auto__","temp__5720__auto__","prefix","G__70468","cljs.core/namespace","cljs.core.symbol.cljs$core$IFn$_invoke$arity$1","ns-name","cljs.core/ns-name","cljs.core/*ns*","ns","cljs.core.get.cljs$core$IFn$_invoke$arity$2","cljs.core/deref","cljs.env/*compiler*","full-name","cljs.core.get_in.cljs$core$IFn$_invoke$arity$2","cljs.core.symbol.cljs$core$IFn$_invoke$arity$2","cljs.core/name"],"sourcesContent":["(ns kitchen-async.utils\n  (:require [cljs.env :as env]))\n\n(defn fixup-alias [sym]\n  (or (when-let [prefix (some-> (namespace sym) symbol)]\n        (let [ns-name (ns-name *ns*)\n              ns (get (:cljs.analyzer/namespaces @env/*compiler*)\n                      ns-name)]\n          (when-let [full-name (or (get-in ns [:require-macros prefix])\n                                   (get-in ns [:requires prefix]))]\n            (symbol (name full-name) (name sym)))))\n      sym))\n"]}