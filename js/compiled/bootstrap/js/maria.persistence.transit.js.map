{"version":3,"sources":["maria/persistence/transit.cljs"],"mappings":";;;;AAIA,AAAKA,AAAO,AAAA,AAACC;AACb,AAAKC,AAAO,AAAA,AAACC;AACb,AAAA,AAAMC,AAAaC;AAAnB,AACE,AAAM,AAAK,AAASA,AAAG,AAAA,AAACC,AAAoBD;AAA5C,AACE,AAACE,AAAOP,AAAO,AAAA,AAACQ,AAAKH;;AADvB;;;AAEF,AAAA,AAAMI,AAAWJ;AAAjB,AACE,AAAA,AAAqB,AAACK,AAAQR,AAAOG","names":["maria.persistence.transit/reader","cognitect.transit.reader.cljs$core$IFn$_invoke$arity$1","maria.persistence.transit/writer","cognitect.transit.writer.cljs$core$IFn$_invoke$arity$1","maria.persistence.transit/deserialize","x","clojure.string/starts-with?","cognitect.transit/read","cljs.core.subs.cljs$core$IFn$_invoke$arity$2","maria.persistence.transit/serialize","cognitect.transit/write"],"sourcesContent":["(ns maria.persistence.transit\n  (:require [cognitect.transit :as t]\n            [clojure.string :as string]))\n\n(def reader (t/reader :json))\n(def writer (t/writer :json))\n(defn deserialize [x]\n  (when (and (string? x) (string/starts-with? x \"transit/json:\"))\n    (t/read reader (subs x 13))))\n(defn serialize [x]\n  (str \"transit/json:\" (t/write writer x)))"]}