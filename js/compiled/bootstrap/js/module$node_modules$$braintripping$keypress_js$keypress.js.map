{
"version":3,
"file":"module$node_modules$$braintripping$keypress_js$keypress.js",
"lineCount":40,
"mappings":"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",
"sources":["node_modules/@braintripping/keypress.js/keypress.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$braintripping$keypress_js$keypress\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by CoffeeScript 1.12.7\n\n/*\nCopyright 2014 David Mauro\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nKeypress is a robust keyboard input capturing Javascript utility\nfocused on input for games.\n\nversion 2.1.3\n */\n\n\n/*\nCombo options available and their defaults:\n    keys                  : []            - An array of the keys pressed together to activate combo.\n    count                 : 0             - The number of times a counting combo has been pressed. Reset on release.\n    is_unordered          : false         - Unless this is set to true, the keys can be pressed down in any order.\n    is_counting           : false         - Makes this a counting combo (see documentation).\n    is_exclusive          : false         - This combo will replace other exclusive combos when true.\n    is_solitary           : false         - This combo will only fire if ONLY it's keys are pressed down.\n    is_sequence           : false         - Rather than a key combo, this is an ordered key sequence.\n    prevent_default       : false         - Prevent default behavior for all component key keypresses.\n    prevent_repeat        : false         - Prevent the combo from repeating when keydown is held.\n    normalize_caps_lock   : false         - Do not allow turning caps lock on to prevent combos from being activated.\n    on_keydown            : null          - A function that is called when the combo is pressed.\n    on_keyup              : null          - A function that is called when the combo is released.\n    on_release            : null          - A function that is called when all keys in the combo are released.\n    this                  : undefined     - Defines the scope for your callback functions.\n */\n\n(function() {\n  var Combo, _change_keycodes_by_browser, _compare_arrays, _compare_arrays_sorted, _convert_key_to_readable, _decide_meta_key, _factory_defaults, _filter_array, _index_of_in_array, _is_array_in_array, _is_array_in_array_sorted, _key_is_valid, _keycode_alternate_names, _keycode_dictionary, _log_error, _metakey, _modifier_event_mapping, _modifier_keys, _validate_combo, keypress, normalize_combo,\n    hasProp = {}.hasOwnProperty,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  _factory_defaults = {\n    is_unordered: false,\n    is_counting: false,\n    is_exclusive: false,\n    is_solitary: false,\n    prevent_default: false,\n    prevent_repeat: false,\n    normalize_caps_lock: false\n  };\n\n  _modifier_keys = [\"meta\", \"alt\", \"option\", \"ctrl\", \"shift\", \"cmd\"];\n\n  _metakey = \"ctrl\";\n\n  normalize_combo = function(keys_or_combo) {\n    var alt_name, i, key, l, ref, results;\n    if (typeof keys_or_combo === \"string\") {\n      keys_or_combo = keys_or_combo.split(\" \");\n    }\n    if (Array.isArray(keys_or_combo)) {\n      results = [];\n      for (i = l = 0, ref = keys_or_combo.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n        key = keys_or_combo[i];\n        alt_name = _keycode_alternate_names[key];\n        if (alt_name) {\n          key = keys_or_combo[i] = alt_name;\n        }\n        if (key === \"meta\") {\n          keys_or_combo.splice(i, 1, _metakey);\n        }\n        if (key === \"cmd\") {\n          results.push(_log_error(\"Warning: use the \\\"meta\\\" key rather than \\\"cmd\\\" for Windows compatibility\"));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    }\n  };\n\n  keypress = {};\n\n  keypress.debug = false;\n\n  Combo = (function() {\n    function Combo(dictionary) {\n      var property, value;\n      for (property in dictionary) {\n        if (!hasProp.call(dictionary, property)) continue;\n        value = dictionary[property];\n        if (value !== false) {\n          this[property] = value;\n        }\n      }\n      this.keys = this.keys || [];\n      this.count = this.count || 0;\n    }\n\n    Combo.prototype.allows_key_repeat = function() {\n      return !this.prevent_repeat && typeof this.on_keydown === \"function\";\n    };\n\n    Combo.prototype.reset = function() {\n      this.count = 0;\n      return this.keyup_fired = null;\n    };\n\n    return Combo;\n\n  })();\n\n  keypress.Listener = (function() {\n    function Listener(element, defaults) {\n      var attach_handler, property, value;\n      if ((typeof jQuery !== \"undefined\" && jQuery !== null) && element instanceof jQuery) {\n        if (element.length !== 1) {\n          _log_error(\"Warning: your jQuery selector should have exactly one object.\");\n        }\n        element = element[0];\n      }\n      this.should_suppress_event_defaults = false;\n      this.should_force_event_defaults = false;\n      this.sequence_delay = 800;\n      this._registered_combos = [];\n      this._keys_down = [];\n      this._active_combos = [];\n      this._sequence = [];\n      this._sequence_timer = null;\n      this._prevent_capture = false;\n      this._defaults = defaults || {};\n      for (property in _factory_defaults) {\n        if (!hasProp.call(_factory_defaults, property)) continue;\n        value = _factory_defaults[property];\n        this._defaults[property] = this._defaults[property] || value;\n      }\n      this.element = element || document.body;\n      attach_handler = function(target, event, handler) {\n        goog.events.listen(target, event, (function(e) {\n          return handler(e.getBrowserEvent());\n        }), true);\n        return handler;\n      };\n      this.keydown_event = attach_handler(this.element, \"keydown\", (function(_this) {\n        return function(e) {\n          var ref, ref1, should_auto_keyup;\n          e = e || window.event;\n          should_auto_keyup = _metakey === \"cmd\" && indexOf.call(_this._keys_down, \"cmd\") >= 0 && ((ref = _convert_key_to_readable((ref1 = e.keyCode) != null ? ref1 : e.key)) !== \"cmd\" && ref !== \"shift\" && ref !== \"alt\" && ref !== \"caps\" && ref !== \"tab\");\n          _this._receive_input(e, true);\n          if (should_auto_keyup) {\n            return _this._receive_input(e, false);\n          }\n        };\n      })(this));\n      this.keyup_event = attach_handler(this.element, \"keyup\", (function(_this) {\n        return function(e) {\n          e = e || window.event;\n          return _this._receive_input(e, false);\n        };\n      })(this));\n      this.blur_event = attach_handler(window, \"blur\", (function(_this) {\n        return function() {\n          var key, l, len, ref;\n          ref = _this._keys_down;\n          for (l = 0, len = ref.length; l < len; l++) {\n            key = ref[l];\n            _this._key_up(key, {});\n          }\n          return _this._keys_down = [];\n        };\n      })(this));\n    }\n\n    Listener.prototype.destroy = function() {\n      var remove_handler;\n      remove_handler = function(target, event, handler) {\n        return goog.events.unlisten(target, event, (function(e) {\n          return handler(e.getBrowserEvent());\n        }), true);\n      };\n      remove_handler(this.element, \"keydown\", this.keydown_event);\n      remove_handler(this.element, \"keyup\", this.keyup_event);\n      return remove_handler(window, \"blur\", this.blur_event);\n    };\n\n    Listener.prototype._cmd_bug_check = function(combo_keys) {\n      if (_metakey === \"cmd\" && indexOf.call(this._keys_down, \"cmd\") >= 0 && indexOf.call(combo_keys, \"cmd\") < 0 && combo_keys.length > 1) {\n        return false;\n      }\n      return true;\n    };\n\n    Listener.prototype._prevent_default = function(e, should_prevent) {\n      if ((should_prevent || this.should_suppress_event_defaults) && !this.should_force_event_defaults) {\n        if (e.preventDefault) {\n          e.preventDefault();\n        } else {\n          e.returnValue = false;\n        }\n        if (e.stopPropagation) {\n          return e.stopPropagation();\n        }\n      }\n    };\n\n    Listener.prototype._get_active_combos = function(key) {\n      var active_combos, keys_down;\n      active_combos = [];\n      keys_down = _filter_array(this._keys_down, function(down_key) {\n        return down_key !== key && indexOf.call(_modifier_keys, down_key) >= 0;\n      });\n      keys_down.push(key);\n      this._match_combo_arrays(keys_down, (function(_this) {\n        return function(match) {\n          if (_this._cmd_bug_check(match.keys)) {\n            return active_combos.push(match);\n          }\n        };\n      })(this));\n      return active_combos;\n    };\n\n    Listener.prototype._get_potential_combos = function(key) {\n      var combo, l, len, potentials, ref;\n      potentials = [];\n      ref = this._registered_combos;\n      for (l = 0, len = ref.length; l < len; l++) {\n        combo = ref[l];\n        if (combo.is_sequence) {\n          continue;\n        }\n        if (indexOf.call(combo.keys, key) >= 0 && this._cmd_bug_check(combo.keys)) {\n          potentials.push(combo);\n        }\n      }\n      return potentials;\n    };\n\n    Listener.prototype._add_to_active_combos = function(combo) {\n      var active_combo, active_key, active_keys, already_replaced, combo_key, i, l, len, len1, m, n, ref, ref1, should_prepend, should_replace;\n      should_replace = false;\n      should_prepend = true;\n      already_replaced = false;\n      if (indexOf.call(this._active_combos, combo) >= 0) {\n        return true;\n      } else if (this._active_combos.length) {\n        for (i = l = 0, ref = this._active_combos.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n          active_combo = this._active_combos[i];\n          if (!(active_combo && active_combo.is_exclusive && combo.is_exclusive)) {\n            continue;\n          }\n          active_keys = active_combo.keys;\n          if (!should_replace) {\n            for (m = 0, len = active_keys.length; m < len; m++) {\n              active_key = active_keys[m];\n              should_replace = true;\n              if (indexOf.call(combo.keys, active_key) < 0) {\n                should_replace = false;\n                break;\n              }\n            }\n          }\n          if (should_prepend && !should_replace) {\n            ref1 = combo.keys;\n            for (n = 0, len1 = ref1.length; n < len1; n++) {\n              combo_key = ref1[n];\n              should_prepend = false;\n              if (indexOf.call(active_keys, combo_key) < 0) {\n                should_prepend = true;\n                break;\n              }\n            }\n          }\n          if (should_replace) {\n            if (already_replaced) {\n              active_combo = this._active_combos.splice(i, 1)[0];\n              if (active_combo != null) {\n                active_combo.reset();\n              }\n            } else {\n              active_combo = this._active_combos.splice(i, 1, combo)[0];\n              if (active_combo != null) {\n                active_combo.reset();\n              }\n              already_replaced = true;\n            }\n            should_prepend = false;\n          }\n        }\n      }\n      if (should_prepend) {\n        this._active_combos.unshift(combo);\n      }\n      return should_replace || should_prepend;\n    };\n\n    Listener.prototype._remove_from_active_combos = function(combo) {\n      var active_combo, i, l, ref;\n      for (i = l = 0, ref = this._active_combos.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n        active_combo = this._active_combos[i];\n        if (active_combo === combo) {\n          combo = this._active_combos.splice(i, 1)[0];\n          combo.reset();\n          break;\n        }\n      }\n    };\n\n    Listener.prototype._get_possible_sequences = function() {\n      var combo, i, j, l, len, m, match, matches, n, ref, ref1, ref2, sequence;\n      matches = [];\n      ref = this._registered_combos;\n      for (l = 0, len = ref.length; l < len; l++) {\n        combo = ref[l];\n        for (j = m = 1, ref1 = this._sequence.length; 1 <= ref1 ? m <= ref1 : m >= ref1; j = 1 <= ref1 ? ++m : --m) {\n          sequence = this._sequence.slice(-j);\n          if (!combo.is_sequence) {\n            continue;\n          }\n          if (indexOf.call(combo.keys, \"shift\") < 0) {\n            sequence = _filter_array(sequence, function(key) {\n              return key !== \"shift\";\n            });\n            if (!sequence.length) {\n              continue;\n            }\n          }\n          for (i = n = 0, ref2 = sequence.length; 0 <= ref2 ? n < ref2 : n > ref2; i = 0 <= ref2 ? ++n : --n) {\n            if (combo.keys[i] === sequence[i]) {\n              match = true;\n            } else {\n              match = false;\n              break;\n            }\n          }\n          if (match) {\n            matches.push(combo);\n          }\n        }\n      }\n      return matches;\n    };\n\n    Listener.prototype._add_key_to_sequence = function(key, e) {\n      var combo, l, len, sequence_combos;\n      this._sequence.push(key);\n      sequence_combos = this._get_possible_sequences();\n      if (sequence_combos.length) {\n        for (l = 0, len = sequence_combos.length; l < len; l++) {\n          combo = sequence_combos[l];\n          this._prevent_default(e, combo.prevent_default);\n        }\n        if (this._sequence_timer) {\n          clearTimeout(this._sequence_timer);\n        }\n        if (this.sequence_delay > -1) {\n          this._sequence_timer = setTimeout((function(_this) {\n            return function() {\n              return _this._sequence = [];\n            };\n          })(this), this.sequence_delay);\n        }\n      } else {\n        this._sequence = [];\n      }\n    };\n\n    Listener.prototype._get_sequence = function(key) {\n      var combo, i, j, l, len, m, match, n, ref, ref1, ref2, seq_key, sequence;\n      ref = this._registered_combos;\n      for (l = 0, len = ref.length; l < len; l++) {\n        combo = ref[l];\n        if (!combo.is_sequence) {\n          continue;\n        }\n        for (j = m = 1, ref1 = this._sequence.length; 1 <= ref1 ? m <= ref1 : m >= ref1; j = 1 <= ref1 ? ++m : --m) {\n          sequence = (_filter_array(this._sequence, function(seq_key) {\n            if (indexOf.call(combo.keys, \"shift\") >= 0) {\n              return true;\n            }\n            return seq_key !== \"shift\";\n          })).slice(-j);\n          if (combo.keys.length !== sequence.length) {\n            continue;\n          }\n          for (i = n = 0, ref2 = sequence.length; 0 <= ref2 ? n < ref2 : n > ref2; i = 0 <= ref2 ? ++n : --n) {\n            seq_key = sequence[i];\n            if (indexOf.call(combo.keys, \"shift\") < 0) {\n              if (seq_key === \"shift\") {\n                continue;\n              }\n            }\n            if (key === \"shift\" && indexOf.call(combo.keys, \"shift\") < 0) {\n              continue;\n            }\n            if (combo.keys[i] === seq_key) {\n              match = true;\n            } else {\n              match = false;\n              break;\n            }\n          }\n        }\n        if (match) {\n          if (combo.is_exclusive) {\n            this._sequence = [];\n          }\n          return combo;\n        }\n      }\n      return false;\n    };\n\n    Listener.prototype._receive_input = function(e, is_keydown) {\n      var key, ref;\n      if (this._prevent_capture) {\n        if (this._keys_down.length) {\n          this._keys_down = [];\n        }\n        return;\n      }\n      key = _convert_key_to_readable((ref = e.keyCode) != null ? ref : e.key);\n      if (!is_keydown && !this._keys_down.length && (key === \"alt\" || key === _metakey)) {\n        return;\n      }\n      if (!key) {\n        return;\n      }\n      if (is_keydown) {\n        return this._key_down(key, e);\n      } else {\n        return this._key_up(key, e);\n      }\n    };\n\n    Listener.prototype._fire = function(event, combo, key_event, is_autorepeat) {\n      if (typeof combo[\"on_\" + event] === \"function\") {\n        this._prevent_default(key_event, combo[\"on_\" + event].call(combo[\"this\"], key_event, combo.count, is_autorepeat) !== true);\n      }\n      if (event === \"release\") {\n        combo.count = 0;\n      }\n      if (event === \"keyup\") {\n        return combo.keyup_fired = true;\n      }\n    };\n\n    Listener.prototype._match_combo_arrays = function(potential_match, match_handler) {\n      var combo_potential_match, l, len, ref, source_combo;\n      ref = this._registered_combos;\n      for (l = 0, len = ref.length; l < len; l++) {\n        source_combo = ref[l];\n        combo_potential_match = potential_match.slice(0);\n        if (source_combo.normalize_caps_lock && indexOf.call(combo_potential_match, \"caps\") >= 0) {\n          combo_potential_match.splice(combo_potential_match.indexOf(\"caps\"), 1);\n        }\n        if ((!source_combo.is_unordered && _compare_arrays_sorted(combo_potential_match, source_combo.keys)) || (source_combo.is_unordered && _compare_arrays(combo_potential_match, source_combo.keys))) {\n          match_handler(source_combo);\n        }\n      }\n    };\n\n    Listener.prototype._fuzzy_match_combo_arrays = function(potential_match, match_handler) {\n      var l, len, ref, source_combo;\n      ref = this._registered_combos;\n      for (l = 0, len = ref.length; l < len; l++) {\n        source_combo = ref[l];\n        if ((!source_combo.is_unordered && _is_array_in_array_sorted(source_combo.keys, potential_match)) || (source_combo.is_unordered && _is_array_in_array(source_combo.keys, potential_match))) {\n          match_handler(source_combo);\n        }\n      }\n    };\n\n    Listener.prototype._keys_remain = function(combo) {\n      var key, keys_remain, l, len, ref;\n      ref = combo.keys;\n      for (l = 0, len = ref.length; l < len; l++) {\n        key = ref[l];\n        if (indexOf.call(this._keys_down, key) >= 0) {\n          keys_remain = true;\n          break;\n        }\n      }\n      return keys_remain;\n    };\n\n    Listener.prototype._key_down = function(key, e) {\n      var combo, combos, event_mod, i, l, len, len1, m, mod, n, potential, potential_combos, ref;\n      for (mod in _modifier_event_mapping) {\n        event_mod = _modifier_event_mapping[mod];\n        if (!e[event_mod]) {\n          continue;\n        }\n        if (mod === key || indexOf.call(this._keys_down, mod) >= 0) {\n          continue;\n        }\n        this._keys_down.push(mod);\n      }\n      for (mod in _modifier_event_mapping) {\n        event_mod = _modifier_event_mapping[mod];\n        if (mod === key) {\n          continue;\n        }\n        if (indexOf.call(this._keys_down, mod) >= 0 && !e[event_mod]) {\n          if (mod === \"cmd\" && _metakey !== \"cmd\") {\n            continue;\n          }\n          for (i = l = 0, ref = this._keys_down.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n            if (this._keys_down[i] === mod) {\n              this._keys_down.splice(i, 1);\n            }\n          }\n        }\n      }\n      combos = this._get_active_combos(key);\n      potential_combos = this._get_potential_combos(key);\n      for (m = 0, len = combos.length; m < len; m++) {\n        combo = combos[m];\n        this._handle_combo_down(combo, potential_combos, key, e);\n      }\n      if (potential_combos.length) {\n        for (n = 0, len1 = potential_combos.length; n < len1; n++) {\n          potential = potential_combos[n];\n          this._prevent_default(e, potential.prevent_default);\n        }\n      }\n      if (indexOf.call(this._keys_down, key) < 0) {\n        this._keys_down.push(key);\n      }\n    };\n\n    Listener.prototype._handle_combo_down = function(combo, potential_combos, key, e) {\n      var is_autorepeat, is_other_exclusive, l, len, potential_combo, result;\n      if (indexOf.call(combo.keys, key) < 0) {\n        return false;\n      }\n      this._prevent_default(e, combo && combo.prevent_default);\n      is_autorepeat = false;\n      if (indexOf.call(this._keys_down, key) >= 0) {\n        is_autorepeat = true;\n        if (!combo.allows_key_repeat()) {\n          return false;\n        }\n      }\n      result = this._add_to_active_combos(combo, key);\n      combo.keyup_fired = false;\n      is_other_exclusive = false;\n      if (combo.is_exclusive) {\n        for (l = 0, len = potential_combos.length; l < len; l++) {\n          potential_combo = potential_combos[l];\n          if (potential_combo.is_exclusive && potential_combo.keys.length > combo.keys.length) {\n            is_other_exclusive = true;\n            break;\n          }\n        }\n      }\n      if (!is_other_exclusive) {\n        if (combo.is_counting && typeof combo.on_keydown === \"function\") {\n          combo.count += 1;\n        }\n        if (result) {\n          return this._fire(\"keydown\", combo, e, is_autorepeat);\n        }\n      }\n    };\n\n    Listener.prototype._key_up = function(key, e) {\n      var active_combo, active_combos_length, combo, combos, i, l, len, len1, len2, m, n, o, ref, ref1, ref2, sequence_combo;\n      sequence_combo = this._get_sequence(key);\n      if (sequence_combo) {\n        this._fire(\"keyup\", sequence_combo, e);\n      }\n      if (indexOf.call(this._keys_down, key) < 0) {\n        return false;\n      }\n      for (i = l = 0, ref = this._keys_down.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n        if (this._keys_down[i] === key) {\n          this._keys_down.splice(i, 1);\n          break;\n        }\n      }\n      active_combos_length = this._active_combos.length;\n      combos = [];\n      ref1 = this._active_combos;\n      for (m = 0, len = ref1.length; m < len; m++) {\n        active_combo = ref1[m];\n        if (indexOf.call(active_combo.keys, key) >= 0) {\n          combos.push(active_combo);\n        }\n      }\n      for (n = 0, len1 = combos.length; n < len1; n++) {\n        combo = combos[n];\n        this._handle_combo_up(combo, e, key);\n      }\n      if (active_combos_length > 1) {\n        ref2 = this._active_combos;\n        for (o = 0, len2 = ref2.length; o < len2; o++) {\n          active_combo = ref2[o];\n          if (active_combo === void 0 || indexOf.call(combos, active_combo) >= 0) {\n            continue;\n          }\n          if (!this._keys_remain(active_combo)) {\n            this._remove_from_active_combos(active_combo);\n          }\n        }\n      }\n    };\n\n    Listener.prototype._handle_combo_up = function(combo, e, key) {\n      var keys_down, keys_remaining;\n      this._prevent_default(e, combo && combo.prevent_default);\n      keys_remaining = this._keys_remain(combo);\n      if (!combo.keyup_fired) {\n        keys_down = this._keys_down.slice();\n        keys_down.push(key);\n        if (!combo.is_solitary || _compare_arrays(keys_down, combo.keys)) {\n          this._fire(\"keyup\", combo, e);\n          if (combo.is_counting && typeof combo.on_keyup === \"function\" && typeof combo.on_keydown !== \"function\") {\n            combo.count += 1;\n          }\n        }\n      }\n      if (!keys_remaining) {\n        this._fire(\"release\", combo, e);\n        this._remove_from_active_combos(combo);\n      }\n    };\n\n    Listener.prototype.simple_combo = function(keys, callback) {\n      return this.register_combo({\n        keys: keys,\n        on_keydown: callback\n      });\n    };\n\n    Listener.prototype.counting_combo = function(keys, count_callback) {\n      return this.register_combo({\n        keys: keys,\n        is_counting: true,\n        is_unordered: false,\n        on_keydown: count_callback\n      });\n    };\n\n    Listener.prototype.sequence_combo = function(keys, callback) {\n      return this.register_combo({\n        keys: keys,\n        on_keydown: callback,\n        is_sequence: true,\n        is_exclusive: true\n      });\n    };\n\n    Listener.prototype.register_combo = function(combo_dictionary) {\n      var combo, property, ref, value;\n      if (typeof combo_dictionary[\"keys\"] === \"string\") {\n        combo_dictionary[\"keys\"] = combo_dictionary[\"keys\"].split(\" \");\n      }\n      ref = this._defaults;\n      for (property in ref) {\n        if (!hasProp.call(ref, property)) continue;\n        value = ref[property];\n        if (combo_dictionary[property] === void 0) {\n          combo_dictionary[property] = value;\n        }\n      }\n      combo = new Combo(combo_dictionary);\n      if (_validate_combo(combo)) {\n        this._registered_combos.push(combo);\n        return combo;\n      }\n    };\n\n    Listener.prototype.register_many = function(combo_array) {\n      var combo, l, len, results;\n      results = [];\n      for (l = 0, len = combo_array.length; l < len; l++) {\n        combo = combo_array[l];\n        results.push(this.register_combo(combo));\n      }\n      return results;\n    };\n\n    Listener.prototype.unregister_combo = function(keys_or_combo) {\n      var combo, l, len, ref, results, unregister_combo;\n      if (!keys_or_combo) {\n        return false;\n      }\n      normalize_combo(keys_or_combo);\n      unregister_combo = (function(_this) {\n        return function(combo) {\n          var i, l, ref, results;\n          results = [];\n          for (i = l = 0, ref = _this._registered_combos.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n            if (combo === _this._registered_combos[i]) {\n              _this._registered_combos.splice(i, 1);\n              break;\n            } else {\n              results.push(void 0);\n            }\n          }\n          return results;\n        };\n      })(this);\n      if (keys_or_combo instanceof Combo) {\n        return unregister_combo(keys_or_combo);\n      } else {\n        ref = this._registered_combos;\n        results = [];\n        for (l = 0, len = ref.length; l < len; l++) {\n          combo = ref[l];\n          if (combo == null) {\n            continue;\n          }\n          if ((combo.is_unordered && _compare_arrays(keys_or_combo, combo.keys)) || (!combo.is_unordered && _compare_arrays_sorted(keys_or_combo, combo.keys))) {\n            results.push(unregister_combo(combo));\n          } else {\n            results.push(void 0);\n          }\n        }\n        return results;\n      }\n    };\n\n    Listener.prototype.unregister_many = function(combo_array) {\n      var combo, l, len, results;\n      results = [];\n      for (l = 0, len = combo_array.length; l < len; l++) {\n        combo = combo_array[l];\n        results.push(this.unregister_combo(combo));\n      }\n      return results;\n    };\n\n    Listener.prototype.get_registered_combos = function() {\n      return this._registered_combos;\n    };\n\n    Listener.prototype.reset = function() {\n      return this._registered_combos = [];\n    };\n\n    Listener.prototype.listen = function() {\n      return this._prevent_capture = false;\n    };\n\n    Listener.prototype.stop_listening = function() {\n      return this._prevent_capture = true;\n    };\n\n    Listener.prototype.get_meta_key = function() {\n      return _metakey;\n    };\n\n    return Listener;\n\n  })();\n\n  _decide_meta_key = function() {\n    if (navigator.userAgent.indexOf(\"Mac OS X\") !== -1) {\n      _metakey = \"cmd\";\n    }\n  };\n\n  _change_keycodes_by_browser = function() {\n    if (navigator.userAgent.indexOf(\"Opera\") !== -1) {\n      _keycode_dictionary[\"17\"] = \"cmd\";\n    }\n  };\n\n  _convert_key_to_readable = function(k) {\n    return _keycode_dictionary[k];\n  };\n\n  _filter_array = function(array, callback) {\n    var element;\n    if (array.filter) {\n      return array.filter(callback);\n    } else {\n      return (function() {\n        var l, len, results;\n        results = [];\n        for (l = 0, len = array.length; l < len; l++) {\n          element = array[l];\n          if (callback(element)) {\n            results.push(element);\n          }\n        }\n        return results;\n      })();\n    }\n  };\n\n  _compare_arrays = function(a1, a2) {\n    var item, l, len;\n    if (a1.length !== a2.length) {\n      return false;\n    }\n    for (l = 0, len = a1.length; l < len; l++) {\n      item = a1[l];\n      if (indexOf.call(a2, item) >= 0) {\n        continue;\n      }\n      return false;\n    }\n    return true;\n  };\n\n  _compare_arrays_sorted = function(a1, a2) {\n    var i, l, ref;\n    if (a1.length !== a2.length) {\n      return false;\n    }\n    for (i = l = 0, ref = a1.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {\n      if (a1[i] !== a2[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  _is_array_in_array = function(a1, a2) {\n    var item, l, len;\n    for (l = 0, len = a1.length; l < len; l++) {\n      item = a1[l];\n      if (indexOf.call(a2, item) < 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  _index_of_in_array = Array.prototype.indexOf || function(a, item) {\n    var i, l, ref;\n    for (i = l = 0, ref = a.length; 0 <= ref ? l <= ref : l >= ref; i = 0 <= ref ? ++l : --l) {\n      if (a[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  _is_array_in_array_sorted = function(a1, a2) {\n    var index, item, l, len, prev;\n    prev = 0;\n    for (l = 0, len = a1.length; l < len; l++) {\n      item = a1[l];\n      index = _index_of_in_array.call(a2, item);\n      if (index >= prev) {\n        prev = index;\n      } else {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  _log_error = function() {\n    if (keypress.debug) {\n      return console.log.apply(console, arguments);\n    }\n  };\n\n  _key_is_valid = function(key) {\n    var _, valid, valid_key;\n    valid = false;\n    for (_ in _keycode_dictionary) {\n      valid_key = _keycode_dictionary[_];\n      if (key === valid_key) {\n        valid = true;\n        break;\n      }\n    }\n    return valid;\n  };\n\n  _validate_combo = function(combo) {\n    var i, key, l, len, len1, m, mod_key, non_modifier_keys, property, ref, validated, value;\n    validated = true;\n    if (!combo.keys.length) {\n      _log_error(\"You're trying to bind a combo with no keys:\", combo);\n    }\n    normalize_combo(combo.keys);\n    ref = combo.keys;\n    for (l = 0, len = ref.length; l < len; l++) {\n      key = ref[l];\n      if (!_key_is_valid(key)) {\n        _log_error(\"Do not recognize the key \\\"\" + key + \"\\\"\");\n        validated = false;\n      }\n    }\n    if (indexOf.call(combo.keys, \"meta\") >= 0 || indexOf.call(combo.keys, \"cmd\") >= 0) {\n      non_modifier_keys = combo.keys.slice();\n      for (m = 0, len1 = _modifier_keys.length; m < len1; m++) {\n        mod_key = _modifier_keys[m];\n        if ((i = _index_of_in_array.call(non_modifier_keys, mod_key)) > -1) {\n          non_modifier_keys.splice(i, 1);\n        }\n      }\n      if (non_modifier_keys.length > 1) {\n        _log_error(\"META and CMD key combos cannot have more than 1 non-modifier keys\", combo, non_modifier_keys);\n        validated = false;\n      }\n    }\n    for (property in combo) {\n      value = combo[property];\n      if (_factory_defaults[property] === \"undefined\") {\n        _log_error(\"The property \" + property + \" is not a valid combo property. Your combo has still been registered.\");\n      }\n    }\n    return validated;\n  };\n\n  _modifier_event_mapping = {\n    \"cmd\": \"metaKey\",\n    \"ctrl\": \"ctrlKey\",\n    \"shift\": \"shiftKey\",\n    \"alt\": \"altKey\"\n  };\n\n  _keycode_alternate_names = {\n    \"escape\": \"esc\",\n    \"control\": \"ctrl\",\n    \"command\": \"cmd\",\n    \"break\": \"pause\",\n    \"windows\": \"cmd\",\n    \"option\": \"alt\",\n    \"caps_lock\": \"caps\",\n    \"apostrophe\": \"\\'\",\n    \"semicolon\": \";\",\n    \"tilde\": \"~\",\n    \"accent\": \"`\",\n    \"scroll_lock\": \"scroll\",\n    \"num_lock\": \"num\"\n  };\n\n  _keycode_dictionary = {\n    0: \"\\\\\",\n    8: \"backspace\",\n    9: \"tab\",\n    12: \"num\",\n    13: \"enter\",\n    16: \"shift\",\n    17: \"ctrl\",\n    18: \"alt\",\n    19: \"pause\",\n    20: \"caps\",\n    27: \"esc\",\n    32: \"space\",\n    33: \"pageup\",\n    34: \"pagedown\",\n    35: \"end\",\n    36: \"home\",\n    37: \"left\",\n    38: \"up\",\n    39: \"right\",\n    40: \"down\",\n    44: \"print\",\n    45: \"insert\",\n    46: \"delete\",\n    48: \"0\",\n    49: \"1\",\n    50: \"2\",\n    51: \"3\",\n    52: \"4\",\n    53: \"5\",\n    54: \"6\",\n    55: \"7\",\n    56: \"8\",\n    57: \"9\",\n    65: \"a\",\n    66: \"b\",\n    67: \"c\",\n    68: \"d\",\n    69: \"e\",\n    70: \"f\",\n    71: \"g\",\n    72: \"h\",\n    73: \"i\",\n    74: \"j\",\n    75: \"k\",\n    76: \"l\",\n    77: \"m\",\n    78: \"n\",\n    79: \"o\",\n    80: \"p\",\n    81: \"q\",\n    82: \"r\",\n    83: \"s\",\n    84: \"t\",\n    85: \"u\",\n    86: \"v\",\n    87: \"w\",\n    88: \"x\",\n    89: \"y\",\n    90: \"z\",\n    91: \"cmd\",\n    92: \"cmd\",\n    93: \"cmd\",\n    96: \"num_0\",\n    97: \"num_1\",\n    98: \"num_2\",\n    99: \"num_3\",\n    100: \"num_4\",\n    101: \"num_5\",\n    102: \"num_6\",\n    103: \"num_7\",\n    104: \"num_8\",\n    105: \"num_9\",\n    106: \"num_multiply\",\n    107: \"num_add\",\n    108: \"num_enter\",\n    109: \"num_subtract\",\n    110: \"num_decimal\",\n    111: \"num_divide\",\n    112: \"f1\",\n    113: \"f2\",\n    114: \"f3\",\n    115: \"f4\",\n    116: \"f5\",\n    117: \"f6\",\n    118: \"f7\",\n    119: \"f8\",\n    120: \"f9\",\n    121: \"f10\",\n    122: \"f11\",\n    123: \"f12\",\n    124: \"print\",\n    144: \"num\",\n    145: \"scroll\",\n    186: \";\",\n    187: \"=\",\n    188: \",\",\n    189: \"-\",\n    190: \".\",\n    191: \"/\",\n    192: \"`\",\n    219: \"[\",\n    220: \"\\\\\",\n    221: \"]\",\n    222: \"\\'\",\n    223: \"`\",\n    224: \"cmd\",\n    225: \"alt\",\n    57392: \"ctrl\",\n    63289: \"num\",\n    59: \";\",\n    61: \"=\",\n    173: \"-\"\n  };\n\n  keypress._keycode_dictionary = _keycode_dictionary;\n\n  keypress._is_array_in_array_sorted = _is_array_in_array_sorted;\n\n  _decide_meta_key();\n\n  _change_keycodes_by_browser();\n\n  if (typeof define === \"function\" && define.amd) {\n    define([], function() {\n      return keypress;\n    });\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    exports.keypress = keypress;\n  } else {\n    window.keypress = keypress;\n  }\n\n}).call(this);\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","hasProp","hasOwnProperty","indexOf","item","i","l","length","_factory_defaults","is_unordered","is_counting","is_exclusive","is_solitary","prevent_default","prevent_repeat","normalize_caps_lock","_modifier_keys","_metakey","normalize_combo","keys_or_combo","alt_name","ref","split","Array","isArray","results","key","_keycode_alternate_names","splice","push","_log_error","keypress","Combo","dictionary","property","call","value","keys","count","prototype","allows_key_repeat","Combo.prototype.allows_key_repeat","on_keydown","reset","Combo.prototype.reset","keyup_fired","Listener","element","defaults","jQuery","should_force_event_defaults","should_suppress_event_defaults","sequence_delay","_registered_combos","_keys_down","_active_combos","_sequence","_sequence_timer","_prevent_capture","_defaults","document","body","attach_handler","target","event","handler","goog","events","listen","e","getBrowserEvent","keydown_event","_this","ref1","window","should_auto_keyup","_convert_key_to_readable","keyCode","_receive_input","keyup_event","blur_event","len","_key_up","destroy","Listener.prototype.destroy","remove_handler","unlisten","_cmd_bug_check","Listener.prototype._cmd_bug_check","combo_keys","_prevent_default","Listener.prototype._prevent_default","should_prevent","preventDefault","returnValue","stopPropagation","_get_active_combos","Listener.prototype._get_active_combos","active_combos","keys_down","_filter_array","down_key","_match_combo_arrays","match","_get_potential_combos","Listener.prototype._get_potential_combos","potentials","combo","is_sequence","_add_to_active_combos","Listener.prototype._add_to_active_combos","active_combo","should_replace","should_prepend","already_replaced","active_keys","m","active_key","n","len1","combo_key","unshift","_remove_from_active_combos","Listener.prototype._remove_from_active_combos","_get_possible_sequences","Listener.prototype._get_possible_sequences","ref2","matches","j","sequence","slice","_add_key_to_sequence","Listener.prototype._add_key_to_sequence","sequence_combos","clearTimeout","setTimeout","_get_sequence","Listener.prototype._get_sequence","seq_key","Listener.prototype._receive_input","is_keydown","_key_down","_fire","Listener.prototype._fire","key_event","is_autorepeat","Listener.prototype._match_combo_arrays","potential_match","match_handler","source_combo","combo_potential_match","_compare_arrays_sorted","_compare_arrays","_fuzzy_match_combo_arrays","Listener.prototype._fuzzy_match_combo_arrays","_is_array_in_array_sorted","_is_array_in_array","_keys_remain","Listener.prototype._keys_remain","keys_remain","Listener.prototype._key_down","combos","mod","_modifier_event_mapping","event_mod","potential_combos","_handle_combo_down","potential","Listener.prototype._handle_combo_down","result","is_other_exclusive","potential_combo","Listener.prototype._key_up","active_combos_length","sequence_combo","_handle_combo_up","o","len2","Listener.prototype._handle_combo_up","keys_remaining","on_keyup","simple_combo","Listener.prototype.simple_combo","callback","register_combo","counting_combo","Listener.prototype.counting_combo","count_callback","Listener.prototype.sequence_combo","Listener.prototype.register_combo","combo_dictionary","_validate_combo","register_many","Listener.prototype.register_many","combo_array","unregister_combo","Listener.prototype.unregister_combo","unregister_many","Listener.prototype.unregister_many","get_registered_combos","Listener.prototype.get_registered_combos","Listener.prototype.reset","Listener.prototype.listen","stop_listening","Listener.prototype.stop_listening","get_meta_key","Listener.prototype.get_meta_key","k","_keycode_dictionary","array","filter","a1","a2","_index_of_in_array","a","prev","index","debug","console","log","apply","arguments","_key_is_valid","_","valid","valid_key","validated","non_modifier_keys","mod_key","navigator","userAgent","define","amd"]
}
