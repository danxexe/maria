{
"version":3,
"file":"goog.dom.abstractmultirange.js",
"lineCount":38,
"mappings":"AAsBAA,IAAAC,QAAA,CAAa,6BAAb,CAAA;AAEAD,IAAAE,QAAA,CAAa,YAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,UAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,wBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,oBAAb,CAAA;AAUA;;;;AAAAF,IAAAG,IAAAC,mBAAA,GAA8BC,QAAQ,EAAG;CAAzC;AACAL,IAAAM,SAAA,CAAcN,IAAAG,IAAAC,mBAAd,EAA2CJ,IAAAG,IAAAI,cAA3C,CAAA;AAIA,iBAAAP,IAAAG,IAAAC,mBAAAI,UAAAC,cAAA,GAAsDC,QAAQ,CAC1DC,UAD0D,EAC9CC,gBAD8C,CAC5B;AAIhC,yCAAuCC,SAAS,IAAAC,cAAA,EAAhD;AACA,MAAIC,cAAcJ,UAAAG,cAAA,EAAlB;AAEA,MAAIE,KAAKJ,gBAAA,GAAmBZ,IAAAiB,MAAAC,KAAnB,GAAqClB,IAAAiB,MAAAE,MAA9C;AACA,SAAOH,EAAA,CAAGD,WAAH,EAAgB,QAAQ,CAACJ,UAAD,CAAa;AAC1C,WAAOX,IAAAiB,MAAAC,KAAA,CAAgBL,MAAhB,EAAwB,QAAQ,CAACO,KAAD,CAAQ;AAC7C,aAAOA,KAAAX,cAAA,CAAoBE,UAApB,EAAgCC,gBAAhC,CAAP;AAD6C,KAAxC,CAAP;AAD0C,GAArC,CAAP;AARgC,CADlC;AAkBA,iBAAAZ,IAAAG,IAAAC,mBAAAI,UAAAa,aAAA,GAAqDC,QAAQ,CACzDC,IADyD,EACnDX,gBADmD,CACjC;AAC1B,SAAO,IAAAH,cAAA,CACHT,IAAAG,IAAAqB,UAAAC,uBAAA,CAA0CF,IAA1C,CADG,EAC8CX,gBAD9C,CAAP;AAD0B,CAD5B;AASA,iBAAAZ,IAAAG,IAAAC,mBAAAI,UAAAkB,WAAA,GAAmDC,QAAQ,CAACJ,IAAD,EAAOK,MAAP,CAAe;AACxE,MAAIA,MAAJ;AACE5B,QAAAG,IAAA0B,oBAAA,CAA6BN,IAA7B,EAAmC,IAAAO,aAAA,EAAnC,CAAA;AADF;AAGE9B,QAAAG,IAAA4B,mBAAA,CAA4BR,IAA5B,EAAkC,IAAAS,WAAA,EAAlC,CAAA;AAHF;AAKA,SAAOT,IAAP;AANwE,CAA1E;AAWA,iBAAAvB,IAAAG,IAAAC,mBAAAI,UAAAyB,kBAAA,GAA0DC,QAAQ,CAC9DC,SAD8D,EACnDC,OADmD,CAC1C;AACtB,MAAAV,WAAA,CAAgBS,SAAhB,EAA2B,IAA3B,CAAA;AACA,MAAAT,WAAA,CAAgBU,OAAhB,EAAyB,KAAzB,CAAA;AAFsB,CADxB;;",
"sources":["goog/dom/abstractmultirange.js"],
"sourcesContent":["// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for working with ranges comprised of multiple\n * sub-ranges.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\n\ngoog.provide('goog.dom.AbstractMultiRange');\n\ngoog.require('goog.array');\ngoog.require('goog.dom');\ngoog.require('goog.dom.AbstractRange');\ngoog.require('goog.dom.TextRange');\n\n\n\n/**\n * Creates a new multi range with no properties.  Do not use this\n * constructor: use one of the goog.dom.Range.createFrom* methods instead.\n * @constructor\n * @extends {goog.dom.AbstractRange}\n */\ngoog.dom.AbstractMultiRange = function() {};\ngoog.inherits(goog.dom.AbstractMultiRange, goog.dom.AbstractRange);\n\n\n/** @override */\ngoog.dom.AbstractMultiRange.prototype.containsRange = function(\n    otherRange, opt_allowPartial) {\n  // TODO(user): This will incorrectly return false if two (or more) adjacent\n  // elements are both in the control range, and are also in the text range\n  // being compared to.\n  var /** !Array<?goog.dom.TextRange> */ ranges = this.getTextRanges();\n  var otherRanges = otherRange.getTextRanges();\n\n  var fn = opt_allowPartial ? goog.array.some : goog.array.every;\n  return fn(otherRanges, function(otherRange) {\n    return goog.array.some(ranges, function(range) {\n      return range.containsRange(otherRange, opt_allowPartial);\n    });\n  });\n};\n\n\n/** @override */\ngoog.dom.AbstractMultiRange.prototype.containsNode = function(\n    node, opt_allowPartial) {\n  return this.containsRange(\n      goog.dom.TextRange.createFromNodeContents(node), opt_allowPartial);\n};\n\n\n\n/** @override */\ngoog.dom.AbstractMultiRange.prototype.insertNode = function(node, before) {\n  if (before) {\n    goog.dom.insertSiblingBefore(node, this.getStartNode());\n  } else {\n    goog.dom.insertSiblingAfter(node, this.getEndNode());\n  }\n  return node;\n};\n\n\n/** @override */\ngoog.dom.AbstractMultiRange.prototype.surroundWithNodes = function(\n    startNode, endNode) {\n  this.insertNode(startNode, true);\n  this.insertNode(endNode, false);\n};\n"],
"names":["goog","provide","require","dom","AbstractMultiRange","goog.dom.AbstractMultiRange","inherits","AbstractRange","prototype","containsRange","goog.dom.AbstractMultiRange.prototype.containsRange","otherRange","opt_allowPartial","ranges","getTextRanges","otherRanges","fn","array","some","every","range","containsNode","goog.dom.AbstractMultiRange.prototype.containsNode","node","TextRange","createFromNodeContents","insertNode","goog.dom.AbstractMultiRange.prototype.insertNode","before","insertSiblingBefore","getStartNode","insertSiblingAfter","getEndNode","surroundWithNodes","goog.dom.AbstractMultiRange.prototype.surroundWithNodes","startNode","endNode"]
}
