{
"version":3,
"file":"goog.html.legacyconversions.js",
"lineCount":63,
"mappings":"AAkEAA,IAAAC,QAAA,CAAa,6BAAb,CAAA;AAEAD,IAAAE,QAAA,CAAa,oBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,sBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,qBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,0BAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,mBAAb,CAAA;AACAF,IAAAE,QAAA,CAAa,8BAAb,CAAA;AAaA;;;;AAAAF,IAAAG,KAAAC,kBAAAC,mBAAA,GAAiDC,QAAQ,CAACH,IAAD,CAAO;AAC9DH,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAAK,SAAAC,+CAAA,CACHN,IADG,EACG,IADH,CAAP;AAF8D,CAAhE;AAiBA;;;;AAAAH,IAAAG,KAAAC,kBAAAM,qBAAA,GAAmDC,QAAQ,CAACC,MAAD,CAAS;AAClEZ,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAAU,WAAAC,iDAAA,CACHF,MADG,CAAP;AAFkE,CAApE;AAiBA;;;;AAAAZ,IAAAG,KAAAC,kBAAAW,oBAAA,GAAkDC,QAAQ,CAACC,KAAD,CAAQ;AAChEjB,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAAe,UAAAC,gDAAA,CACHF,KADG,CAAP;AAFgE,CAAlE;AAiBA;;;;AAAAjB,IAAAG,KAAAC,kBAAAgB,yBAAA,GAAuDC,QAAQ,CAACC,UAAD,CAAa;AAC1EtB,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAAoB,eAAAC,qDAAA,CACmDF,UADnD,CAAP;AAF0E,CAA5E;AAiBA;;;;AAAAtB,IAAAG,KAAAC,kBAAAqB,kBAAA,GAAgDC,QAAQ,CAACC,GAAD,CAAM;AAC5D3B,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAAyB,QAAAC,8CAAA,CAAgEF,GAAhE,CAAP;AAF4D,CAA9D;AAgBA;;;;AAAA3B,IAAAG,KAAAC,kBAAA0B,6BAAA,GAA2DC,QAAQ,CAACJ,GAAD,CAAM;AACvE3B,MAAAG,KAAAC,kBAAAG,gBAAA,EAAA;AACA,SAAOP,IAAAG,KAAA6B,mBAAAC,yDAAA,CACuDN,GADvD,CAAP;AAFuE,CAAzE;AASA,6CAAA3B,IAAAG,KAAAC,kBAAAG,gBAAA,GAA8CP,IAAAkC,aAA9C;AAUA;;;AAAAlC,IAAAG,KAAAC,kBAAA+B,kBAAA,GAAgDC,QAAQ,CAACC,QAAD,CAAW;AACjErC,MAAAG,KAAAC,kBAAAG,gBAAA,GAA8C8B,QAA9C;AADiE,CAAnE;;",
"sources":["goog/html/legacyconversions.js"],
"sourcesContent":["// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Transitional utilities to unsafely trust random strings as\n * goog.html types. Intended for temporary use when upgrading a library that\n * used to accept plain strings to use safe types, but where it's not\n * practical to transitively update callers.\n *\n * IMPORTANT: No new code should use the conversion functions in this file,\n * they are intended for refactoring old code to use goog.html types. New code\n * should construct goog.html types via their APIs, template systems or\n * sanitizers. If that\u2019s not possible it should use\n * goog.html.uncheckedconversions and undergo security review.\n\n *\n * The semantics of the conversions in goog.html.legacyconversions are very\n * different from the ones provided by goog.html.uncheckedconversions. The\n * latter are for use in code where it has been established through manual\n * security review that the value produced by a piece of code will always\n * satisfy the SafeHtml contract (e.g., the output of a secure HTML sanitizer).\n * In uses of goog.html.legacyconversions, this guarantee is not given -- the\n * value in question originates in unreviewed legacy code and there is no\n * guarantee that it satisfies the SafeHtml contract.\n *\n * There are only three valid uses of legacyconversions:\n *\n * 1. Introducing a goog.html version of a function which currently consumes\n * string and passes that string to a DOM API which can execute script - and\n * hence cause XSS - like innerHTML. For example, Dialog might expose a\n * setContent method which takes a string and sets the innerHTML property of\n * an element with it. In this case a setSafeHtmlContent function could be\n * added, consuming goog.html.SafeHtml instead of string, and using\n * goog.dom.safe.setInnerHtml instead of directly setting innerHTML.\n * setContent could then internally use legacyconversions to create a SafeHtml\n * from string and pass the SafeHtml to setSafeHtmlContent. In this scenario\n * remember to document the use of legacyconversions in the modified setContent\n * and consider deprecating it as well.\n *\n * 2. Automated refactoring of application code which handles HTML as string\n * but needs to call a function which only takes goog.html types. For example,\n * in the Dialog scenario from (1) an alternative option would be to refactor\n * setContent to accept goog.html.SafeHtml instead of string and then refactor\n * all current callers to use legacyconversions to pass SafeHtml. This is\n * generally preferable to (1) because it keeps the library clean of\n * legacyconversions, and makes code sites in application code that are\n * potentially vulnerable to XSS more apparent.\n *\n * 3. Old code which needs to call APIs which consume goog.html types and for\n * which it is prohibitively expensive to refactor to use goog.html types.\n * Generally, this is code where safety from XSS is either hopeless or\n * unimportant.\n */\n\n\ngoog.provide('goog.html.legacyconversions');\n\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.SafeScript');\ngoog.require('goog.html.SafeStyle');\ngoog.require('goog.html.SafeStyleSheet');\ngoog.require('goog.html.SafeUrl');\ngoog.require('goog.html.TrustedResourceUrl');\n\n\n/**\n * Performs an \"unchecked conversion\" from string to SafeHtml for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} html A string to be converted to SafeHtml.\n * @return {!goog.html.SafeHtml} The value of html, wrapped in a SafeHtml\n *     object.\n */\ngoog.html.legacyconversions.safeHtmlFromString = function(html) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\n      html, null /* dir */);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" from string to SafeScript for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} script A string to be converted to SafeScript.\n * @return {!goog.html.SafeScript} The value of script, wrapped in a SafeScript\n *     object.\n */\ngoog.html.legacyconversions.safeScriptFromString = function(script) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\n      script);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" from string to SafeStyle for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} style A string to be converted to SafeStyle.\n * @return {!goog.html.SafeStyle} The value of style, wrapped in a SafeStyle\n *     object.\n */\ngoog.html.legacyconversions.safeStyleFromString = function(style) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\n      style);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" from string to SafeStyleSheet for legacy\n * API purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} styleSheet A string to be converted to SafeStyleSheet.\n * @return {!goog.html.SafeStyleSheet} The value of style sheet, wrapped in\n *     a SafeStyleSheet object.\n */\ngoog.html.legacyconversions.safeStyleSheetFromString = function(styleSheet) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeStyleSheet\n      .createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" from string to SafeUrl for legacy API\n * purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} url A string to be converted to SafeUrl.\n * @return {!goog.html.SafeUrl} The value of url, wrapped in a SafeUrl\n *     object.\n */\ngoog.html.legacyconversions.safeUrlFromString = function(url) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n\n/**\n * Performs an \"unchecked conversion\" from string to TrustedResourceUrl for\n * legacy API purposes.\n *\n * Please read fileoverview documentation before using.\n *\n * @param {string} url A string to be converted to TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} The value of url, wrapped in a\n *     TrustedResourceUrl object.\n */\ngoog.html.legacyconversions.trustedResourceUrlFromString = function(url) {\n  goog.html.legacyconversions.reportCallback_();\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n\n/**\n * @private {function(): undefined}\n */\ngoog.html.legacyconversions.reportCallback_ = goog.nullFunction;\n\n\n/**\n * Sets a function that will be called every time a legacy conversion is\n * performed. The function is called with no parameters but it can use\n * goog.debug.getStacktrace to get a stacktrace.\n *\n * @param {function(): undefined} callback Error callback as defined above.\n */\ngoog.html.legacyconversions.setReportCallback = function(callback) {\n  goog.html.legacyconversions.reportCallback_ = callback;\n};\n"],
"names":["goog","provide","require","html","legacyconversions","safeHtmlFromString","goog.html.legacyconversions.safeHtmlFromString","reportCallback_","SafeHtml","createSafeHtmlSecurityPrivateDoNotAccessOrElse","safeScriptFromString","goog.html.legacyconversions.safeScriptFromString","script","SafeScript","createSafeScriptSecurityPrivateDoNotAccessOrElse","safeStyleFromString","goog.html.legacyconversions.safeStyleFromString","style","SafeStyle","createSafeStyleSecurityPrivateDoNotAccessOrElse","safeStyleSheetFromString","goog.html.legacyconversions.safeStyleSheetFromString","styleSheet","SafeStyleSheet","createSafeStyleSheetSecurityPrivateDoNotAccessOrElse","safeUrlFromString","goog.html.legacyconversions.safeUrlFromString","url","SafeUrl","createSafeUrlSecurityPrivateDoNotAccessOrElse","trustedResourceUrlFromString","goog.html.legacyconversions.trustedResourceUrlFromString","TrustedResourceUrl","createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","nullFunction","setReportCallback","goog.html.legacyconversions.setReportCallback","callback"]
}
