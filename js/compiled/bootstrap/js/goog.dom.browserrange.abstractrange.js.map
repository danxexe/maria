{
"version":3,
"file":"goog.dom.browserrange.abstractrange.js",
"lineCount":184,
"mappings":"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",
"sources":["goog/dom/browserrange/abstractrange.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Definition of the browser range interface.\n *\n * DO NOT USE THIS FILE DIRECTLY.  Use goog.dom.Range instead.\n *\n * @author robbyw@google.com (Robby Walker)\n */\n\n\ngoog.provide('goog.dom.browserrange.AbstractRange');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.RangeEndpoint');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.TextRangeIterator');\ngoog.require('goog.iter');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.string');\ngoog.require('goog.string.StringBuffer');\ngoog.require('goog.userAgent');\n\n\n\n/**\n * The constructor for abstract ranges.  Don't call this from subclasses.\n * @constructor\n */\ngoog.dom.browserrange.AbstractRange = function() {};\n\n\n/**\n * @return {goog.dom.browserrange.AbstractRange} A clone of this range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.clone = goog.abstractMethod;\n\n\n/**\n * Returns the browser native implementation of the range.  Please refrain from\n * using this function - if you find you need the range please add wrappers for\n * the functionality you need rather than just using the native range.\n * @return {Range|TextRange} The browser native range object.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getBrowserRange =\n    goog.abstractMethod;\n\n\n/**\n * Returns the deepest node in the tree that contains the entire range.\n * @return {Node} The deepest node that contains the entire range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getContainer =\n    goog.abstractMethod;\n\n\n/**\n * Returns the node the range starts in.\n * @return {Node} The element or text node the range starts in.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getStartNode =\n    goog.abstractMethod;\n\n\n/**\n * Returns the offset into the node the range starts in.\n * @return {number} The offset into the node the range starts in.  For text\n *     nodes, this is an offset into the node value.  For elements, this is\n *     an offset into the childNodes array.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getStartOffset =\n    goog.abstractMethod;\n\n\n/**\n * @return {goog.math.Coordinate} The coordinate of the selection start node\n *     and offset.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getStartPosition = function() {\n  return this.getPosition_(true);\n};\n\n\n/**\n * Returns the node the range ends in.\n * @return {Node} The element or text node the range ends in.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getEndNode = goog.abstractMethod;\n\n\n/**\n * Returns the offset into the node the range ends in.\n * @return {number} The offset into the node the range ends in.  For text\n *     nodes, this is an offset into the node value.  For elements, this is\n *     an offset into the childNodes array.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getEndOffset =\n    goog.abstractMethod;\n\n\n/**\n * @return {goog.math.Coordinate} The coordinate of the selection end node\n *     and offset.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getEndPosition = function() {\n  return this.getPosition_(false);\n};\n\n\n/**\n * @param {boolean} start Whether to get the position of the start or end.\n * @return {goog.math.Coordinate} The coordinate of the selection point.\n * @private\n */\ngoog.dom.browserrange.AbstractRange.prototype.getPosition_ = function(start) {\n  goog.asserts.assert(\n      this.range_.getClientRects,\n      'Getting selection coordinates is not supported.');\n\n  var rects = this.range_.getClientRects();\n  if (rects.length) {\n    var r = start ? rects[0] : goog.array.peek(rects);\n    return new goog.math.Coordinate(\n        start ? r.left : r.right, start ? r.top : r.bottom);\n  }\n  return null;\n};\n\n\n/**\n * Compares one endpoint of this range with the endpoint of another browser\n * native range object.\n * @param {Range|TextRange} range The browser native range to compare against.\n * @param {goog.dom.RangeEndpoint} thisEndpoint The endpoint of this range\n *     to compare with.\n * @param {goog.dom.RangeEndpoint} otherEndpoint The endpoint of the other\n *     range to compare with.\n * @return {number} 0 if the endpoints are equal, negative if this range\n *     endpoint comes before the other range endpoint, and positive otherwise.\n */\ngoog.dom.browserrange.AbstractRange.prototype.compareBrowserRangeEndpoints =\n    goog.abstractMethod;\n\n\n/**\n * Tests if this range contains the given range.\n * @param {goog.dom.browserrange.AbstractRange} abstractRange The range to test.\n * @param {boolean=} opt_allowPartial If not set or false, the range must be\n *     entirely contained in the selection for this function to return true.\n * @return {boolean} Whether this range contains the given range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.containsRange = function(\n    abstractRange, opt_allowPartial) {\n  // IE sometimes misreports the boundaries for collapsed ranges. So if the\n  // other range is collapsed, make sure the whole range is contained. This is\n  // logically equivalent, and works around IE's bug.\n  var checkPartial = opt_allowPartial && !abstractRange.isCollapsed();\n\n  var range = abstractRange.getBrowserRange();\n  var start = goog.dom.RangeEndpoint.START, end = goog.dom.RangeEndpoint.END;\n\n  try {\n    if (checkPartial) {\n      // There are two ways to not overlap.  Being before, and being after.\n      // Before is represented by this.end before range.start: comparison < 0.\n      // After is represented by this.start after range.end: comparison > 0.\n      // The below is the negation of not overlapping.\n      return this.compareBrowserRangeEndpoints(range, end, start) >= 0 &&\n          this.compareBrowserRangeEndpoints(range, start, end) <= 0;\n\n    } else {\n      // Return true if this range bounds the parameter range from both sides.\n      return this.compareBrowserRangeEndpoints(range, end, end) >= 0 &&\n          this.compareBrowserRangeEndpoints(range, start, start) <= 0;\n    }\n  } catch (e) {\n    if (!goog.userAgent.IE) {\n      throw e;\n    }\n    // IE sometimes throws exceptions when one range is invalid, i.e. points\n    // to a node that has been removed from the document.  Return false in this\n    // case.\n    return false;\n  }\n};\n\n\n/**\n * Tests if this range contains the given node.\n * @param {Node} node The node to test.\n * @param {boolean=} opt_allowPartial If not set or false, the node must be\n *     entirely contained in the selection for this function to return true.\n * @return {boolean} Whether this range contains the given node.\n * @suppress {missingRequire} Cannot depend on goog.dom.browserrange because it\n *     creates a circular dependency.\n */\ngoog.dom.browserrange.AbstractRange.prototype.containsNode = function(\n    node, opt_allowPartial) {\n  /** @suppress {missingRequire} Circular dep with browserrange */\n  return this.containsRange(\n      goog.dom.browserrange.createRangeFromNodeContents(node),\n      opt_allowPartial);\n};\n\n\n/**\n * Tests if the selection is collapsed - i.e. is just a caret.\n * @return {boolean} Whether the range is collapsed.\n */\ngoog.dom.browserrange.AbstractRange.prototype.isCollapsed = goog.abstractMethod;\n\n\n/**\n * @return {string} The text content of the range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getText = goog.abstractMethod;\n\n\n/**\n * Returns the HTML fragment this range selects.  This is slow on all browsers.\n * @return {string} HTML fragment of the range, does not include context\n *     containing elements.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getHtmlFragment = function() {\n  var output = new goog.string.StringBuffer();\n  goog.iter.forEach(this, function(node, ignore, it) {\n    if (node.nodeType == goog.dom.NodeType.TEXT) {\n      output.append(\n          goog.string.htmlEscape(\n              node.nodeValue.substring(\n                  it.getStartTextOffset(), it.getEndTextOffset())));\n    } else if (node.nodeType == goog.dom.NodeType.ELEMENT) {\n      if (it.isEndTag()) {\n        if (goog.dom.canHaveChildren(node)) {\n          output.append('</' + node.tagName + '>');\n        }\n      } else {\n        var shallow = node.cloneNode(false);\n        var html = goog.dom.getOuterHtml(shallow);\n        if (goog.userAgent.IE && node.tagName == goog.dom.TagName.LI) {\n          // For an LI, IE just returns \"<li>\" with no closing tag\n          output.append(html);\n        } else {\n          var index = html.lastIndexOf('<');\n          output.append(index ? html.substr(0, index) : html);\n        }\n      }\n    }\n  }, this);\n\n  return output.toString();\n};\n\n\n/**\n * Returns valid HTML for this range.  This is fast on IE, and semi-fast on\n * other browsers.\n * @return {string} Valid HTML of the range, including context containing\n *     elements.\n */\ngoog.dom.browserrange.AbstractRange.prototype.getValidHtml =\n    goog.abstractMethod;\n\n\n/**\n * Returns a RangeIterator over the contents of the range.  Regardless of the\n * direction of the range, the iterator will move in document order.\n * @param {boolean=} opt_keys Unused for this iterator.\n * @return {!goog.dom.RangeIterator} An iterator over tags in the range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.__iterator__ = function(\n    opt_keys) {\n  return new goog.dom.TextRangeIterator(\n      this.getStartNode(), this.getStartOffset(), this.getEndNode(),\n      this.getEndOffset());\n};\n\n\n// SELECTION MODIFICATION\n\n\n/**\n * Set this range as the selection in its window.\n * @param {boolean=} opt_reverse Whether to select the range in reverse,\n *     if possible.\n */\ngoog.dom.browserrange.AbstractRange.prototype.select = goog.abstractMethod;\n\n\n/**\n * Removes the contents of the range from the document.  As a side effect, the\n * selection will be collapsed.  The behavior of content removal is normalized\n * across browsers.  For instance, IE sometimes creates extra text nodes that\n * a W3C browser does not.  That behavior is corrected for.\n */\ngoog.dom.browserrange.AbstractRange.prototype.removeContents =\n    goog.abstractMethod;\n\n\n/**\n * Surrounds the text range with the specified element (on Mozilla) or with a\n * clone of the specified element (on IE).  Returns a reference to the\n * surrounding element if the operation was successful; returns null if the\n * operation failed.\n * @param {Element} element The element with which the selection is to be\n *    surrounded.\n * @return {Element} The surrounding element (same as the argument on Mozilla,\n *    but not on IE), or null if unsuccessful.\n */\ngoog.dom.browserrange.AbstractRange.prototype.surroundContents =\n    goog.abstractMethod;\n\n\n/**\n * Inserts a node before (or after) the range.  The range may be disrupted\n * beyond recovery because of the way this splits nodes.\n * @param {Node} node The node to insert.\n * @param {boolean} before True to insert before, false to insert after.\n * @return {Node} The node added to the document.  This may be different\n *     than the node parameter because on IE we have to clone it.\n */\ngoog.dom.browserrange.AbstractRange.prototype.insertNode = goog.abstractMethod;\n\n\n/**\n * Surrounds this range with the two given nodes.  The range may be disrupted\n * beyond recovery because of the way this splits nodes.\n * @param {Element} startNode The node to insert at the start.\n * @param {Element} endNode The node to insert at the end.\n */\ngoog.dom.browserrange.AbstractRange.prototype.surroundWithNodes =\n    goog.abstractMethod;\n\n\n/**\n * Collapses the range to one of its boundary points.\n * @param {boolean} toStart Whether to collapse to the start of the range.\n */\ngoog.dom.browserrange.AbstractRange.prototype.collapse = goog.abstractMethod;\n"],
"names":["goog","provide","require","dom","browserrange","AbstractRange","goog.dom.browserrange.AbstractRange","prototype","clone","abstractMethod","getBrowserRange","getContainer","getStartNode","getStartOffset","getStartPosition","goog.dom.browserrange.AbstractRange.prototype.getStartPosition","getPosition_","getEndNode","getEndOffset","getEndPosition","goog.dom.browserrange.AbstractRange.prototype.getEndPosition","goog.dom.browserrange.AbstractRange.prototype.getPosition_","start","asserts","assert","range_","getClientRects","rects","length","r","array","peek","math","Coordinate","left","right","top","bottom","compareBrowserRangeEndpoints","containsRange","goog.dom.browserrange.AbstractRange.prototype.containsRange","abstractRange","opt_allowPartial","checkPartial","isCollapsed","range","RangeEndpoint","START","end","END","e","userAgent","IE","containsNode","goog.dom.browserrange.AbstractRange.prototype.containsNode","node","createRangeFromNodeContents","getText","getHtmlFragment","goog.dom.browserrange.AbstractRange.prototype.getHtmlFragment","output","string","StringBuffer","iter","forEach","ignore","it","nodeType","NodeType","TEXT","append","htmlEscape","nodeValue","substring","getStartTextOffset","getEndTextOffset","ELEMENT","isEndTag","canHaveChildren","tagName","shallow","cloneNode","html","getOuterHtml","TagName","LI","index","lastIndexOf","substr","toString","getValidHtml","__iterator__","goog.dom.browserrange.AbstractRange.prototype.__iterator__","opt_keys","TextRangeIterator","select","removeContents","surroundContents","insertNode","surroundWithNodes","collapse"]
}
