{"version":3,"sources":["maria/views/hoc.cljs"],"mappings":"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","names":["chia.view.class/view*","chia.view.props/to-element","props66197","G__66195","chia.view.class/Component","obj66224","obj66225","maria.views.hoc/bind-atom","_","prop-atom","cljs.core/deref","map__66201","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","args","key","id","name","cljs.core/map?","cljs.core/first","or__4131__auto__","this","component","atom","G__66213","cljs.core/add-watch","old","new","cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2","chia.view/force-update","G__66223","cljs.core/remove-watch","cljs.core/vector?","js/Error","maria.views.hoc/get-frame-element","chia.view/dom-node","obj66233","obj66231","k66232","obj66236","applied-science.js-interop.impl/in?*","js/undefined","k66234","obj66239","G__66230","goog.dom/getFirstElementChild","maria.views.hoc/render-frame!","content","chia.view.render_to_dom.cljs$core$IFn$_invoke$arity$2","chia.view.hiccup.element.cljs$core$IFn$_invoke$arity$1","js/goog.DEBUG","p__66279","map__66280","props66255","G__66253","obj66289","obj66290","maria.views.hoc/Frame","obj66260","obj66258","k66259","obj66265","k66261","obj66270","G__66256","G__66257","goog.dom/appendChild","goog.dom/createDom","G__66278","js/module$node_modules$react_dom$index.unmountComponentAtNode","props"],"sourcesContent":["(ns maria.views.hoc\n  (:require [chia.view :as v]\n            [chia.view.hiccup :as hiccup]\n            [applied-science.js-interop :as j]\n            [goog.dom :as gdom]\n            [\"react-dom\" :as react-dom]))\n\n(v/defclass bind-atom\n                 \"Calls component with value of atom & re-renders when atom changes.\"\n                 {:key               (fn [_ _ prop-atom]\n                                       (let [args @prop-atom\n                                             {:keys [key id name]} (if (map? args)\n                                                                     args\n                                                                     (first args))]\n                                         (or key id name)))\n                  :view/did-mount    (fn [this component atom]\n                                       (some-> atom\n                                               (add-watch this (fn [_ _ old new]\n                                                                 (when (not= old new)\n                                                                   (v/force-update this))))))\n                  :view/will-unmount (fn [this _ atom]\n                                       (some-> atom\n                                               (remove-watch this)))}\n                 [_ component prop-atom]\n                 (let [args @prop-atom]\n                   (cond (vector? args)\n                         (apply component args)\n                         (map? args)\n                         (component args)\n                         :else\n                         (throw (js/Error (str \"Invalid format of prop atom, should be vector or map: \" args))))))\n\n(defn get-frame-element [this]\n  (-> (v/dom-node this)\n      (j/get-in [:contentDocument :body])\n      (gdom/getFirstElementChild)))\n\n(defn render-frame! [this content]\n  (v/render-to-dom (hiccup/element\n                    [:div\n                     [:link {:type \"text/css\"\n                             :rel \"stylesheet\"\n                             :href \"/app.css\"}]\n                     content]) (get-frame-element this)))\n\n(v/defclass Frame\n                 \"Renders component (passed in as child) to an iFrame.\"\n                 {:spec/children [:Element]\n                  :view/did-mount (fn [this content]\n                                    (-> (v/dom-node this)\n                                        (j/get-in [:contentDocument :body])\n                                        (gdom/appendChild (gdom/createDom \"div\")))\n                                    (render-frame! this content))\n                  :view/will-unmount (fn [this]\n                                       (react-dom/unmountComponentAtNode (get-frame-element this)))}\n                 [{:keys [view/props]} component]\n                 [:iframe.bn.shadow-2 props])"]}